syntax = "proto3";
package admin_lecturer_leave;
option go_package = "handlers/admin/lecturer_leave";

message Meta {
  string message = 1;
  uint32 status = 2;
  string code = 3;
}

message Pagination {
  uint32 page = 1;
  uint32 limit = 2;
  uint32 prev = 3;
  uint32 next = 4;
  uint32 total_pages = 5;
  uint32 total_records = 6;
}

message GetListRequest {
  uint32 page = 1;
  uint32 limit = 2;
  string search = 3;
  string study_program_id = 4;
  string id_national_lecturer = 5;
  string semester_id = 6;
  bool is_active = 7;
}

message GetListResponseData {
  string id = 1;
  string name = 2;
  string id_national_lecturer = 3;
  string front_title = 4;
  string back_degree = 5;
  string semester_school_year = 6;
  string semester_type = 7;
  string dikti_study_program_code = 8;
  string study_program_name = 9;
  string study_level_short_name = 10;
  string dikti_study_program_type = 11;
  string start_date = 12;
  string end_date = 13;
  string permit_number = 14;
  string purpose = 15;
  string remarks = 16;
  string file_url = 17;
  string file_path = 18;
  string file_path_type = 19;
}

message GetListResponse {
  Meta meta = 1;
  Pagination pagination = 2;
  repeated GetListResponseData data = 3;
}

message CreateRequest {
  string lecturer_id = 1;
  string semester_id = 2;
  string start_date = 3;
  string permit_number = 4;
  string purpose = 5;
  string remarks = 6;
  string file_path = 7;
  string file_path_type = 8;
}

message CreateResponseData {}

message CreateResponse {
  Meta meta = 1;
  CreateResponseData data = 2;
}

message UpdateRequest {
  string id = 1;
  string permit_number = 2;
  string purpose = 3;
  string remarks = 4;
  string file_path = 5;
  string file_path_type = 6;
}

message UpdateResponseData {}

message UpdateResponse {
  Meta meta = 1;
  UpdateResponseData data = 2;
}

message EndRequest {
  string id = 1;
}

message EndResponseData {}

message EndResponse {
  Meta meta = 1;
  EndResponseData data = 2;
}

service AdminLecturerLeaveHandler {
  rpc GetList(GetListRequest) returns (GetListResponse) {}
  rpc Create(CreateRequest) returns (CreateResponse) {}
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  rpc End(EndRequest) returns (EndResponse) {}
}
