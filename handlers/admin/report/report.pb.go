// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: admin/report.proto

package report

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type StudentStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemesterId string `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
}

func (x *StudentStatusRequest) Reset() {
	*x = StudentStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusRequest) ProtoMessage() {}

func (x *StudentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusRequest.ProtoReflect.Descriptor instead.
func (*StudentStatusRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{2}
}

func (x *StudentStatusRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type StudentStatusResponseDataStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	Total  uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *StudentStatusResponseDataStatus) Reset() {
	*x = StudentStatusResponseDataStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusResponseDataStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusResponseDataStatus) ProtoMessage() {}

func (x *StudentStatusResponseDataStatus) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusResponseDataStatus.ProtoReflect.Descriptor instead.
func (*StudentStatusResponseDataStatus) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{3}
}

func (x *StudentStatusResponseDataStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StudentStatusResponseDataStatus) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StudentStatusResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId        string                             `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName      string                             `protobuf:"bytes,2,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	DiktiStudyProgramCode string                             `protobuf:"bytes,3,opt,name=dikti_study_program_code,json=diktiStudyProgramCode,proto3" json:"dikti_study_program_code"`
	DiktiStudyProgramType string                             `protobuf:"bytes,4,opt,name=dikti_study_program_type,json=diktiStudyProgramType,proto3" json:"dikti_study_program_type"`
	StudyLevelShortName   string                             `protobuf:"bytes,5,opt,name=study_level_short_name,json=studyLevelShortName,proto3" json:"study_level_short_name"`
	Statuses              []*StudentStatusResponseDataStatus `protobuf:"bytes,6,rep,name=statuses,proto3" json:"statuses"`
}

func (x *StudentStatusResponseData) Reset() {
	*x = StudentStatusResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusResponseData) ProtoMessage() {}

func (x *StudentStatusResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusResponseData.ProtoReflect.Descriptor instead.
func (*StudentStatusResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{4}
}

func (x *StudentStatusResponseData) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *StudentStatusResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *StudentStatusResponseData) GetDiktiStudyProgramCode() string {
	if x != nil {
		return x.DiktiStudyProgramCode
	}
	return ""
}

func (x *StudentStatusResponseData) GetDiktiStudyProgramType() string {
	if x != nil {
		return x.DiktiStudyProgramType
	}
	return ""
}

func (x *StudentStatusResponseData) GetStudyLevelShortName() string {
	if x != nil {
		return x.StudyLevelShortName
	}
	return ""
}

func (x *StudentStatusResponseData) GetStatuses() []*StudentStatusResponseDataStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type StudentStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                        `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*StudentStatusResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *StudentStatusResponse) Reset() {
	*x = StudentStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusResponse) ProtoMessage() {}

func (x *StudentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusResponse.ProtoReflect.Descriptor instead.
func (*StudentStatusResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{5}
}

func (x *StudentStatusResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StudentStatusResponse) GetData() []*StudentStatusResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StudentClassGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit          uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Search         string `protobuf:"bytes,3,opt,name=search,proto3" json:"search"`
	StudyProgramId string `protobuf:"bytes,4,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	SemesterId     string `protobuf:"bytes,5,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
}

func (x *StudentClassGradeRequest) Reset() {
	*x = StudentClassGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentClassGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentClassGradeRequest) ProtoMessage() {}

func (x *StudentClassGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentClassGradeRequest.ProtoReflect.Descriptor instead.
func (*StudentClassGradeRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{6}
}

func (x *StudentClassGradeRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *StudentClassGradeRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *StudentClassGradeRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *StudentClassGradeRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *StudentClassGradeRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type StudentClassGradeResponseDataGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GradeCode string `protobuf:"bytes,1,opt,name=grade_code,json=gradeCode,proto3" json:"grade_code"`
	Total     uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *StudentClassGradeResponseDataGrade) Reset() {
	*x = StudentClassGradeResponseDataGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentClassGradeResponseDataGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentClassGradeResponseDataGrade) ProtoMessage() {}

func (x *StudentClassGradeResponseDataGrade) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentClassGradeResponseDataGrade.ProtoReflect.Descriptor instead.
func (*StudentClassGradeResponseDataGrade) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{7}
}

func (x *StudentClassGradeResponseDataGrade) GetGradeCode() string {
	if x != nil {
		return x.GradeCode
	}
	return ""
}

func (x *StudentClassGradeResponseDataGrade) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StudentClassGradeResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId   string                                `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	SubjectName string                                `protobuf:"bytes,2,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	Grades      []*StudentClassGradeResponseDataGrade `protobuf:"bytes,3,rep,name=grades,proto3" json:"grades"`
}

func (x *StudentClassGradeResponseData) Reset() {
	*x = StudentClassGradeResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentClassGradeResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentClassGradeResponseData) ProtoMessage() {}

func (x *StudentClassGradeResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentClassGradeResponseData.ProtoReflect.Descriptor instead.
func (*StudentClassGradeResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{8}
}

func (x *StudentClassGradeResponseData) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *StudentClassGradeResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *StudentClassGradeResponseData) GetGrades() []*StudentClassGradeResponseDataGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

type StudentClassGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Meta                            `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Pagination *Pagination                      `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	Data       []*StudentClassGradeResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *StudentClassGradeResponse) Reset() {
	*x = StudentClassGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentClassGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentClassGradeResponse) ProtoMessage() {}

func (x *StudentClassGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentClassGradeResponse.ProtoReflect.Descriptor instead.
func (*StudentClassGradeResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{9}
}

func (x *StudentClassGradeResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StudentClassGradeResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *StudentClassGradeResponse) GetData() []*StudentClassGradeResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StudentProvinceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId   string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudentForceFrom uint32 `protobuf:"varint,2,opt,name=student_force_from,json=studentForceFrom,proto3" json:"student_force_from"`
	StudentForceTo   uint32 `protobuf:"varint,3,opt,name=student_force_to,json=studentForceTo,proto3" json:"student_force_to"`
}

func (x *StudentProvinceRequest) Reset() {
	*x = StudentProvinceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentProvinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentProvinceRequest) ProtoMessage() {}

func (x *StudentProvinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentProvinceRequest.ProtoReflect.Descriptor instead.
func (*StudentProvinceRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{10}
}

func (x *StudentProvinceRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *StudentProvinceRequest) GetStudentForceFrom() uint32 {
	if x != nil {
		return x.StudentForceFrom
	}
	return 0
}

func (x *StudentProvinceRequest) GetStudentForceTo() uint32 {
	if x != nil {
		return x.StudentForceTo
	}
	return 0
}

type StudentProvinceResponseDataStudentForce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentForce uint32 `protobuf:"varint,1,opt,name=student_force,json=studentForce,proto3" json:"student_force"`
	Total        uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *StudentProvinceResponseDataStudentForce) Reset() {
	*x = StudentProvinceResponseDataStudentForce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentProvinceResponseDataStudentForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentProvinceResponseDataStudentForce) ProtoMessage() {}

func (x *StudentProvinceResponseDataStudentForce) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentProvinceResponseDataStudentForce.ProtoReflect.Descriptor instead.
func (*StudentProvinceResponseDataStudentForce) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{11}
}

func (x *StudentProvinceResponseDataStudentForce) GetStudentForce() uint32 {
	if x != nil {
		return x.StudentForce
	}
	return 0
}

func (x *StudentProvinceResponseDataStudentForce) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StudentProvinceResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceId    uint32                                     `protobuf:"varint,1,opt,name=province_id,json=provinceId,proto3" json:"province_id"`
	ProvinceName  string                                     `protobuf:"bytes,2,opt,name=province_name,json=provinceName,proto3" json:"province_name"`
	StudentForces []*StudentProvinceResponseDataStudentForce `protobuf:"bytes,3,rep,name=student_forces,json=studentForces,proto3" json:"student_forces"`
}

func (x *StudentProvinceResponseData) Reset() {
	*x = StudentProvinceResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentProvinceResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentProvinceResponseData) ProtoMessage() {}

func (x *StudentProvinceResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentProvinceResponseData.ProtoReflect.Descriptor instead.
func (*StudentProvinceResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{12}
}

func (x *StudentProvinceResponseData) GetProvinceId() uint32 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *StudentProvinceResponseData) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *StudentProvinceResponseData) GetStudentForces() []*StudentProvinceResponseDataStudentForce {
	if x != nil {
		return x.StudentForces
	}
	return nil
}

type StudentProvinceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                          `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*StudentProvinceResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *StudentProvinceResponse) Reset() {
	*x = StudentProvinceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentProvinceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentProvinceResponse) ProtoMessage() {}

func (x *StudentProvinceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentProvinceResponse.ProtoReflect.Descriptor instead.
func (*StudentProvinceResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{13}
}

func (x *StudentProvinceResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StudentProvinceResponse) GetData() []*StudentProvinceResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StudentSchoolProvinceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId   string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudentForceFrom uint32 `protobuf:"varint,2,opt,name=student_force_from,json=studentForceFrom,proto3" json:"student_force_from"`
	StudentForceTo   uint32 `protobuf:"varint,3,opt,name=student_force_to,json=studentForceTo,proto3" json:"student_force_to"`
}

func (x *StudentSchoolProvinceRequest) Reset() {
	*x = StudentSchoolProvinceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSchoolProvinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSchoolProvinceRequest) ProtoMessage() {}

func (x *StudentSchoolProvinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSchoolProvinceRequest.ProtoReflect.Descriptor instead.
func (*StudentSchoolProvinceRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{14}
}

func (x *StudentSchoolProvinceRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *StudentSchoolProvinceRequest) GetStudentForceFrom() uint32 {
	if x != nil {
		return x.StudentForceFrom
	}
	return 0
}

func (x *StudentSchoolProvinceRequest) GetStudentForceTo() uint32 {
	if x != nil {
		return x.StudentForceTo
	}
	return 0
}

type StudentSchoolProvinceResponseDataStudentForce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentForce uint32 `protobuf:"varint,1,opt,name=student_force,json=studentForce,proto3" json:"student_force"`
	Total        uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *StudentSchoolProvinceResponseDataStudentForce) Reset() {
	*x = StudentSchoolProvinceResponseDataStudentForce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSchoolProvinceResponseDataStudentForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSchoolProvinceResponseDataStudentForce) ProtoMessage() {}

func (x *StudentSchoolProvinceResponseDataStudentForce) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSchoolProvinceResponseDataStudentForce.ProtoReflect.Descriptor instead.
func (*StudentSchoolProvinceResponseDataStudentForce) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{15}
}

func (x *StudentSchoolProvinceResponseDataStudentForce) GetStudentForce() uint32 {
	if x != nil {
		return x.StudentForce
	}
	return 0
}

func (x *StudentSchoolProvinceResponseDataStudentForce) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StudentSchoolProvinceResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceId    uint32                                           `protobuf:"varint,1,opt,name=province_id,json=provinceId,proto3" json:"province_id"`
	ProvinceName  string                                           `protobuf:"bytes,2,opt,name=province_name,json=provinceName,proto3" json:"province_name"`
	StudentForces []*StudentSchoolProvinceResponseDataStudentForce `protobuf:"bytes,3,rep,name=student_forces,json=studentForces,proto3" json:"student_forces"`
}

func (x *StudentSchoolProvinceResponseData) Reset() {
	*x = StudentSchoolProvinceResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSchoolProvinceResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSchoolProvinceResponseData) ProtoMessage() {}

func (x *StudentSchoolProvinceResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSchoolProvinceResponseData.ProtoReflect.Descriptor instead.
func (*StudentSchoolProvinceResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{16}
}

func (x *StudentSchoolProvinceResponseData) GetProvinceId() uint32 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *StudentSchoolProvinceResponseData) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *StudentSchoolProvinceResponseData) GetStudentForces() []*StudentSchoolProvinceResponseDataStudentForce {
	if x != nil {
		return x.StudentForces
	}
	return nil
}

type StudentSchoolProvinceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                                `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*StudentSchoolProvinceResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *StudentSchoolProvinceResponse) Reset() {
	*x = StudentSchoolProvinceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSchoolProvinceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSchoolProvinceResponse) ProtoMessage() {}

func (x *StudentSchoolProvinceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSchoolProvinceResponse.ProtoReflect.Descriptor instead.
func (*StudentSchoolProvinceResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{17}
}

func (x *StudentSchoolProvinceResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StudentSchoolProvinceResponse) GetData() []*StudentSchoolProvinceResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GpaDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId     string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	GraduationYearFrom uint32 `protobuf:"varint,2,opt,name=graduation_year_from,json=graduationYearFrom,proto3" json:"graduation_year_from"`
	GraduationYearTo   uint32 `protobuf:"varint,3,opt,name=graduation_year_to,json=graduationYearTo,proto3" json:"graduation_year_to"`
}

func (x *GpaDistributionRequest) Reset() {
	*x = GpaDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpaDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpaDistributionRequest) ProtoMessage() {}

func (x *GpaDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpaDistributionRequest.ProtoReflect.Descriptor instead.
func (*GpaDistributionRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{18}
}

func (x *GpaDistributionRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GpaDistributionRequest) GetGraduationYearFrom() uint32 {
	if x != nil {
		return x.GraduationYearFrom
	}
	return 0
}

func (x *GpaDistributionRequest) GetGraduationYearTo() uint32 {
	if x != nil {
		return x.GraduationYearTo
	}
	return 0
}

type GpaDistributionResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraduationSchoolYear       string  `protobuf:"bytes,1,opt,name=graduation_school_year,json=graduationSchoolYear,proto3" json:"graduation_school_year"`
	TotalLessThan_25           uint32  `protobuf:"varint,2,opt,name=total_less_than_25,json=totalLessThan25,proto3" json:"total_less_than_25"`
	PercentageLessThan_25      float64 `protobuf:"fixed64,3,opt,name=percentage_less_than_25,json=percentageLessThan25,proto3" json:"percentage_less_than_25"`
	TotalBetween_25And_30      uint32  `protobuf:"varint,4,opt,name=total_between_25_and_30,json=totalBetween25And30,proto3" json:"total_between_25_and_30"`
	PercentageBetween_25And_30 float64 `protobuf:"fixed64,5,opt,name=percentage_between_25_and_30,json=percentageBetween25And30,proto3" json:"percentage_between_25_and_30"`
	TotalMoreThan_30           uint32  `protobuf:"varint,6,opt,name=total_more_than_30,json=totalMoreThan30,proto3" json:"total_more_than_30"`
	PercentageMoreThan_30      float64 `protobuf:"fixed64,7,opt,name=percentage_more_than_30,json=percentageMoreThan30,proto3" json:"percentage_more_than_30"`
	TotalGraduates             uint32  `protobuf:"varint,8,opt,name=total_graduates,json=totalGraduates,proto3" json:"total_graduates"`
	AverageGpa                 float64 `protobuf:"fixed64,9,opt,name=average_gpa,json=averageGpa,proto3" json:"average_gpa"`
}

func (x *GpaDistributionResponseData) Reset() {
	*x = GpaDistributionResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpaDistributionResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpaDistributionResponseData) ProtoMessage() {}

func (x *GpaDistributionResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpaDistributionResponseData.ProtoReflect.Descriptor instead.
func (*GpaDistributionResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{19}
}

func (x *GpaDistributionResponseData) GetGraduationSchoolYear() string {
	if x != nil {
		return x.GraduationSchoolYear
	}
	return ""
}

func (x *GpaDistributionResponseData) GetTotalLessThan_25() uint32 {
	if x != nil {
		return x.TotalLessThan_25
	}
	return 0
}

func (x *GpaDistributionResponseData) GetPercentageLessThan_25() float64 {
	if x != nil {
		return x.PercentageLessThan_25
	}
	return 0
}

func (x *GpaDistributionResponseData) GetTotalBetween_25And_30() uint32 {
	if x != nil {
		return x.TotalBetween_25And_30
	}
	return 0
}

func (x *GpaDistributionResponseData) GetPercentageBetween_25And_30() float64 {
	if x != nil {
		return x.PercentageBetween_25And_30
	}
	return 0
}

func (x *GpaDistributionResponseData) GetTotalMoreThan_30() uint32 {
	if x != nil {
		return x.TotalMoreThan_30
	}
	return 0
}

func (x *GpaDistributionResponseData) GetPercentageMoreThan_30() float64 {
	if x != nil {
		return x.PercentageMoreThan_30
	}
	return 0
}

func (x *GpaDistributionResponseData) GetTotalGraduates() uint32 {
	if x != nil {
		return x.TotalGraduates
	}
	return 0
}

func (x *GpaDistributionResponseData) GetAverageGpa() float64 {
	if x != nil {
		return x.AverageGpa
	}
	return 0
}

type GpaDistributionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                          `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*GpaDistributionResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *GpaDistributionResponse) Reset() {
	*x = GpaDistributionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpaDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpaDistributionResponse) ProtoMessage() {}

func (x *GpaDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpaDistributionResponse.ProtoReflect.Descriptor instead.
func (*GpaDistributionResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{20}
}

func (x *GpaDistributionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GpaDistributionResponse) GetData() []*GpaDistributionResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StudyDurationDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyLevelId       string `protobuf:"bytes,1,opt,name=study_level_id,json=studyLevelId,proto3" json:"study_level_id"`
	StudyProgramId     string `protobuf:"bytes,2,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	GraduationYearFrom uint32 `protobuf:"varint,3,opt,name=graduation_year_from,json=graduationYearFrom,proto3" json:"graduation_year_from"`
	GraduationYearTo   uint32 `protobuf:"varint,4,opt,name=graduation_year_to,json=graduationYearTo,proto3" json:"graduation_year_to"`
}

func (x *StudyDurationDistributionRequest) Reset() {
	*x = StudyDurationDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyDurationDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDurationDistributionRequest) ProtoMessage() {}

func (x *StudyDurationDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDurationDistributionRequest.ProtoReflect.Descriptor instead.
func (*StudyDurationDistributionRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{21}
}

func (x *StudyDurationDistributionRequest) GetStudyLevelId() string {
	if x != nil {
		return x.StudyLevelId
	}
	return ""
}

func (x *StudyDurationDistributionRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *StudyDurationDistributionRequest) GetGraduationYearFrom() uint32 {
	if x != nil {
		return x.GraduationYearFrom
	}
	return 0
}

func (x *StudyDurationDistributionRequest) GetGraduationYearTo() uint32 {
	if x != nil {
		return x.GraduationYearTo
	}
	return 0
}

type StudyDurationDistributionResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraduationSchoolYear      string  `protobuf:"bytes,1,opt,name=graduation_school_year,json=graduationSchoolYear,proto3" json:"graduation_school_year"`
	TotalLessThan_3           uint32  `protobuf:"varint,2,opt,name=total_less_than_3,json=totalLessThan3,proto3" json:"total_less_than_3"`
	PercentageLessThan_3      float64 `protobuf:"fixed64,3,opt,name=percentage_less_than_3,json=percentageLessThan3,proto3" json:"percentage_less_than_3"`
	TotalBetween_3And_35      uint32  `protobuf:"varint,4,opt,name=total_between_3_and_35,json=totalBetween3And35,proto3" json:"total_between_3_and_35"`
	PercentageBetween_3And_35 float64 `protobuf:"fixed64,5,opt,name=percentage_between_3_and_35,json=percentageBetween3And35,proto3" json:"percentage_between_3_and_35"`
	TotalBetween_35And_4      uint32  `protobuf:"varint,6,opt,name=total_between_35_and_4,json=totalBetween35And4,proto3" json:"total_between_35_and_4"`
	PercentageBetween_35And_4 float64 `protobuf:"fixed64,7,opt,name=percentage_between_35_and_4,json=percentageBetween35And4,proto3" json:"percentage_between_35_and_4"`
	TotalMoreThan_4           uint32  `protobuf:"varint,8,opt,name=total_more_than_4,json=totalMoreThan4,proto3" json:"total_more_than_4"`
	PercentageMoreThan_4      float64 `protobuf:"fixed64,9,opt,name=percentage_more_than_4,json=percentageMoreThan4,proto3" json:"percentage_more_than_4"`
	TotalGraduates            uint32  `protobuf:"varint,10,opt,name=total_graduates,json=totalGraduates,proto3" json:"total_graduates"`
	AverageStudyDuration      float64 `protobuf:"fixed64,11,opt,name=average_study_duration,json=averageStudyDuration,proto3" json:"average_study_duration"`
}

func (x *StudyDurationDistributionResponseData) Reset() {
	*x = StudyDurationDistributionResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyDurationDistributionResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDurationDistributionResponseData) ProtoMessage() {}

func (x *StudyDurationDistributionResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDurationDistributionResponseData.ProtoReflect.Descriptor instead.
func (*StudyDurationDistributionResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{22}
}

func (x *StudyDurationDistributionResponseData) GetGraduationSchoolYear() string {
	if x != nil {
		return x.GraduationSchoolYear
	}
	return ""
}

func (x *StudyDurationDistributionResponseData) GetTotalLessThan_3() uint32 {
	if x != nil {
		return x.TotalLessThan_3
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetPercentageLessThan_3() float64 {
	if x != nil {
		return x.PercentageLessThan_3
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetTotalBetween_3And_35() uint32 {
	if x != nil {
		return x.TotalBetween_3And_35
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetPercentageBetween_3And_35() float64 {
	if x != nil {
		return x.PercentageBetween_3And_35
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetTotalBetween_35And_4() uint32 {
	if x != nil {
		return x.TotalBetween_35And_4
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetPercentageBetween_35And_4() float64 {
	if x != nil {
		return x.PercentageBetween_35And_4
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetTotalMoreThan_4() uint32 {
	if x != nil {
		return x.TotalMoreThan_4
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetPercentageMoreThan_4() float64 {
	if x != nil {
		return x.PercentageMoreThan_4
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetTotalGraduates() uint32 {
	if x != nil {
		return x.TotalGraduates
	}
	return 0
}

func (x *StudyDurationDistributionResponseData) GetAverageStudyDuration() float64 {
	if x != nil {
		return x.AverageStudyDuration
	}
	return 0
}

type StudyDurationDistributionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                                    `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*StudyDurationDistributionResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *StudyDurationDistributionResponse) Reset() {
	*x = StudyDurationDistributionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyDurationDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDurationDistributionResponse) ProtoMessage() {}

func (x *StudyDurationDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDurationDistributionResponse.ProtoReflect.Descriptor instead.
func (*StudyDurationDistributionResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{23}
}

func (x *StudyDurationDistributionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StudyDurationDistributionResponse) GetData() []*StudyDurationDistributionResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ThesisDurationDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyLevelId       string `protobuf:"bytes,1,opt,name=study_level_id,json=studyLevelId,proto3" json:"study_level_id"`
	StudyProgramId     string `protobuf:"bytes,2,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	GraduationYearFrom uint32 `protobuf:"varint,3,opt,name=graduation_year_from,json=graduationYearFrom,proto3" json:"graduation_year_from"`
	GraduationYearTo   uint32 `protobuf:"varint,4,opt,name=graduation_year_to,json=graduationYearTo,proto3" json:"graduation_year_to"`
}

func (x *ThesisDurationDistributionRequest) Reset() {
	*x = ThesisDurationDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThesisDurationDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThesisDurationDistributionRequest) ProtoMessage() {}

func (x *ThesisDurationDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThesisDurationDistributionRequest.ProtoReflect.Descriptor instead.
func (*ThesisDurationDistributionRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{24}
}

func (x *ThesisDurationDistributionRequest) GetStudyLevelId() string {
	if x != nil {
		return x.StudyLevelId
	}
	return ""
}

func (x *ThesisDurationDistributionRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *ThesisDurationDistributionRequest) GetGraduationYearFrom() uint32 {
	if x != nil {
		return x.GraduationYearFrom
	}
	return 0
}

func (x *ThesisDurationDistributionRequest) GetGraduationYearTo() uint32 {
	if x != nil {
		return x.GraduationYearTo
	}
	return 0
}

type ThesisDurationDistributionResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraduationSchoolYear     string  `protobuf:"bytes,1,opt,name=graduation_school_year,json=graduationSchoolYear,proto3" json:"graduation_school_year"`
	TotalLessThan_1          uint32  `protobuf:"varint,2,opt,name=total_less_than_1,json=totalLessThan1,proto3" json:"total_less_than_1"`
	PercentageLessThan_1     float64 `protobuf:"fixed64,3,opt,name=percentage_less_than_1,json=percentageLessThan1,proto3" json:"percentage_less_than_1"`
	TotalBetween_1And_2      uint32  `protobuf:"varint,4,opt,name=total_between_1_and_2,json=totalBetween1And2,proto3" json:"total_between_1_and_2"`
	PercentageBetween_1And_2 float64 `protobuf:"fixed64,5,opt,name=percentage_between_1_and_2,json=percentageBetween1And2,proto3" json:"percentage_between_1_and_2"`
	TotalMoreThan_2          uint32  `protobuf:"varint,6,opt,name=total_more_than_2,json=totalMoreThan2,proto3" json:"total_more_than_2"`
	PercentageMoreThan_2     float64 `protobuf:"fixed64,7,opt,name=percentage_more_than_2,json=percentageMoreThan2,proto3" json:"percentage_more_than_2"`
	TotalGraduates           uint32  `protobuf:"varint,8,opt,name=total_graduates,json=totalGraduates,proto3" json:"total_graduates"`
	AverageThesisDuration    float64 `protobuf:"fixed64,9,opt,name=average_thesis_duration,json=averageThesisDuration,proto3" json:"average_thesis_duration"`
}

func (x *ThesisDurationDistributionResponseData) Reset() {
	*x = ThesisDurationDistributionResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThesisDurationDistributionResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThesisDurationDistributionResponseData) ProtoMessage() {}

func (x *ThesisDurationDistributionResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThesisDurationDistributionResponseData.ProtoReflect.Descriptor instead.
func (*ThesisDurationDistributionResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{25}
}

func (x *ThesisDurationDistributionResponseData) GetGraduationSchoolYear() string {
	if x != nil {
		return x.GraduationSchoolYear
	}
	return ""
}

func (x *ThesisDurationDistributionResponseData) GetTotalLessThan_1() uint32 {
	if x != nil {
		return x.TotalLessThan_1
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetPercentageLessThan_1() float64 {
	if x != nil {
		return x.PercentageLessThan_1
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetTotalBetween_1And_2() uint32 {
	if x != nil {
		return x.TotalBetween_1And_2
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetPercentageBetween_1And_2() float64 {
	if x != nil {
		return x.PercentageBetween_1And_2
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetTotalMoreThan_2() uint32 {
	if x != nil {
		return x.TotalMoreThan_2
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetPercentageMoreThan_2() float64 {
	if x != nil {
		return x.PercentageMoreThan_2
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetTotalGraduates() uint32 {
	if x != nil {
		return x.TotalGraduates
	}
	return 0
}

func (x *ThesisDurationDistributionResponseData) GetAverageThesisDuration() float64 {
	if x != nil {
		return x.AverageThesisDuration
	}
	return 0
}

type ThesisDurationDistributionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                                     `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*ThesisDurationDistributionResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *ThesisDurationDistributionResponse) Reset() {
	*x = ThesisDurationDistributionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThesisDurationDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThesisDurationDistributionResponse) ProtoMessage() {}

func (x *ThesisDurationDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThesisDurationDistributionResponse.ProtoReflect.Descriptor instead.
func (*ThesisDurationDistributionResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{26}
}

func (x *ThesisDurationDistributionResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ThesisDurationDistributionResponse) GetData() []*ThesisDurationDistributionResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StudentStatusSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId   string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudentForceFrom uint32 `protobuf:"varint,2,opt,name=student_force_from,json=studentForceFrom,proto3" json:"student_force_from"`
	StudentForceTo   uint32 `protobuf:"varint,3,opt,name=student_force_to,json=studentForceTo,proto3" json:"student_force_to"`
}

func (x *StudentStatusSummaryRequest) Reset() {
	*x = StudentStatusSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusSummaryRequest) ProtoMessage() {}

func (x *StudentStatusSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusSummaryRequest.ProtoReflect.Descriptor instead.
func (*StudentStatusSummaryRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{27}
}

func (x *StudentStatusSummaryRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *StudentStatusSummaryRequest) GetStudentForceFrom() uint32 {
	if x != nil {
		return x.StudentForceFrom
	}
	return 0
}

func (x *StudentStatusSummaryRequest) GetStudentForceTo() uint32 {
	if x != nil {
		return x.StudentForceTo
	}
	return 0
}

type StudentStatusSummaryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentForce       uint32  `protobuf:"varint,1,opt,name=student_force,json=studentForce,proto3" json:"student_force"`
	TotalActive        uint32  `protobuf:"varint,2,opt,name=total_active,json=totalActive,proto3" json:"total_active"`
	PercentageActive   float64 `protobuf:"fixed64,3,opt,name=percentage_active,json=percentageActive,proto3" json:"percentage_active"`
	TotalOut           uint32  `protobuf:"varint,4,opt,name=total_out,json=totalOut,proto3" json:"total_out"`
	PercentageOut      float64 `protobuf:"fixed64,5,opt,name=percentage_out,json=percentageOut,proto3" json:"percentage_out"`
	TotalGraduate      uint32  `protobuf:"varint,6,opt,name=total_graduate,json=totalGraduate,proto3" json:"total_graduate"`
	PercentageGraduate float64 `protobuf:"fixed64,7,opt,name=percentage_graduate,json=percentageGraduate,proto3" json:"percentage_graduate"`
	TotalStudent       uint32  `protobuf:"varint,8,opt,name=total_student,json=totalStudent,proto3" json:"total_student"`
	TotalThesisStudent uint32  `protobuf:"varint,9,opt,name=total_thesis_student,json=totalThesisStudent,proto3" json:"total_thesis_student"`
}

func (x *StudentStatusSummaryResponseData) Reset() {
	*x = StudentStatusSummaryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusSummaryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusSummaryResponseData) ProtoMessage() {}

func (x *StudentStatusSummaryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusSummaryResponseData.ProtoReflect.Descriptor instead.
func (*StudentStatusSummaryResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{28}
}

func (x *StudentStatusSummaryResponseData) GetStudentForce() uint32 {
	if x != nil {
		return x.StudentForce
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetTotalActive() uint32 {
	if x != nil {
		return x.TotalActive
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetPercentageActive() float64 {
	if x != nil {
		return x.PercentageActive
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetTotalOut() uint32 {
	if x != nil {
		return x.TotalOut
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetPercentageOut() float64 {
	if x != nil {
		return x.PercentageOut
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetTotalGraduate() uint32 {
	if x != nil {
		return x.TotalGraduate
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetPercentageGraduate() float64 {
	if x != nil {
		return x.PercentageGraduate
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetTotalStudent() uint32 {
	if x != nil {
		return x.TotalStudent
	}
	return 0
}

func (x *StudentStatusSummaryResponseData) GetTotalThesisStudent() uint32 {
	if x != nil {
		return x.TotalThesisStudent
	}
	return 0
}

type StudentStatusSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*StudentStatusSummaryResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *StudentStatusSummaryResponse) Reset() {
	*x = StudentStatusSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentStatusSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentStatusSummaryResponse) ProtoMessage() {}

func (x *StudentStatusSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentStatusSummaryResponse.ProtoReflect.Descriptor instead.
func (*StudentStatusSummaryResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{29}
}

func (x *StudentStatusSummaryResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StudentStatusSummaryResponse) GetData() []*StudentStatusSummaryResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubjectSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId    string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	SemesterStartYear uint32 `protobuf:"varint,2,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
}

func (x *SubjectSummaryRequest) Reset() {
	*x = SubjectSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectSummaryRequest) ProtoMessage() {}

func (x *SubjectSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectSummaryRequest.ProtoReflect.Descriptor instead.
func (*SubjectSummaryRequest) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{30}
}

func (x *SubjectSummaryRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *SubjectSummaryRequest) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

type SubjectSummaryResponseDataGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GradeCode string `protobuf:"bytes,1,opt,name=grade_code,json=gradeCode,proto3" json:"grade_code"`
	Total     uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *SubjectSummaryResponseDataGrade) Reset() {
	*x = SubjectSummaryResponseDataGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectSummaryResponseDataGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectSummaryResponseDataGrade) ProtoMessage() {}

func (x *SubjectSummaryResponseDataGrade) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectSummaryResponseDataGrade.ProtoReflect.Descriptor instead.
func (*SubjectSummaryResponseDataGrade) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{31}
}

func (x *SubjectSummaryResponseDataGrade) GetGradeCode() string {
	if x != nil {
		return x.GradeCode
	}
	return ""
}

func (x *SubjectSummaryResponseDataGrade) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SubjectSummaryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId              string                             `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	SubjectName            string                             `protobuf:"bytes,2,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	TotalParticipant       uint32                             `protobuf:"varint,3,opt,name=total_participant,json=totalParticipant,proto3" json:"total_participant"`
	TotalRepeatParticipant uint32                             `protobuf:"varint,4,opt,name=total_repeat_participant,json=totalRepeatParticipant,proto3" json:"total_repeat_participant"`
	TotalClass             uint32                             `protobuf:"varint,5,opt,name=total_class,json=totalClass,proto3" json:"total_class"`
	Grades                 []*SubjectSummaryResponseDataGrade `protobuf:"bytes,6,rep,name=grades,proto3" json:"grades"`
}

func (x *SubjectSummaryResponseData) Reset() {
	*x = SubjectSummaryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectSummaryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectSummaryResponseData) ProtoMessage() {}

func (x *SubjectSummaryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectSummaryResponseData.ProtoReflect.Descriptor instead.
func (*SubjectSummaryResponseData) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{32}
}

func (x *SubjectSummaryResponseData) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *SubjectSummaryResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *SubjectSummaryResponseData) GetTotalParticipant() uint32 {
	if x != nil {
		return x.TotalParticipant
	}
	return 0
}

func (x *SubjectSummaryResponseData) GetTotalRepeatParticipant() uint32 {
	if x != nil {
		return x.TotalRepeatParticipant
	}
	return 0
}

func (x *SubjectSummaryResponseData) GetTotalClass() uint32 {
	if x != nil {
		return x.TotalClass
	}
	return 0
}

func (x *SubjectSummaryResponseData) GetGrades() []*SubjectSummaryResponseDataGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

type SubjectSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                         `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*SubjectSummaryResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *SubjectSummaryResponse) Reset() {
	*x = SubjectSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_report_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectSummaryResponse) ProtoMessage() {}

func (x *SubjectSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_report_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectSummaryResponse.ProtoReflect.Descriptor instead.
func (*SubjectSummaryResponse) Descriptor() ([]byte, []int) {
	return file_admin_report_proto_rawDescGZIP(), []int{33}
}

func (x *SubjectSummaryResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubjectSummaryResponse) GetData() []*SubjectSummaryResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_admin_report_proto protoreflect.FileDescriptor

var file_admin_report_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65,
	0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x37, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x4f, 0x0a, 0x1f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xe5, 0x02, 0x0a, 0x19, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x6b, 0x74, 0x69,
	0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x69, 0x6b, 0x74, 0x69,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x6b, 0x74, 0x69, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x64, 0x69, 0x6b, 0x74, 0x69, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x15, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa7, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x59, 0x0a, 0x22, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xab, 0x01, 0x0a,
	0x1d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x48, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x19, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x01, 0x0a, 0x16,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x22, 0x64, 0x0a, 0x27, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc1,
	0x01, 0x0a, 0x1b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x22, 0x6a, 0x0a, 0x2d, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xcd, 0x01, 0x0a, 0x21, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x62, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x43,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x47, 0x70, 0x61, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x72, 0x61, 0x64,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x54, 0x6f, 0x22, 0xdb, 0x03, 0x0a, 0x1b, 0x47, 0x70, 0x61,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x61, 0x64,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x2b,
	0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x5f, 0x32, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x32, 0x35, 0x12, 0x35, 0x0a, 0x17, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x68, 0x61, 0x6e, 0x5f, 0x32, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e,
	0x32, 0x35, 0x12, 0x34, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x6e, 0x5f, 0x32, 0x35, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x33, 0x30, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65,
	0x6e, 0x32, 0x35, 0x41, 0x6e, 0x64, 0x33, 0x30, 0x12, 0x3e, 0x0a, 0x1c, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x32,
	0x35, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x33, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65,
	0x6e, 0x32, 0x35, 0x41, 0x6e, 0x64, 0x33, 0x30, 0x12, 0x2b, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x33, 0x30, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x72, 0x65, 0x54,
	0x68, 0x61, 0x6e, 0x33, 0x30, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x33, 0x30,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x33, 0x30, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64,
	0x75, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x67, 0x70, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x47, 0x70, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x47, 0x70, 0x61, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x70, 0x61, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x20, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x67, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x54, 0x6f, 0x22, 0xe0,
	0x04, 0x0a, 0x25, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x61, 0x64,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x29,
	0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x5f, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x33, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x5f, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x33, 0x12, 0x32,
	0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f,
	0x33, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x33, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x33, 0x41, 0x6e, 0x64,
	0x33, 0x35, 0x12, 0x3c, 0x0a, 0x1b, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x33, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x33,
	0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x33, 0x41, 0x6e, 0x64, 0x33, 0x35,
	0x12, 0x32, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65,
	0x6e, 0x5f, 0x33, 0x35, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x33, 0x35,
	0x41, 0x6e, 0x64, 0x34, 0x12, 0x3c, 0x0a, 0x1b, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x33, 0x35, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x33, 0x35, 0x41, 0x6e,
	0x64, 0x34, 0x12, 0x29, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x34, 0x12, 0x33, 0x0a,
	0x16, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61,
	0x6e, 0x34, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64,
	0x75, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x94, 0x01, 0x0a, 0x21, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x21, 0x54, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x67, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x72,
	0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x54, 0x6f, 0x22, 0xed,
	0x03, 0x0a, 0x26, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x61,
	0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x72, 0x61, 0x64, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x29, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x31, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x31, 0x12,
	0x30, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e,
	0x5f, 0x31, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x31, 0x41, 0x6e, 0x64,
	0x32, 0x12, 0x3a, 0x0a, 0x1a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x31, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x31, 0x41, 0x6e, 0x64, 0x32, 0x12, 0x29, 0x0a,
	0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x32, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x5f, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x32, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x75, 0x61, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96,
	0x01, 0x0a, 0x22, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x48, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x01, 0x0a, 0x1b, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x22, 0x8a, 0x03, 0x0a, 0x20, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x75, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x61,
	0x64, 0x75, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x22, 0x56, 0x0a, 0x1f, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xad,
	0x02, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x7e,
	0x0a, 0x16, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xe4,
	0x07, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x11, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0f, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x15, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x0f, 0x47, 0x70, 0x61, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x47, 0x70, 0x61, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x70, 0x61, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7e, 0x0a, 0x19, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x29, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_report_proto_rawDescOnce sync.Once
	file_admin_report_proto_rawDescData = file_admin_report_proto_rawDesc
)

func file_admin_report_proto_rawDescGZIP() []byte {
	file_admin_report_proto_rawDescOnce.Do(func() {
		file_admin_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_report_proto_rawDescData)
	})
	return file_admin_report_proto_rawDescData
}

var file_admin_report_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_admin_report_proto_goTypes = []interface{}{
	(*Meta)(nil),                                          // 0: admin_report.Meta
	(*Pagination)(nil),                                    // 1: admin_report.Pagination
	(*StudentStatusRequest)(nil),                          // 2: admin_report.StudentStatusRequest
	(*StudentStatusResponseDataStatus)(nil),               // 3: admin_report.StudentStatusResponseDataStatus
	(*StudentStatusResponseData)(nil),                     // 4: admin_report.StudentStatusResponseData
	(*StudentStatusResponse)(nil),                         // 5: admin_report.StudentStatusResponse
	(*StudentClassGradeRequest)(nil),                      // 6: admin_report.StudentClassGradeRequest
	(*StudentClassGradeResponseDataGrade)(nil),            // 7: admin_report.StudentClassGradeResponseDataGrade
	(*StudentClassGradeResponseData)(nil),                 // 8: admin_report.StudentClassGradeResponseData
	(*StudentClassGradeResponse)(nil),                     // 9: admin_report.StudentClassGradeResponse
	(*StudentProvinceRequest)(nil),                        // 10: admin_report.StudentProvinceRequest
	(*StudentProvinceResponseDataStudentForce)(nil),       // 11: admin_report.StudentProvinceResponseDataStudentForce
	(*StudentProvinceResponseData)(nil),                   // 12: admin_report.StudentProvinceResponseData
	(*StudentProvinceResponse)(nil),                       // 13: admin_report.StudentProvinceResponse
	(*StudentSchoolProvinceRequest)(nil),                  // 14: admin_report.StudentSchoolProvinceRequest
	(*StudentSchoolProvinceResponseDataStudentForce)(nil), // 15: admin_report.StudentSchoolProvinceResponseDataStudentForce
	(*StudentSchoolProvinceResponseData)(nil),             // 16: admin_report.StudentSchoolProvinceResponseData
	(*StudentSchoolProvinceResponse)(nil),                 // 17: admin_report.StudentSchoolProvinceResponse
	(*GpaDistributionRequest)(nil),                        // 18: admin_report.GpaDistributionRequest
	(*GpaDistributionResponseData)(nil),                   // 19: admin_report.GpaDistributionResponseData
	(*GpaDistributionResponse)(nil),                       // 20: admin_report.GpaDistributionResponse
	(*StudyDurationDistributionRequest)(nil),              // 21: admin_report.StudyDurationDistributionRequest
	(*StudyDurationDistributionResponseData)(nil),         // 22: admin_report.StudyDurationDistributionResponseData
	(*StudyDurationDistributionResponse)(nil),             // 23: admin_report.StudyDurationDistributionResponse
	(*ThesisDurationDistributionRequest)(nil),             // 24: admin_report.ThesisDurationDistributionRequest
	(*ThesisDurationDistributionResponseData)(nil),        // 25: admin_report.ThesisDurationDistributionResponseData
	(*ThesisDurationDistributionResponse)(nil),            // 26: admin_report.ThesisDurationDistributionResponse
	(*StudentStatusSummaryRequest)(nil),                   // 27: admin_report.StudentStatusSummaryRequest
	(*StudentStatusSummaryResponseData)(nil),              // 28: admin_report.StudentStatusSummaryResponseData
	(*StudentStatusSummaryResponse)(nil),                  // 29: admin_report.StudentStatusSummaryResponse
	(*SubjectSummaryRequest)(nil),                         // 30: admin_report.SubjectSummaryRequest
	(*SubjectSummaryResponseDataGrade)(nil),               // 31: admin_report.SubjectSummaryResponseDataGrade
	(*SubjectSummaryResponseData)(nil),                    // 32: admin_report.SubjectSummaryResponseData
	(*SubjectSummaryResponse)(nil),                        // 33: admin_report.SubjectSummaryResponse
}
var file_admin_report_proto_depIdxs = []int32{
	3,  // 0: admin_report.StudentStatusResponseData.statuses:type_name -> admin_report.StudentStatusResponseDataStatus
	0,  // 1: admin_report.StudentStatusResponse.meta:type_name -> admin_report.Meta
	4,  // 2: admin_report.StudentStatusResponse.data:type_name -> admin_report.StudentStatusResponseData
	7,  // 3: admin_report.StudentClassGradeResponseData.grades:type_name -> admin_report.StudentClassGradeResponseDataGrade
	0,  // 4: admin_report.StudentClassGradeResponse.meta:type_name -> admin_report.Meta
	1,  // 5: admin_report.StudentClassGradeResponse.pagination:type_name -> admin_report.Pagination
	8,  // 6: admin_report.StudentClassGradeResponse.data:type_name -> admin_report.StudentClassGradeResponseData
	11, // 7: admin_report.StudentProvinceResponseData.student_forces:type_name -> admin_report.StudentProvinceResponseDataStudentForce
	0,  // 8: admin_report.StudentProvinceResponse.meta:type_name -> admin_report.Meta
	12, // 9: admin_report.StudentProvinceResponse.data:type_name -> admin_report.StudentProvinceResponseData
	15, // 10: admin_report.StudentSchoolProvinceResponseData.student_forces:type_name -> admin_report.StudentSchoolProvinceResponseDataStudentForce
	0,  // 11: admin_report.StudentSchoolProvinceResponse.meta:type_name -> admin_report.Meta
	16, // 12: admin_report.StudentSchoolProvinceResponse.data:type_name -> admin_report.StudentSchoolProvinceResponseData
	0,  // 13: admin_report.GpaDistributionResponse.meta:type_name -> admin_report.Meta
	19, // 14: admin_report.GpaDistributionResponse.data:type_name -> admin_report.GpaDistributionResponseData
	0,  // 15: admin_report.StudyDurationDistributionResponse.meta:type_name -> admin_report.Meta
	22, // 16: admin_report.StudyDurationDistributionResponse.data:type_name -> admin_report.StudyDurationDistributionResponseData
	0,  // 17: admin_report.ThesisDurationDistributionResponse.meta:type_name -> admin_report.Meta
	25, // 18: admin_report.ThesisDurationDistributionResponse.data:type_name -> admin_report.ThesisDurationDistributionResponseData
	0,  // 19: admin_report.StudentStatusSummaryResponse.meta:type_name -> admin_report.Meta
	28, // 20: admin_report.StudentStatusSummaryResponse.data:type_name -> admin_report.StudentStatusSummaryResponseData
	31, // 21: admin_report.SubjectSummaryResponseData.grades:type_name -> admin_report.SubjectSummaryResponseDataGrade
	0,  // 22: admin_report.SubjectSummaryResponse.meta:type_name -> admin_report.Meta
	32, // 23: admin_report.SubjectSummaryResponse.data:type_name -> admin_report.SubjectSummaryResponseData
	2,  // 24: admin_report.AdminReportHandler.StudentStatus:input_type -> admin_report.StudentStatusRequest
	6,  // 25: admin_report.AdminReportHandler.StudentClassGrade:input_type -> admin_report.StudentClassGradeRequest
	10, // 26: admin_report.AdminReportHandler.StudentProvince:input_type -> admin_report.StudentProvinceRequest
	14, // 27: admin_report.AdminReportHandler.StudentSchoolProvince:input_type -> admin_report.StudentSchoolProvinceRequest
	18, // 28: admin_report.AdminReportHandler.GpaDistribution:input_type -> admin_report.GpaDistributionRequest
	21, // 29: admin_report.AdminReportHandler.StudyDurationDistribution:input_type -> admin_report.StudyDurationDistributionRequest
	24, // 30: admin_report.AdminReportHandler.ThesisDurationDistribution:input_type -> admin_report.ThesisDurationDistributionRequest
	27, // 31: admin_report.AdminReportHandler.StudentStatusSummary:input_type -> admin_report.StudentStatusSummaryRequest
	30, // 32: admin_report.AdminReportHandler.SubjectSummary:input_type -> admin_report.SubjectSummaryRequest
	5,  // 33: admin_report.AdminReportHandler.StudentStatus:output_type -> admin_report.StudentStatusResponse
	9,  // 34: admin_report.AdminReportHandler.StudentClassGrade:output_type -> admin_report.StudentClassGradeResponse
	13, // 35: admin_report.AdminReportHandler.StudentProvince:output_type -> admin_report.StudentProvinceResponse
	17, // 36: admin_report.AdminReportHandler.StudentSchoolProvince:output_type -> admin_report.StudentSchoolProvinceResponse
	20, // 37: admin_report.AdminReportHandler.GpaDistribution:output_type -> admin_report.GpaDistributionResponse
	23, // 38: admin_report.AdminReportHandler.StudyDurationDistribution:output_type -> admin_report.StudyDurationDistributionResponse
	26, // 39: admin_report.AdminReportHandler.ThesisDurationDistribution:output_type -> admin_report.ThesisDurationDistributionResponse
	29, // 40: admin_report.AdminReportHandler.StudentStatusSummary:output_type -> admin_report.StudentStatusSummaryResponse
	33, // 41: admin_report.AdminReportHandler.SubjectSummary:output_type -> admin_report.SubjectSummaryResponse
	33, // [33:42] is the sub-list for method output_type
	24, // [24:33] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_admin_report_proto_init() }
func file_admin_report_proto_init() {
	if File_admin_report_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusResponseDataStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentClassGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentClassGradeResponseDataGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentClassGradeResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentClassGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentProvinceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentProvinceResponseDataStudentForce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentProvinceResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentProvinceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSchoolProvinceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSchoolProvinceResponseDataStudentForce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSchoolProvinceResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSchoolProvinceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpaDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpaDistributionResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpaDistributionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyDurationDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyDurationDistributionResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyDurationDistributionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThesisDurationDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThesisDurationDistributionResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThesisDurationDistributionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusSummaryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentStatusSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectSummaryResponseDataGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectSummaryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_report_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_report_proto_goTypes,
		DependencyIndexes: file_admin_report_proto_depIdxs,
		MessageInfos:      file_admin_report_proto_msgTypes,
	}.Build()
	File_admin_report_proto = out.File
	file_admin_report_proto_rawDesc = nil
	file_admin_report_proto_goTypes = nil
	file_admin_report_proto_depIdxs = nil
}
