// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: admin/semester.proto

package semester

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page                uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit               uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	StudyProgramId      string `protobuf:"bytes,3,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	ExcludingSemesterId string `protobuf:"bytes,4,opt,name=excluding_semester_id,json=excludingSemesterId,proto3" json:"excluding_semester_id"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{2}
}

func (x *GetListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetListRequest) GetExcludingSemesterId() string {
	if x != nil {
		return x.ExcludingSemesterId
	}
	return ""
}

type GetListResponseDataCurriculum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId   string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName string `protobuf:"bytes,2,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	CurriculumId     string `protobuf:"bytes,3,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
	CurriculumName   string `protobuf:"bytes,4,opt,name=curriculum_name,json=curriculumName,proto3" json:"curriculum_name"`
}

func (x *GetListResponseDataCurriculum) Reset() {
	*x = GetListResponseDataCurriculum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponseDataCurriculum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponseDataCurriculum) ProtoMessage() {}

func (x *GetListResponseDataCurriculum) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponseDataCurriculum.ProtoReflect.Descriptor instead.
func (*GetListResponseDataCurriculum) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{3}
}

func (x *GetListResponseDataCurriculum) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetListResponseDataCurriculum) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetListResponseDataCurriculum) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

func (x *GetListResponseDataCurriculum) GetCurriculumName() string {
	if x != nil {
		return x.CurriculumName
	}
	return ""
}

type GetListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	SemesterStartYear uint32                           `protobuf:"varint,2,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SchoolYear        string                           `protobuf:"bytes,3,opt,name=school_year,json=schoolYear,proto3" json:"school_year"`
	SemesterType      string                           `protobuf:"bytes,4,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	IsActive          bool                             `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	StartDate         string                           `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate           string                           `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	MidtermStartDate  string                           `protobuf:"bytes,8,opt,name=midterm_start_date,json=midtermStartDate,proto3" json:"midterm_start_date"`
	MidtermEndDate    string                           `protobuf:"bytes,9,opt,name=midterm_end_date,json=midtermEndDate,proto3" json:"midterm_end_date"`
	EndtermStartDate  string                           `protobuf:"bytes,10,opt,name=endterm_start_date,json=endtermStartDate,proto3" json:"endterm_start_date"`
	EndtermEndDate    string                           `protobuf:"bytes,11,opt,name=endterm_end_date,json=endtermEndDate,proto3" json:"endterm_end_date"`
	Curriculums       []*GetListResponseDataCurriculum `protobuf:"bytes,12,rep,name=curriculums,proto3" json:"curriculums"`
}

func (x *GetListResponseData) Reset() {
	*x = GetListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponseData) ProtoMessage() {}

func (x *GetListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponseData.ProtoReflect.Descriptor instead.
func (*GetListResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{4}
}

func (x *GetListResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetListResponseData) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *GetListResponseData) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetListResponseData) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *GetListResponseData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetListResponseData) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetListResponseData) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetListResponseData) GetMidtermStartDate() string {
	if x != nil {
		return x.MidtermStartDate
	}
	return ""
}

func (x *GetListResponseData) GetMidtermEndDate() string {
	if x != nil {
		return x.MidtermEndDate
	}
	return ""
}

func (x *GetListResponseData) GetEndtermStartDate() string {
	if x != nil {
		return x.EndtermStartDate
	}
	return ""
}

func (x *GetListResponseData) GetEndtermEndDate() string {
	if x != nil {
		return x.EndtermEndDate
	}
	return ""
}

func (x *GetListResponseData) GetCurriculums() []*GetListResponseDataCurriculum {
	if x != nil {
		return x.Curriculums
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Pagination *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	Data       []*GetListResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{5}
}

func (x *GetListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetListResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetListResponse) GetData() []*GetListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetDetailRequest) Reset() {
	*x = GetDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailRequest) ProtoMessage() {}

func (x *GetDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDetailRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDetailResponseDataCurriculum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId   string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName string `protobuf:"bytes,2,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	CurriculumId     string `protobuf:"bytes,3,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
	CurriculumName   string `protobuf:"bytes,4,opt,name=curriculum_name,json=curriculumName,proto3" json:"curriculum_name"`
}

func (x *GetDetailResponseDataCurriculum) Reset() {
	*x = GetDetailResponseDataCurriculum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataCurriculum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataCurriculum) ProtoMessage() {}

func (x *GetDetailResponseDataCurriculum) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataCurriculum.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataCurriculum) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{7}
}

func (x *GetDetailResponseDataCurriculum) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetDetailResponseDataCurriculum) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetDetailResponseDataCurriculum) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

func (x *GetDetailResponseDataCurriculum) GetCurriculumName() string {
	if x != nil {
		return x.CurriculumName
	}
	return ""
}

type GetDetailResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	SemesterStartYear          uint32                             `protobuf:"varint,2,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SchoolYear                 string                             `protobuf:"bytes,3,opt,name=school_year,json=schoolYear,proto3" json:"school_year"`
	SemesterType               string                             `protobuf:"bytes,4,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	IsActive                   bool                               `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	StartDate                  string                             `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate                    string                             `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	StudyPlanInputStartDate    string                             `protobuf:"bytes,8,opt,name=study_plan_input_start_date,json=studyPlanInputStartDate,proto3" json:"study_plan_input_start_date"`
	StudyPlanInputEndDate      string                             `protobuf:"bytes,9,opt,name=study_plan_input_end_date,json=studyPlanInputEndDate,proto3" json:"study_plan_input_end_date"`
	StudyPlanApprovalStartDate string                             `protobuf:"bytes,10,opt,name=study_plan_approval_start_date,json=studyPlanApprovalStartDate,proto3" json:"study_plan_approval_start_date"`
	StudyPlanApprovalEndDate   string                             `protobuf:"bytes,11,opt,name=study_plan_approval_end_date,json=studyPlanApprovalEndDate,proto3" json:"study_plan_approval_end_date"`
	ReferenceSemesterId        string                             `protobuf:"bytes,12,opt,name=reference_semester_id,json=referenceSemesterId,proto3" json:"reference_semester_id"`
	ReferenceSemesterStartYear uint32                             `protobuf:"varint,13,opt,name=reference_semester_start_year,json=referenceSemesterStartYear,proto3" json:"reference_semester_start_year"`
	ReferenceSchoolYear        string                             `protobuf:"bytes,14,opt,name=reference_school_year,json=referenceSchoolYear,proto3" json:"reference_school_year"`
	ReferenceSemesterType      string                             `protobuf:"bytes,15,opt,name=reference_semester_type,json=referenceSemesterType,proto3" json:"reference_semester_type"`
	CheckMinimumGpa            bool                               `protobuf:"varint,16,opt,name=check_minimum_gpa,json=checkMinimumGpa,proto3" json:"check_minimum_gpa"`
	CheckPassedCredit          bool                               `protobuf:"varint,17,opt,name=check_passed_credit,json=checkPassedCredit,proto3" json:"check_passed_credit"`
	DefaultCredit              uint32                             `protobuf:"varint,18,opt,name=default_credit,json=defaultCredit,proto3" json:"default_credit"`
	Curriculums                []*GetDetailResponseDataCurriculum `protobuf:"bytes,19,rep,name=curriculums,proto3" json:"curriculums"`
	MidtermStartDate           string                             `protobuf:"bytes,20,opt,name=midterm_start_date,json=midtermStartDate,proto3" json:"midterm_start_date"`
	MidtermEndDate             string                             `protobuf:"bytes,21,opt,name=midterm_end_date,json=midtermEndDate,proto3" json:"midterm_end_date"`
	EndtermStartDate           string                             `protobuf:"bytes,22,opt,name=endterm_start_date,json=endtermStartDate,proto3" json:"endterm_start_date"`
	EndtermEndDate             string                             `protobuf:"bytes,23,opt,name=endterm_end_date,json=endtermEndDate,proto3" json:"endterm_end_date"`
	GradingStartDate           string                             `protobuf:"bytes,24,opt,name=grading_start_date,json=gradingStartDate,proto3" json:"grading_start_date"`
	GradingEndDate             string                             `protobuf:"bytes,25,opt,name=grading_end_date,json=gradingEndDate,proto3" json:"grading_end_date"`
}

func (x *GetDetailResponseData) Reset() {
	*x = GetDetailResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseData) ProtoMessage() {}

func (x *GetDetailResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseData.ProtoReflect.Descriptor instead.
func (*GetDetailResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{8}
}

func (x *GetDetailResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *GetDetailResponseData) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *GetDetailResponseData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetDetailResponseData) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyPlanInputStartDate() string {
	if x != nil {
		return x.StudyPlanInputStartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyPlanInputEndDate() string {
	if x != nil {
		return x.StudyPlanInputEndDate
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyPlanApprovalStartDate() string {
	if x != nil {
		return x.StudyPlanApprovalStartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyPlanApprovalEndDate() string {
	if x != nil {
		return x.StudyPlanApprovalEndDate
	}
	return ""
}

func (x *GetDetailResponseData) GetReferenceSemesterId() string {
	if x != nil {
		return x.ReferenceSemesterId
	}
	return ""
}

func (x *GetDetailResponseData) GetReferenceSemesterStartYear() uint32 {
	if x != nil {
		return x.ReferenceSemesterStartYear
	}
	return 0
}

func (x *GetDetailResponseData) GetReferenceSchoolYear() string {
	if x != nil {
		return x.ReferenceSchoolYear
	}
	return ""
}

func (x *GetDetailResponseData) GetReferenceSemesterType() string {
	if x != nil {
		return x.ReferenceSemesterType
	}
	return ""
}

func (x *GetDetailResponseData) GetCheckMinimumGpa() bool {
	if x != nil {
		return x.CheckMinimumGpa
	}
	return false
}

func (x *GetDetailResponseData) GetCheckPassedCredit() bool {
	if x != nil {
		return x.CheckPassedCredit
	}
	return false
}

func (x *GetDetailResponseData) GetDefaultCredit() uint32 {
	if x != nil {
		return x.DefaultCredit
	}
	return 0
}

func (x *GetDetailResponseData) GetCurriculums() []*GetDetailResponseDataCurriculum {
	if x != nil {
		return x.Curriculums
	}
	return nil
}

func (x *GetDetailResponseData) GetMidtermStartDate() string {
	if x != nil {
		return x.MidtermStartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetMidtermEndDate() string {
	if x != nil {
		return x.MidtermEndDate
	}
	return ""
}

func (x *GetDetailResponseData) GetEndtermStartDate() string {
	if x != nil {
		return x.EndtermStartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetEndtermEndDate() string {
	if x != nil {
		return x.EndtermEndDate
	}
	return ""
}

func (x *GetDetailResponseData) GetGradingStartDate() string {
	if x != nil {
		return x.GradingStartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetGradingEndDate() string {
	if x != nil {
		return x.GradingEndDate
	}
	return ""
}

type GetDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetDetailResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetDetailResponse) Reset() {
	*x = GetDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponse) ProtoMessage() {}

func (x *GetDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDetailResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{9}
}

func (x *GetDetailResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetDetailResponse) GetData() *GetDetailResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveRequest) Reset() {
	*x = GetActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveRequest) ProtoMessage() {}

func (x *GetActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveRequest.ProtoReflect.Descriptor instead.
func (*GetActiveRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{10}
}

type GetActiveResponseDataCurriculum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId   string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName string `protobuf:"bytes,2,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	CurriculumId     string `protobuf:"bytes,3,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
	CurriculumName   string `protobuf:"bytes,4,opt,name=curriculum_name,json=curriculumName,proto3" json:"curriculum_name"`
}

func (x *GetActiveResponseDataCurriculum) Reset() {
	*x = GetActiveResponseDataCurriculum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveResponseDataCurriculum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveResponseDataCurriculum) ProtoMessage() {}

func (x *GetActiveResponseDataCurriculum) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveResponseDataCurriculum.ProtoReflect.Descriptor instead.
func (*GetActiveResponseDataCurriculum) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{11}
}

func (x *GetActiveResponseDataCurriculum) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetActiveResponseDataCurriculum) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetActiveResponseDataCurriculum) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

func (x *GetActiveResponseDataCurriculum) GetCurriculumName() string {
	if x != nil {
		return x.CurriculumName
	}
	return ""
}

type GetActiveResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	SemesterStartYear          uint32                             `protobuf:"varint,2,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SchoolYear                 string                             `protobuf:"bytes,3,opt,name=school_year,json=schoolYear,proto3" json:"school_year"`
	SemesterType               string                             `protobuf:"bytes,4,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	IsActive                   bool                               `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	StartDate                  string                             `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate                    string                             `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	StudyPlanInputStartDate    string                             `protobuf:"bytes,8,opt,name=study_plan_input_start_date,json=studyPlanInputStartDate,proto3" json:"study_plan_input_start_date"`
	StudyPlanInputEndDate      string                             `protobuf:"bytes,9,opt,name=study_plan_input_end_date,json=studyPlanInputEndDate,proto3" json:"study_plan_input_end_date"`
	StudyPlanApprovalStartDate string                             `protobuf:"bytes,10,opt,name=study_plan_approval_start_date,json=studyPlanApprovalStartDate,proto3" json:"study_plan_approval_start_date"`
	StudyPlanApprovalEndDate   string                             `protobuf:"bytes,11,opt,name=study_plan_approval_end_date,json=studyPlanApprovalEndDate,proto3" json:"study_plan_approval_end_date"`
	ReferenceSemesterId        string                             `protobuf:"bytes,12,opt,name=reference_semester_id,json=referenceSemesterId,proto3" json:"reference_semester_id"`
	ReferenceSemesterStartYear uint32                             `protobuf:"varint,13,opt,name=reference_semester_start_year,json=referenceSemesterStartYear,proto3" json:"reference_semester_start_year"`
	ReferenceSchoolYear        string                             `protobuf:"bytes,14,opt,name=reference_school_year,json=referenceSchoolYear,proto3" json:"reference_school_year"`
	ReferenceSemesterType      string                             `protobuf:"bytes,15,opt,name=reference_semester_type,json=referenceSemesterType,proto3" json:"reference_semester_type"`
	CheckMinimumGpa            bool                               `protobuf:"varint,16,opt,name=check_minimum_gpa,json=checkMinimumGpa,proto3" json:"check_minimum_gpa"`
	CheckPassedCredit          bool                               `protobuf:"varint,17,opt,name=check_passed_credit,json=checkPassedCredit,proto3" json:"check_passed_credit"`
	DefaultCredit              uint32                             `protobuf:"varint,18,opt,name=default_credit,json=defaultCredit,proto3" json:"default_credit"`
	Curriculums                []*GetActiveResponseDataCurriculum `protobuf:"bytes,19,rep,name=curriculums,proto3" json:"curriculums"`
	MidtermStartDate           string                             `protobuf:"bytes,20,opt,name=midterm_start_date,json=midtermStartDate,proto3" json:"midterm_start_date"`
	MidtermEndDate             string                             `protobuf:"bytes,21,opt,name=midterm_end_date,json=midtermEndDate,proto3" json:"midterm_end_date"`
	EndtermStartDate           string                             `protobuf:"bytes,22,opt,name=endterm_start_date,json=endtermStartDate,proto3" json:"endterm_start_date"`
	EndtermEndDate             string                             `protobuf:"bytes,23,opt,name=endterm_end_date,json=endtermEndDate,proto3" json:"endterm_end_date"`
	GradingStartDate           string                             `protobuf:"bytes,24,opt,name=grading_start_date,json=gradingStartDate,proto3" json:"grading_start_date"`
	GradingEndDate             string                             `protobuf:"bytes,25,opt,name=grading_end_date,json=gradingEndDate,proto3" json:"grading_end_date"`
}

func (x *GetActiveResponseData) Reset() {
	*x = GetActiveResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveResponseData) ProtoMessage() {}

func (x *GetActiveResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveResponseData.ProtoReflect.Descriptor instead.
func (*GetActiveResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{12}
}

func (x *GetActiveResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetActiveResponseData) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *GetActiveResponseData) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetActiveResponseData) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *GetActiveResponseData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetActiveResponseData) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetActiveResponseData) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetActiveResponseData) GetStudyPlanInputStartDate() string {
	if x != nil {
		return x.StudyPlanInputStartDate
	}
	return ""
}

func (x *GetActiveResponseData) GetStudyPlanInputEndDate() string {
	if x != nil {
		return x.StudyPlanInputEndDate
	}
	return ""
}

func (x *GetActiveResponseData) GetStudyPlanApprovalStartDate() string {
	if x != nil {
		return x.StudyPlanApprovalStartDate
	}
	return ""
}

func (x *GetActiveResponseData) GetStudyPlanApprovalEndDate() string {
	if x != nil {
		return x.StudyPlanApprovalEndDate
	}
	return ""
}

func (x *GetActiveResponseData) GetReferenceSemesterId() string {
	if x != nil {
		return x.ReferenceSemesterId
	}
	return ""
}

func (x *GetActiveResponseData) GetReferenceSemesterStartYear() uint32 {
	if x != nil {
		return x.ReferenceSemesterStartYear
	}
	return 0
}

func (x *GetActiveResponseData) GetReferenceSchoolYear() string {
	if x != nil {
		return x.ReferenceSchoolYear
	}
	return ""
}

func (x *GetActiveResponseData) GetReferenceSemesterType() string {
	if x != nil {
		return x.ReferenceSemesterType
	}
	return ""
}

func (x *GetActiveResponseData) GetCheckMinimumGpa() bool {
	if x != nil {
		return x.CheckMinimumGpa
	}
	return false
}

func (x *GetActiveResponseData) GetCheckPassedCredit() bool {
	if x != nil {
		return x.CheckPassedCredit
	}
	return false
}

func (x *GetActiveResponseData) GetDefaultCredit() uint32 {
	if x != nil {
		return x.DefaultCredit
	}
	return 0
}

func (x *GetActiveResponseData) GetCurriculums() []*GetActiveResponseDataCurriculum {
	if x != nil {
		return x.Curriculums
	}
	return nil
}

func (x *GetActiveResponseData) GetMidtermStartDate() string {
	if x != nil {
		return x.MidtermStartDate
	}
	return ""
}

func (x *GetActiveResponseData) GetMidtermEndDate() string {
	if x != nil {
		return x.MidtermEndDate
	}
	return ""
}

func (x *GetActiveResponseData) GetEndtermStartDate() string {
	if x != nil {
		return x.EndtermStartDate
	}
	return ""
}

func (x *GetActiveResponseData) GetEndtermEndDate() string {
	if x != nil {
		return x.EndtermEndDate
	}
	return ""
}

func (x *GetActiveResponseData) GetGradingStartDate() string {
	if x != nil {
		return x.GradingStartDate
	}
	return ""
}

func (x *GetActiveResponseData) GetGradingEndDate() string {
	if x != nil {
		return x.GradingEndDate
	}
	return ""
}

type GetActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetActiveResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetActiveResponse) Reset() {
	*x = GetActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveResponse) ProtoMessage() {}

func (x *GetActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveResponse.ProtoReflect.Descriptor instead.
func (*GetActiveResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{13}
}

func (x *GetActiveResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetActiveResponse) GetData() *GetActiveResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateRequestCurriculum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurriculumId string `protobuf:"bytes,1,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
}

func (x *CreateRequestCurriculum) Reset() {
	*x = CreateRequestCurriculum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestCurriculum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestCurriculum) ProtoMessage() {}

func (x *CreateRequestCurriculum) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestCurriculum.ProtoReflect.Descriptor instead.
func (*CreateRequestCurriculum) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRequestCurriculum) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemesterStartYear          uint32                     `protobuf:"varint,1,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SemesterType               string                     `protobuf:"bytes,2,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	StartDate                  string                     `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate                    string                     `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	StudyPlanInputStartDate    string                     `protobuf:"bytes,5,opt,name=study_plan_input_start_date,json=studyPlanInputStartDate,proto3" json:"study_plan_input_start_date"`
	StudyPlanInputEndDate      string                     `protobuf:"bytes,6,opt,name=study_plan_input_end_date,json=studyPlanInputEndDate,proto3" json:"study_plan_input_end_date"`
	StudyPlanApprovalStartDate string                     `protobuf:"bytes,7,opt,name=study_plan_approval_start_date,json=studyPlanApprovalStartDate,proto3" json:"study_plan_approval_start_date"`
	StudyPlanApprovalEndDate   string                     `protobuf:"bytes,8,opt,name=study_plan_approval_end_date,json=studyPlanApprovalEndDate,proto3" json:"study_plan_approval_end_date"`
	ReferenceSemesterId        string                     `protobuf:"bytes,9,opt,name=reference_semester_id,json=referenceSemesterId,proto3" json:"reference_semester_id"`
	CheckMinimumGpa            bool                       `protobuf:"varint,10,opt,name=check_minimum_gpa,json=checkMinimumGpa,proto3" json:"check_minimum_gpa"`
	CheckPassedCredit          bool                       `protobuf:"varint,11,opt,name=check_passed_credit,json=checkPassedCredit,proto3" json:"check_passed_credit"`
	DefaultCredit              uint32                     `protobuf:"varint,12,opt,name=default_credit,json=defaultCredit,proto3" json:"default_credit"`
	Curriculums                []*CreateRequestCurriculum `protobuf:"bytes,13,rep,name=curriculums,proto3" json:"curriculums"`
	MidtermStartDate           string                     `protobuf:"bytes,14,opt,name=midterm_start_date,json=midtermStartDate,proto3" json:"midterm_start_date"`
	MidtermEndDate             string                     `protobuf:"bytes,15,opt,name=midterm_end_date,json=midtermEndDate,proto3" json:"midterm_end_date"`
	EndtermStartDate           string                     `protobuf:"bytes,16,opt,name=endterm_start_date,json=endtermStartDate,proto3" json:"endterm_start_date"`
	EndtermEndDate             string                     `protobuf:"bytes,17,opt,name=endterm_end_date,json=endtermEndDate,proto3" json:"endterm_end_date"`
	GradingStartDate           string                     `protobuf:"bytes,18,opt,name=grading_start_date,json=gradingStartDate,proto3" json:"grading_start_date"`
	GradingEndDate             string                     `protobuf:"bytes,19,opt,name=grading_end_date,json=gradingEndDate,proto3" json:"grading_end_date"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRequest) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *CreateRequest) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *CreateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateRequest) GetStudyPlanInputStartDate() string {
	if x != nil {
		return x.StudyPlanInputStartDate
	}
	return ""
}

func (x *CreateRequest) GetStudyPlanInputEndDate() string {
	if x != nil {
		return x.StudyPlanInputEndDate
	}
	return ""
}

func (x *CreateRequest) GetStudyPlanApprovalStartDate() string {
	if x != nil {
		return x.StudyPlanApprovalStartDate
	}
	return ""
}

func (x *CreateRequest) GetStudyPlanApprovalEndDate() string {
	if x != nil {
		return x.StudyPlanApprovalEndDate
	}
	return ""
}

func (x *CreateRequest) GetReferenceSemesterId() string {
	if x != nil {
		return x.ReferenceSemesterId
	}
	return ""
}

func (x *CreateRequest) GetCheckMinimumGpa() bool {
	if x != nil {
		return x.CheckMinimumGpa
	}
	return false
}

func (x *CreateRequest) GetCheckPassedCredit() bool {
	if x != nil {
		return x.CheckPassedCredit
	}
	return false
}

func (x *CreateRequest) GetDefaultCredit() uint32 {
	if x != nil {
		return x.DefaultCredit
	}
	return 0
}

func (x *CreateRequest) GetCurriculums() []*CreateRequestCurriculum {
	if x != nil {
		return x.Curriculums
	}
	return nil
}

func (x *CreateRequest) GetMidtermStartDate() string {
	if x != nil {
		return x.MidtermStartDate
	}
	return ""
}

func (x *CreateRequest) GetMidtermEndDate() string {
	if x != nil {
		return x.MidtermEndDate
	}
	return ""
}

func (x *CreateRequest) GetEndtermStartDate() string {
	if x != nil {
		return x.EndtermStartDate
	}
	return ""
}

func (x *CreateRequest) GetEndtermEndDate() string {
	if x != nil {
		return x.EndtermEndDate
	}
	return ""
}

func (x *CreateRequest) GetGradingStartDate() string {
	if x != nil {
		return x.GradingStartDate
	}
	return ""
}

func (x *CreateRequest) GetGradingEndDate() string {
	if x != nil {
		return x.GradingEndDate
	}
	return ""
}

type CreateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateResponseData) Reset() {
	*x = CreateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponseData) ProtoMessage() {}

func (x *CreateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponseData.ProtoReflect.Descriptor instead.
func (*CreateResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{16}
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *CreateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{17}
}

func (x *CreateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CreateResponse) GetData() *CreateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	SemesterStartYear          uint32                     `protobuf:"varint,2,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SemesterType               string                     `protobuf:"bytes,3,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	StartDate                  string                     `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate                    string                     `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	StudyPlanInputStartDate    string                     `protobuf:"bytes,6,opt,name=study_plan_input_start_date,json=studyPlanInputStartDate,proto3" json:"study_plan_input_start_date"`
	StudyPlanInputEndDate      string                     `protobuf:"bytes,7,opt,name=study_plan_input_end_date,json=studyPlanInputEndDate,proto3" json:"study_plan_input_end_date"`
	StudyPlanApprovalStartDate string                     `protobuf:"bytes,8,opt,name=study_plan_approval_start_date,json=studyPlanApprovalStartDate,proto3" json:"study_plan_approval_start_date"`
	StudyPlanApprovalEndDate   string                     `protobuf:"bytes,9,opt,name=study_plan_approval_end_date,json=studyPlanApprovalEndDate,proto3" json:"study_plan_approval_end_date"`
	ReferenceSemesterId        string                     `protobuf:"bytes,10,opt,name=reference_semester_id,json=referenceSemesterId,proto3" json:"reference_semester_id"`
	CheckMinimumGpa            bool                       `protobuf:"varint,11,opt,name=check_minimum_gpa,json=checkMinimumGpa,proto3" json:"check_minimum_gpa"`
	CheckPassedCredit          bool                       `protobuf:"varint,12,opt,name=check_passed_credit,json=checkPassedCredit,proto3" json:"check_passed_credit"`
	DefaultCredit              uint32                     `protobuf:"varint,13,opt,name=default_credit,json=defaultCredit,proto3" json:"default_credit"`
	Curriculums                []*CreateRequestCurriculum `protobuf:"bytes,14,rep,name=curriculums,proto3" json:"curriculums"`
	MidtermStartDate           string                     `protobuf:"bytes,15,opt,name=midterm_start_date,json=midtermStartDate,proto3" json:"midterm_start_date"`
	MidtermEndDate             string                     `protobuf:"bytes,16,opt,name=midterm_end_date,json=midtermEndDate,proto3" json:"midterm_end_date"`
	EndtermStartDate           string                     `protobuf:"bytes,17,opt,name=endterm_start_date,json=endtermStartDate,proto3" json:"endterm_start_date"`
	EndtermEndDate             string                     `protobuf:"bytes,18,opt,name=endterm_end_date,json=endtermEndDate,proto3" json:"endterm_end_date"`
	GradingStartDate           string                     `protobuf:"bytes,19,opt,name=grading_start_date,json=gradingStartDate,proto3" json:"grading_start_date"`
	GradingEndDate             string                     `protobuf:"bytes,20,opt,name=grading_end_date,json=gradingEndDate,proto3" json:"grading_end_date"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRequest) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *UpdateRequest) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *UpdateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdateRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UpdateRequest) GetStudyPlanInputStartDate() string {
	if x != nil {
		return x.StudyPlanInputStartDate
	}
	return ""
}

func (x *UpdateRequest) GetStudyPlanInputEndDate() string {
	if x != nil {
		return x.StudyPlanInputEndDate
	}
	return ""
}

func (x *UpdateRequest) GetStudyPlanApprovalStartDate() string {
	if x != nil {
		return x.StudyPlanApprovalStartDate
	}
	return ""
}

func (x *UpdateRequest) GetStudyPlanApprovalEndDate() string {
	if x != nil {
		return x.StudyPlanApprovalEndDate
	}
	return ""
}

func (x *UpdateRequest) GetReferenceSemesterId() string {
	if x != nil {
		return x.ReferenceSemesterId
	}
	return ""
}

func (x *UpdateRequest) GetCheckMinimumGpa() bool {
	if x != nil {
		return x.CheckMinimumGpa
	}
	return false
}

func (x *UpdateRequest) GetCheckPassedCredit() bool {
	if x != nil {
		return x.CheckPassedCredit
	}
	return false
}

func (x *UpdateRequest) GetDefaultCredit() uint32 {
	if x != nil {
		return x.DefaultCredit
	}
	return 0
}

func (x *UpdateRequest) GetCurriculums() []*CreateRequestCurriculum {
	if x != nil {
		return x.Curriculums
	}
	return nil
}

func (x *UpdateRequest) GetMidtermStartDate() string {
	if x != nil {
		return x.MidtermStartDate
	}
	return ""
}

func (x *UpdateRequest) GetMidtermEndDate() string {
	if x != nil {
		return x.MidtermEndDate
	}
	return ""
}

func (x *UpdateRequest) GetEndtermStartDate() string {
	if x != nil {
		return x.EndtermStartDate
	}
	return ""
}

func (x *UpdateRequest) GetEndtermEndDate() string {
	if x != nil {
		return x.EndtermEndDate
	}
	return ""
}

func (x *UpdateRequest) GetGradingStartDate() string {
	if x != nil {
		return x.GradingStartDate
	}
	return ""
}

func (x *UpdateRequest) GetGradingEndDate() string {
	if x != nil {
		return x.GradingEndDate
	}
	return ""
}

type UpdateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponseData) Reset() {
	*x = UpdateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponseData) ProtoMessage() {}

func (x *UpdateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponseData.ProtoReflect.Descriptor instead.
func (*UpdateResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{19}
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *UpdateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateResponse) GetData() *UpdateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateActivationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	IsActive bool   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active"`
}

func (x *UpdateActivationRequest) Reset() {
	*x = UpdateActivationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivationRequest) ProtoMessage() {}

func (x *UpdateActivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivationRequest.ProtoReflect.Descriptor instead.
func (*UpdateActivationRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateActivationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateActivationRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateActivationResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateActivationResponseData) Reset() {
	*x = UpdateActivationResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivationResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivationResponseData) ProtoMessage() {}

func (x *UpdateActivationResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivationResponseData.ProtoReflect.Descriptor instead.
func (*UpdateActivationResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{22}
}

type UpdateActivationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                         `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *UpdateActivationResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *UpdateActivationResponse) Reset() {
	*x = UpdateActivationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivationResponse) ProtoMessage() {}

func (x *UpdateActivationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivationResponse.ProtoReflect.Descriptor instead.
func (*UpdateActivationResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateActivationResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateActivationResponse) GetData() *UpdateActivationResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponseData) Reset() {
	*x = DeleteResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponseData) ProtoMessage() {}

func (x *DeleteResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponseData.ProtoReflect.Descriptor instead.
func (*DeleteResponseData) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{25}
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *DeleteResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_semester_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_semester_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_admin_semester_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DeleteResponse) GetData() *DeleteResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_admin_semester_proto protoreflect.FileDescriptor

var file_admin_semester_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65,
	0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf3,
	0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65,
	0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x75, 0x72,
	0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x69,
	0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x09, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x1b,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x19, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59,
	0x65, 0x61, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x67, 0x70, 0x61,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x47, 0x70, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x51,
	0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63,
	0x75, 0x6c, 0x75, 0x6d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x74, 0x65,
	0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65,
	0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xb1, 0x09, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x19, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x42, 0x0a, 0x1e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x36, 0x0a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x67, 0x70, 0x61, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x47, 0x70, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x64, 0x74, 0x65,
	0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x49, 0x64, 0x22,
	0xa4, 0x07, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x19, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1c,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x67, 0x70, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x70, 0x61, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x64, 0x74,
	0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72,
	0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb4, 0x07, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x19, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a,
	0x1c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a,
	0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x67, 0x70, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x70, 0x61, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x74, 0x65,
	0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x46, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd6, 0x04,
	0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_semester_proto_rawDescOnce sync.Once
	file_admin_semester_proto_rawDescData = file_admin_semester_proto_rawDesc
)

func file_admin_semester_proto_rawDescGZIP() []byte {
	file_admin_semester_proto_rawDescOnce.Do(func() {
		file_admin_semester_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_semester_proto_rawDescData)
	})
	return file_admin_semester_proto_rawDescData
}

var file_admin_semester_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_admin_semester_proto_goTypes = []interface{}{
	(*Meta)(nil),                            // 0: admin_semester.Meta
	(*Pagination)(nil),                      // 1: admin_semester.Pagination
	(*GetListRequest)(nil),                  // 2: admin_semester.GetListRequest
	(*GetListResponseDataCurriculum)(nil),   // 3: admin_semester.GetListResponseDataCurriculum
	(*GetListResponseData)(nil),             // 4: admin_semester.GetListResponseData
	(*GetListResponse)(nil),                 // 5: admin_semester.GetListResponse
	(*GetDetailRequest)(nil),                // 6: admin_semester.GetDetailRequest
	(*GetDetailResponseDataCurriculum)(nil), // 7: admin_semester.GetDetailResponseDataCurriculum
	(*GetDetailResponseData)(nil),           // 8: admin_semester.GetDetailResponseData
	(*GetDetailResponse)(nil),               // 9: admin_semester.GetDetailResponse
	(*GetActiveRequest)(nil),                // 10: admin_semester.GetActiveRequest
	(*GetActiveResponseDataCurriculum)(nil), // 11: admin_semester.GetActiveResponseDataCurriculum
	(*GetActiveResponseData)(nil),           // 12: admin_semester.GetActiveResponseData
	(*GetActiveResponse)(nil),               // 13: admin_semester.GetActiveResponse
	(*CreateRequestCurriculum)(nil),         // 14: admin_semester.CreateRequestCurriculum
	(*CreateRequest)(nil),                   // 15: admin_semester.CreateRequest
	(*CreateResponseData)(nil),              // 16: admin_semester.CreateResponseData
	(*CreateResponse)(nil),                  // 17: admin_semester.CreateResponse
	(*UpdateRequest)(nil),                   // 18: admin_semester.UpdateRequest
	(*UpdateResponseData)(nil),              // 19: admin_semester.UpdateResponseData
	(*UpdateResponse)(nil),                  // 20: admin_semester.UpdateResponse
	(*UpdateActivationRequest)(nil),         // 21: admin_semester.UpdateActivationRequest
	(*UpdateActivationResponseData)(nil),    // 22: admin_semester.UpdateActivationResponseData
	(*UpdateActivationResponse)(nil),        // 23: admin_semester.UpdateActivationResponse
	(*DeleteRequest)(nil),                   // 24: admin_semester.DeleteRequest
	(*DeleteResponseData)(nil),              // 25: admin_semester.DeleteResponseData
	(*DeleteResponse)(nil),                  // 26: admin_semester.DeleteResponse
}
var file_admin_semester_proto_depIdxs = []int32{
	3,  // 0: admin_semester.GetListResponseData.curriculums:type_name -> admin_semester.GetListResponseDataCurriculum
	0,  // 1: admin_semester.GetListResponse.meta:type_name -> admin_semester.Meta
	1,  // 2: admin_semester.GetListResponse.pagination:type_name -> admin_semester.Pagination
	4,  // 3: admin_semester.GetListResponse.data:type_name -> admin_semester.GetListResponseData
	7,  // 4: admin_semester.GetDetailResponseData.curriculums:type_name -> admin_semester.GetDetailResponseDataCurriculum
	0,  // 5: admin_semester.GetDetailResponse.meta:type_name -> admin_semester.Meta
	8,  // 6: admin_semester.GetDetailResponse.data:type_name -> admin_semester.GetDetailResponseData
	11, // 7: admin_semester.GetActiveResponseData.curriculums:type_name -> admin_semester.GetActiveResponseDataCurriculum
	0,  // 8: admin_semester.GetActiveResponse.meta:type_name -> admin_semester.Meta
	12, // 9: admin_semester.GetActiveResponse.data:type_name -> admin_semester.GetActiveResponseData
	14, // 10: admin_semester.CreateRequest.curriculums:type_name -> admin_semester.CreateRequestCurriculum
	0,  // 11: admin_semester.CreateResponse.meta:type_name -> admin_semester.Meta
	16, // 12: admin_semester.CreateResponse.data:type_name -> admin_semester.CreateResponseData
	14, // 13: admin_semester.UpdateRequest.curriculums:type_name -> admin_semester.CreateRequestCurriculum
	0,  // 14: admin_semester.UpdateResponse.meta:type_name -> admin_semester.Meta
	19, // 15: admin_semester.UpdateResponse.data:type_name -> admin_semester.UpdateResponseData
	0,  // 16: admin_semester.UpdateActivationResponse.meta:type_name -> admin_semester.Meta
	22, // 17: admin_semester.UpdateActivationResponse.data:type_name -> admin_semester.UpdateActivationResponseData
	0,  // 18: admin_semester.DeleteResponse.meta:type_name -> admin_semester.Meta
	25, // 19: admin_semester.DeleteResponse.data:type_name -> admin_semester.DeleteResponseData
	2,  // 20: admin_semester.AdminSemesterHandler.GetList:input_type -> admin_semester.GetListRequest
	6,  // 21: admin_semester.AdminSemesterHandler.GetDetail:input_type -> admin_semester.GetDetailRequest
	10, // 22: admin_semester.AdminSemesterHandler.GetActive:input_type -> admin_semester.GetActiveRequest
	15, // 23: admin_semester.AdminSemesterHandler.Create:input_type -> admin_semester.CreateRequest
	18, // 24: admin_semester.AdminSemesterHandler.Update:input_type -> admin_semester.UpdateRequest
	21, // 25: admin_semester.AdminSemesterHandler.UpdateActivation:input_type -> admin_semester.UpdateActivationRequest
	24, // 26: admin_semester.AdminSemesterHandler.Delete:input_type -> admin_semester.DeleteRequest
	5,  // 27: admin_semester.AdminSemesterHandler.GetList:output_type -> admin_semester.GetListResponse
	9,  // 28: admin_semester.AdminSemesterHandler.GetDetail:output_type -> admin_semester.GetDetailResponse
	13, // 29: admin_semester.AdminSemesterHandler.GetActive:output_type -> admin_semester.GetActiveResponse
	17, // 30: admin_semester.AdminSemesterHandler.Create:output_type -> admin_semester.CreateResponse
	20, // 31: admin_semester.AdminSemesterHandler.Update:output_type -> admin_semester.UpdateResponse
	23, // 32: admin_semester.AdminSemesterHandler.UpdateActivation:output_type -> admin_semester.UpdateActivationResponse
	26, // 33: admin_semester.AdminSemesterHandler.Delete:output_type -> admin_semester.DeleteResponse
	27, // [27:34] is the sub-list for method output_type
	20, // [20:27] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_admin_semester_proto_init() }
func file_admin_semester_proto_init() {
	if File_admin_semester_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_semester_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponseDataCurriculum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataCurriculum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveResponseDataCurriculum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestCurriculum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivationResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_semester_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_semester_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_semester_proto_goTypes,
		DependencyIndexes: file_admin_semester_proto_depIdxs,
		MessageInfos:      file_admin_semester_proto_msgTypes,
	}.Build()
	File_admin_semester_proto = out.File
	file_admin_semester_proto_rawDesc = nil
	file_admin_semester_proto_goTypes = nil
	file_admin_semester_proto_depIdxs = nil
}
