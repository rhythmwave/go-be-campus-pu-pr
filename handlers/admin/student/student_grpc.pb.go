// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: admin/student.proto

package student

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AdminStudentHandlerClient is the client API for AdminStudentHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdminStudentHandlerClient interface {
	GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error)
	GetDetail(ctx context.Context, in *GetDetailRequest, opts ...grpc.CallOption) (*GetDetailResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	BulkUpdateStatus(ctx context.Context, in *BulkUpdateStatusRequest, opts ...grpc.CallOption) (*BulkUpdateStatusResponse, error)
	GetStatusSummary(ctx context.Context, in *GetStatusSummaryRequest, opts ...grpc.CallOption) (*GetStatusSummaryResponse, error)
	GetSubjectGrade(ctx context.Context, in *GetSubjectGradeRequest, opts ...grpc.CallOption) (*GetSubjectGradeResponse, error)
	BulkUpdatePayment(ctx context.Context, in *BulkUpdatePaymentRequest, opts ...grpc.CallOption) (*BulkUpdatePaymentResponse, error)
	GetPaymentLog(ctx context.Context, in *GetPaymentLogRequest, opts ...grpc.CallOption) (*GetPaymentLogResponse, error)
	ConvertGrade(ctx context.Context, in *ConvertGradeRequest, opts ...grpc.CallOption) (*ConvertGradeResponse, error)
}

type adminStudentHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminStudentHandlerClient(cc grpc.ClientConnInterface) AdminStudentHandlerClient {
	return &adminStudentHandlerClient{cc}
}

func (c *adminStudentHandlerClient) GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error) {
	out := new(GetListResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) GetDetail(ctx context.Context, in *GetDetailRequest, opts ...grpc.CallOption) (*GetDetailResponse, error) {
	out := new(GetDetailResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/GetDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) BulkUpdateStatus(ctx context.Context, in *BulkUpdateStatusRequest, opts ...grpc.CallOption) (*BulkUpdateStatusResponse, error) {
	out := new(BulkUpdateStatusResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/BulkUpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) GetStatusSummary(ctx context.Context, in *GetStatusSummaryRequest, opts ...grpc.CallOption) (*GetStatusSummaryResponse, error) {
	out := new(GetStatusSummaryResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/GetStatusSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) GetSubjectGrade(ctx context.Context, in *GetSubjectGradeRequest, opts ...grpc.CallOption) (*GetSubjectGradeResponse, error) {
	out := new(GetSubjectGradeResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/GetSubjectGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) BulkUpdatePayment(ctx context.Context, in *BulkUpdatePaymentRequest, opts ...grpc.CallOption) (*BulkUpdatePaymentResponse, error) {
	out := new(BulkUpdatePaymentResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/BulkUpdatePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) GetPaymentLog(ctx context.Context, in *GetPaymentLogRequest, opts ...grpc.CallOption) (*GetPaymentLogResponse, error) {
	out := new(GetPaymentLogResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/GetPaymentLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminStudentHandlerClient) ConvertGrade(ctx context.Context, in *ConvertGradeRequest, opts ...grpc.CallOption) (*ConvertGradeResponse, error) {
	out := new(ConvertGradeResponse)
	err := c.cc.Invoke(ctx, "/admin_student.AdminStudentHandler/ConvertGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminStudentHandlerServer is the server API for AdminStudentHandler service.
// All implementations must embed UnimplementedAdminStudentHandlerServer
// for forward compatibility
type AdminStudentHandlerServer interface {
	GetList(context.Context, *GetListRequest) (*GetListResponse, error)
	GetDetail(context.Context, *GetDetailRequest) (*GetDetailResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	BulkUpdateStatus(context.Context, *BulkUpdateStatusRequest) (*BulkUpdateStatusResponse, error)
	GetStatusSummary(context.Context, *GetStatusSummaryRequest) (*GetStatusSummaryResponse, error)
	GetSubjectGrade(context.Context, *GetSubjectGradeRequest) (*GetSubjectGradeResponse, error)
	BulkUpdatePayment(context.Context, *BulkUpdatePaymentRequest) (*BulkUpdatePaymentResponse, error)
	GetPaymentLog(context.Context, *GetPaymentLogRequest) (*GetPaymentLogResponse, error)
	ConvertGrade(context.Context, *ConvertGradeRequest) (*ConvertGradeResponse, error)
	mustEmbedUnimplementedAdminStudentHandlerServer()
}

// UnimplementedAdminStudentHandlerServer must be embedded to have forward compatible implementations.
type UnimplementedAdminStudentHandlerServer struct {
}

func (UnimplementedAdminStudentHandlerServer) GetList(context.Context, *GetListRequest) (*GetListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (UnimplementedAdminStudentHandlerServer) GetDetail(context.Context, *GetDetailRequest) (*GetDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetail not implemented")
}
func (UnimplementedAdminStudentHandlerServer) Create(context.Context, *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedAdminStudentHandlerServer) Update(context.Context, *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedAdminStudentHandlerServer) Delete(context.Context, *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedAdminStudentHandlerServer) BulkUpdateStatus(context.Context, *BulkUpdateStatusRequest) (*BulkUpdateStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkUpdateStatus not implemented")
}
func (UnimplementedAdminStudentHandlerServer) GetStatusSummary(context.Context, *GetStatusSummaryRequest) (*GetStatusSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatusSummary not implemented")
}
func (UnimplementedAdminStudentHandlerServer) GetSubjectGrade(context.Context, *GetSubjectGradeRequest) (*GetSubjectGradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubjectGrade not implemented")
}
func (UnimplementedAdminStudentHandlerServer) BulkUpdatePayment(context.Context, *BulkUpdatePaymentRequest) (*BulkUpdatePaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkUpdatePayment not implemented")
}
func (UnimplementedAdminStudentHandlerServer) GetPaymentLog(context.Context, *GetPaymentLogRequest) (*GetPaymentLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentLog not implemented")
}
func (UnimplementedAdminStudentHandlerServer) ConvertGrade(context.Context, *ConvertGradeRequest) (*ConvertGradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConvertGrade not implemented")
}
func (UnimplementedAdminStudentHandlerServer) mustEmbedUnimplementedAdminStudentHandlerServer() {}

// UnsafeAdminStudentHandlerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdminStudentHandlerServer will
// result in compilation errors.
type UnsafeAdminStudentHandlerServer interface {
	mustEmbedUnimplementedAdminStudentHandlerServer()
}

func RegisterAdminStudentHandlerServer(s grpc.ServiceRegistrar, srv AdminStudentHandlerServer) {
	s.RegisterService(&AdminStudentHandler_ServiceDesc, srv)
}

func _AdminStudentHandler_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).GetList(ctx, req.(*GetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_GetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).GetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/GetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).GetDetail(ctx, req.(*GetDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_BulkUpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkUpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).BulkUpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/BulkUpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).BulkUpdateStatus(ctx, req.(*BulkUpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_GetStatusSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).GetStatusSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/GetStatusSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).GetStatusSummary(ctx, req.(*GetStatusSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_GetSubjectGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubjectGradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).GetSubjectGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/GetSubjectGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).GetSubjectGrade(ctx, req.(*GetSubjectGradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_BulkUpdatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkUpdatePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).BulkUpdatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/BulkUpdatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).BulkUpdatePayment(ctx, req.(*BulkUpdatePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_GetPaymentLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaymentLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).GetPaymentLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/GetPaymentLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).GetPaymentLog(ctx, req.(*GetPaymentLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminStudentHandler_ConvertGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConvertGradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminStudentHandlerServer).ConvertGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_student.AdminStudentHandler/ConvertGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminStudentHandlerServer).ConvertGrade(ctx, req.(*ConvertGradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdminStudentHandler_ServiceDesc is the grpc.ServiceDesc for AdminStudentHandler service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdminStudentHandler_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "admin_student.AdminStudentHandler",
	HandlerType: (*AdminStudentHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _AdminStudentHandler_GetList_Handler,
		},
		{
			MethodName: "GetDetail",
			Handler:    _AdminStudentHandler_GetDetail_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AdminStudentHandler_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AdminStudentHandler_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AdminStudentHandler_Delete_Handler,
		},
		{
			MethodName: "BulkUpdateStatus",
			Handler:    _AdminStudentHandler_BulkUpdateStatus_Handler,
		},
		{
			MethodName: "GetStatusSummary",
			Handler:    _AdminStudentHandler_GetStatusSummary_Handler,
		},
		{
			MethodName: "GetSubjectGrade",
			Handler:    _AdminStudentHandler_GetSubjectGrade_Handler,
		},
		{
			MethodName: "BulkUpdatePayment",
			Handler:    _AdminStudentHandler_BulkUpdatePayment_Handler,
		},
		{
			MethodName: "GetPaymentLog",
			Handler:    _AdminStudentHandler_GetPaymentLog_Handler,
		},
		{
			MethodName: "ConvertGrade",
			Handler:    _AdminStudentHandler_ConvertGrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin/student.proto",
}
