// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: admin/class.proto

package class

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit          uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Search         string `protobuf:"bytes,3,opt,name=search,proto3" json:"search"`
	Sort           string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort"`
	SortBy         string `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by"`
	StudyProgramId string `protobuf:"bytes,6,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	SemesterId     string `protobuf:"bytes,7,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
	IsActive       string `protobuf:"bytes,8,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	ClassName      string `protobuf:"bytes,9,opt,name=class_name,json=className,proto3" json:"class_name"`
	SubjectName    string `protobuf:"bytes,10,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	SubjectId      string `protobuf:"bytes,11,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	IsMbkm         bool   `protobuf:"varint,12,opt,name=is_mbkm,json=isMbkm,proto3" json:"is_mbkm"`
	ForOddSemester string `protobuf:"bytes,13,opt,name=for_odd_semester,json=forOddSemester,proto3" json:"for_odd_semester"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{2}
}

func (x *GetListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetListRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *GetListRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetListRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetListRequest) GetIsActive() string {
	if x != nil {
		return x.IsActive
	}
	return ""
}

func (x *GetListRequest) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *GetListRequest) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetListRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetListRequest) GetIsMbkm() bool {
	if x != nil {
		return x.IsMbkm
	}
	return false
}

func (x *GetListRequest) GetForOddSemester() string {
	if x != nil {
		return x.ForOddSemester
	}
	return ""
}

type GetListResponseDataLecturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	FrontTitle string `protobuf:"bytes,3,opt,name=front_title,json=frontTitle,proto3" json:"front_title"`
	BackDegree string `protobuf:"bytes,4,opt,name=back_degree,json=backDegree,proto3" json:"back_degree"`
}

func (x *GetListResponseDataLecturer) Reset() {
	*x = GetListResponseDataLecturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponseDataLecturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponseDataLecturer) ProtoMessage() {}

func (x *GetListResponseDataLecturer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponseDataLecturer.ProtoReflect.Descriptor instead.
func (*GetListResponseDataLecturer) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{3}
}

func (x *GetListResponseDataLecturer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetListResponseDataLecturer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetListResponseDataLecturer) GetFrontTitle() string {
	if x != nil {
		return x.FrontTitle
	}
	return ""
}

func (x *GetListResponseDataLecturer) GetBackDegree() string {
	if x != nil {
		return x.BackDegree
	}
	return ""
}

type GetListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                        string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	SubjectId                   string                         `protobuf:"bytes,3,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	SubjectCode                 string                         `protobuf:"bytes,4,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName                 string                         `protobuf:"bytes,5,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	SubjectIsMandatory          bool                           `protobuf:"varint,6,opt,name=subject_is_mandatory,json=subjectIsMandatory,proto3" json:"subject_is_mandatory"`
	SubjectSemesterPackage      uint32                         `protobuf:"varint,7,opt,name=subject_semester_package,json=subjectSemesterPackage,proto3" json:"subject_semester_package"`
	TotalParticipant            uint32                         `protobuf:"varint,8,opt,name=total_participant,json=totalParticipant,proto3" json:"total_participant"`
	Lecturers                   []*GetListResponseDataLecturer `protobuf:"bytes,9,rep,name=lecturers,proto3" json:"lecturers"`
	SubjectTheoryCredit         uint32                         `protobuf:"varint,10,opt,name=subject_theory_credit,json=subjectTheoryCredit,proto3" json:"subject_theory_credit"`
	SubjectPracticumCredit      uint32                         `protobuf:"varint,11,opt,name=subject_practicum_credit,json=subjectPracticumCredit,proto3" json:"subject_practicum_credit"`
	SubjectFieldPracticumCredit uint32                         `protobuf:"varint,12,opt,name=subject_field_practicum_credit,json=subjectFieldPracticumCredit,proto3" json:"subject_field_practicum_credit"`
	IsActive                    bool                           `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	MaximumParticipant          uint32                         `protobuf:"varint,14,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	UnapprovedStudyPlan         uint32                         `protobuf:"varint,15,opt,name=unapproved_study_plan,json=unapprovedStudyPlan,proto3" json:"unapproved_study_plan"`
	TotalMaterial               uint32                         `protobuf:"varint,16,opt,name=total_material,json=totalMaterial,proto3" json:"total_material"`
	TotalWork                   uint32                         `protobuf:"varint,17,opt,name=total_work,json=totalWork,proto3" json:"total_work"`
	TotalDiscussion             uint32                         `protobuf:"varint,18,opt,name=total_discussion,json=totalDiscussion,proto3" json:"total_discussion"`
	TotalExam                   uint32                         `protobuf:"varint,19,opt,name=total_exam,json=totalExam,proto3" json:"total_exam"`
	TotalLecturePlan            uint32                         `protobuf:"varint,20,opt,name=total_lecture_plan,json=totalLecturePlan,proto3" json:"total_lecture_plan"`
	TotalLectureDone            uint32                         `protobuf:"varint,21,opt,name=total_lecture_done,json=totalLectureDone,proto3" json:"total_lecture_done"`
	TotalGradedParticipant      uint32                         `protobuf:"varint,22,opt,name=total_graded_participant,json=totalGradedParticipant,proto3" json:"total_graded_participant"`
	StudyLevelId                string                         `protobuf:"bytes,23,opt,name=study_level_id,json=studyLevelId,proto3" json:"study_level_id"`
	TotalEvent                  uint32                         `protobuf:"varint,24,opt,name=total_event,json=totalEvent,proto3" json:"total_event"`
	ApplicationDeadline         string                         `protobuf:"bytes,25,opt,name=application_deadline,json=applicationDeadline,proto3" json:"application_deadline"`
	CurriculumId                string                         `protobuf:"bytes,26,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
	CurriculumName              string                         `protobuf:"bytes,27,opt,name=curriculum_name,json=curriculumName,proto3" json:"curriculum_name"`
	StudyProgramId              string                         `protobuf:"bytes,28,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName            string                         `protobuf:"bytes,29,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	SemesterId                  string                         `protobuf:"bytes,30,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
	SemesterStartYear           uint32                         `protobuf:"varint,31,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SchoolYear                  string                         `protobuf:"bytes,32,opt,name=school_year,json=schoolYear,proto3" json:"school_year"`
	SemesterType                string                         `protobuf:"bytes,33,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
}

func (x *GetListResponseData) Reset() {
	*x = GetListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponseData) ProtoMessage() {}

func (x *GetListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponseData.ProtoReflect.Descriptor instead.
func (*GetListResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{4}
}

func (x *GetListResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetListResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetListResponseData) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetListResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetListResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetListResponseData) GetSubjectIsMandatory() bool {
	if x != nil {
		return x.SubjectIsMandatory
	}
	return false
}

func (x *GetListResponseData) GetSubjectSemesterPackage() uint32 {
	if x != nil {
		return x.SubjectSemesterPackage
	}
	return 0
}

func (x *GetListResponseData) GetTotalParticipant() uint32 {
	if x != nil {
		return x.TotalParticipant
	}
	return 0
}

func (x *GetListResponseData) GetLecturers() []*GetListResponseDataLecturer {
	if x != nil {
		return x.Lecturers
	}
	return nil
}

func (x *GetListResponseData) GetSubjectTheoryCredit() uint32 {
	if x != nil {
		return x.SubjectTheoryCredit
	}
	return 0
}

func (x *GetListResponseData) GetSubjectPracticumCredit() uint32 {
	if x != nil {
		return x.SubjectPracticumCredit
	}
	return 0
}

func (x *GetListResponseData) GetSubjectFieldPracticumCredit() uint32 {
	if x != nil {
		return x.SubjectFieldPracticumCredit
	}
	return 0
}

func (x *GetListResponseData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetListResponseData) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *GetListResponseData) GetUnapprovedStudyPlan() uint32 {
	if x != nil {
		return x.UnapprovedStudyPlan
	}
	return 0
}

func (x *GetListResponseData) GetTotalMaterial() uint32 {
	if x != nil {
		return x.TotalMaterial
	}
	return 0
}

func (x *GetListResponseData) GetTotalWork() uint32 {
	if x != nil {
		return x.TotalWork
	}
	return 0
}

func (x *GetListResponseData) GetTotalDiscussion() uint32 {
	if x != nil {
		return x.TotalDiscussion
	}
	return 0
}

func (x *GetListResponseData) GetTotalExam() uint32 {
	if x != nil {
		return x.TotalExam
	}
	return 0
}

func (x *GetListResponseData) GetTotalLecturePlan() uint32 {
	if x != nil {
		return x.TotalLecturePlan
	}
	return 0
}

func (x *GetListResponseData) GetTotalLectureDone() uint32 {
	if x != nil {
		return x.TotalLectureDone
	}
	return 0
}

func (x *GetListResponseData) GetTotalGradedParticipant() uint32 {
	if x != nil {
		return x.TotalGradedParticipant
	}
	return 0
}

func (x *GetListResponseData) GetStudyLevelId() string {
	if x != nil {
		return x.StudyLevelId
	}
	return ""
}

func (x *GetListResponseData) GetTotalEvent() uint32 {
	if x != nil {
		return x.TotalEvent
	}
	return 0
}

func (x *GetListResponseData) GetApplicationDeadline() string {
	if x != nil {
		return x.ApplicationDeadline
	}
	return ""
}

func (x *GetListResponseData) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

func (x *GetListResponseData) GetCurriculumName() string {
	if x != nil {
		return x.CurriculumName
	}
	return ""
}

func (x *GetListResponseData) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetListResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetListResponseData) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetListResponseData) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *GetListResponseData) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetListResponseData) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Pagination *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	Data       []*GetListResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{5}
}

func (x *GetListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetListResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetListResponse) GetData() []*GetListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetDetailRequest) Reset() {
	*x = GetDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailRequest) ProtoMessage() {}

func (x *GetDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDetailRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDetailResponseDataLecturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                 string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	FrontTitle           string `protobuf:"bytes,3,opt,name=front_title,json=frontTitle,proto3" json:"front_title"`
	BackDegree           string `protobuf:"bytes,4,opt,name=back_degree,json=backDegree,proto3" json:"back_degree"`
	IsGradingResponsible bool   `protobuf:"varint,5,opt,name=is_grading_responsible,json=isGradingResponsible,proto3" json:"is_grading_responsible"`
}

func (x *GetDetailResponseDataLecturer) Reset() {
	*x = GetDetailResponseDataLecturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataLecturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataLecturer) ProtoMessage() {}

func (x *GetDetailResponseDataLecturer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataLecturer.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataLecturer) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{7}
}

func (x *GetDetailResponseDataLecturer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataLecturer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataLecturer) GetFrontTitle() string {
	if x != nil {
		return x.FrontTitle
	}
	return ""
}

func (x *GetDetailResponseDataLecturer) GetBackDegree() string {
	if x != nil {
		return x.BackDegree
	}
	return ""
}

func (x *GetDetailResponseDataLecturer) GetIsGradingResponsible() bool {
	if x != nil {
		return x.IsGradingResponsible
	}
	return false
}

type GetDetailResponseDataGradeComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Percentage float64 `protobuf:"fixed64,3,opt,name=percentage,proto3" json:"percentage"`
}

func (x *GetDetailResponseDataGradeComponent) Reset() {
	*x = GetDetailResponseDataGradeComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataGradeComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataGradeComponent) ProtoMessage() {}

func (x *GetDetailResponseDataGradeComponent) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataGradeComponent.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataGradeComponent) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{8}
}

func (x *GetDetailResponseDataGradeComponent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataGradeComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataGradeComponent) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type GetDetailResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                  string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	StudyProgramId        string                                 `protobuf:"bytes,3,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName      string                                 `protobuf:"bytes,4,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	DiktiStudyProgramType string                                 `protobuf:"bytes,5,opt,name=dikti_study_program_type,json=diktiStudyProgramType,proto3" json:"dikti_study_program_type"`
	StudyLevelShortName   string                                 `protobuf:"bytes,6,opt,name=study_level_short_name,json=studyLevelShortName,proto3" json:"study_level_short_name"`
	SemesterId            string                                 `protobuf:"bytes,7,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
	SemesterStartYear     uint32                                 `protobuf:"varint,8,opt,name=semester_start_year,json=semesterStartYear,proto3" json:"semester_start_year"`
	SchoolYear            string                                 `protobuf:"bytes,9,opt,name=school_year,json=schoolYear,proto3" json:"school_year"`
	SemesterType          string                                 `protobuf:"bytes,10,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	CurriculumId          string                                 `protobuf:"bytes,11,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
	CurriculumName        string                                 `protobuf:"bytes,12,opt,name=curriculum_name,json=curriculumName,proto3" json:"curriculum_name"`
	CurriculumYear        string                                 `protobuf:"bytes,13,opt,name=curriculum_year,json=curriculumYear,proto3" json:"curriculum_year"`
	SubjectId             string                                 `protobuf:"bytes,14,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	SubjectCode           string                                 `protobuf:"bytes,15,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName           string                                 `protobuf:"bytes,16,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	Scope                 string                                 `protobuf:"bytes,17,opt,name=scope,proto3" json:"scope"`
	IsOnline              bool                                   `protobuf:"varint,18,opt,name=is_online,json=isOnline,proto3" json:"is_online"`
	IsOffline             bool                                   `protobuf:"varint,19,opt,name=is_offline,json=isOffline,proto3" json:"is_offline"`
	MinimumParticipant    uint32                                 `protobuf:"varint,20,opt,name=minimum_participant,json=minimumParticipant,proto3" json:"minimum_participant"`
	MaximumParticipant    uint32                                 `protobuf:"varint,21,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	TotalParticipant      uint32                                 `protobuf:"varint,22,opt,name=total_participant,json=totalParticipant,proto3" json:"total_participant"`
	Remarks               string                                 `protobuf:"bytes,23,opt,name=remarks,proto3" json:"remarks"`
	IsActive              bool                                   `protobuf:"varint,24,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	Lecturers             []*GetDetailResponseDataLecturer       `protobuf:"bytes,25,rep,name=lecturers,proto3" json:"lecturers"`
	GradeComponents       []*GetDetailResponseDataGradeComponent `protobuf:"bytes,26,rep,name=grade_components,json=gradeComponents,proto3" json:"grade_components"`
	StudyLevelId          string                                 `protobuf:"bytes,27,opt,name=study_level_id,json=studyLevelId,proto3" json:"study_level_id"`
	ApplicationDeadline   string                                 `protobuf:"bytes,28,opt,name=application_deadline,json=applicationDeadline,proto3" json:"application_deadline"`
}

func (x *GetDetailResponseData) Reset() {
	*x = GetDetailResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseData) ProtoMessage() {}

func (x *GetDetailResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseData.ProtoReflect.Descriptor instead.
func (*GetDetailResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{9}
}

func (x *GetDetailResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetDetailResponseData) GetDiktiStudyProgramType() string {
	if x != nil {
		return x.DiktiStudyProgramType
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyLevelShortName() string {
	if x != nil {
		return x.StudyLevelShortName
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterStartYear() uint32 {
	if x != nil {
		return x.SemesterStartYear
	}
	return 0
}

func (x *GetDetailResponseData) GetSchoolYear() string {
	if x != nil {
		return x.SchoolYear
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *GetDetailResponseData) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

func (x *GetDetailResponseData) GetCurriculumName() string {
	if x != nil {
		return x.CurriculumName
	}
	return ""
}

func (x *GetDetailResponseData) GetCurriculumYear() string {
	if x != nil {
		return x.CurriculumYear
	}
	return ""
}

func (x *GetDetailResponseData) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetDetailResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetDetailResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetDetailResponseData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetDetailResponseData) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *GetDetailResponseData) GetIsOffline() bool {
	if x != nil {
		return x.IsOffline
	}
	return false
}

func (x *GetDetailResponseData) GetMinimumParticipant() uint32 {
	if x != nil {
		return x.MinimumParticipant
	}
	return 0
}

func (x *GetDetailResponseData) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *GetDetailResponseData) GetTotalParticipant() uint32 {
	if x != nil {
		return x.TotalParticipant
	}
	return 0
}

func (x *GetDetailResponseData) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *GetDetailResponseData) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetDetailResponseData) GetLecturers() []*GetDetailResponseDataLecturer {
	if x != nil {
		return x.Lecturers
	}
	return nil
}

func (x *GetDetailResponseData) GetGradeComponents() []*GetDetailResponseDataGradeComponent {
	if x != nil {
		return x.GradeComponents
	}
	return nil
}

func (x *GetDetailResponseData) GetStudyLevelId() string {
	if x != nil {
		return x.StudyLevelId
	}
	return ""
}

func (x *GetDetailResponseData) GetApplicationDeadline() string {
	if x != nil {
		return x.ApplicationDeadline
	}
	return ""
}

type GetDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetDetailResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetDetailResponse) Reset() {
	*x = GetDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponse) ProtoMessage() {}

func (x *GetDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDetailResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{10}
}

func (x *GetDetailResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetDetailResponse) GetData() *GetDetailResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateRequestLecturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	IsGradingResponsible bool   `protobuf:"varint,2,opt,name=is_grading_responsible,json=isGradingResponsible,proto3" json:"is_grading_responsible"`
}

func (x *CreateRequestLecturer) Reset() {
	*x = CreateRequestLecturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestLecturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestLecturer) ProtoMessage() {}

func (x *CreateRequestLecturer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestLecturer.ProtoReflect.Descriptor instead.
func (*CreateRequestLecturer) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRequestLecturer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRequestLecturer) GetIsGradingResponsible() bool {
	if x != nil {
		return x.IsGradingResponsible
	}
	return false
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId           string                   `protobuf:"bytes,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	SemesterId          string                   `protobuf:"bytes,2,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
	Name                string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Scope               string                   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope"`
	IsOnline            bool                     `protobuf:"varint,5,opt,name=is_online,json=isOnline,proto3" json:"is_online"`
	IsOffline           bool                     `protobuf:"varint,6,opt,name=is_offline,json=isOffline,proto3" json:"is_offline"`
	MinimumParticipant  uint32                   `protobuf:"varint,7,opt,name=minimum_participant,json=minimumParticipant,proto3" json:"minimum_participant"`
	MaximumParticipant  uint32                   `protobuf:"varint,8,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	Remarks             string                   `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks"`
	Lecturers           []*CreateRequestLecturer `protobuf:"bytes,10,rep,name=lecturers,proto3" json:"lecturers"`
	ApplicationDeadline string                   `protobuf:"bytes,11,opt,name=application_deadline,json=applicationDeadline,proto3" json:"application_deadline"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{12}
}

func (x *CreateRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CreateRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CreateRequest) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *CreateRequest) GetIsOffline() bool {
	if x != nil {
		return x.IsOffline
	}
	return false
}

func (x *CreateRequest) GetMinimumParticipant() uint32 {
	if x != nil {
		return x.MinimumParticipant
	}
	return 0
}

func (x *CreateRequest) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *CreateRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CreateRequest) GetLecturers() []*CreateRequestLecturer {
	if x != nil {
		return x.Lecturers
	}
	return nil
}

func (x *CreateRequest) GetApplicationDeadline() string {
	if x != nil {
		return x.ApplicationDeadline
	}
	return ""
}

type CreateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateResponseData) Reset() {
	*x = CreateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponseData) ProtoMessage() {}

func (x *CreateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponseData.ProtoReflect.Descriptor instead.
func (*CreateResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{13}
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *CreateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{14}
}

func (x *CreateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CreateResponse) GetData() *CreateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRequestLecturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	IsGradingResponsible bool   `protobuf:"varint,2,opt,name=is_grading_responsible,json=isGradingResponsible,proto3" json:"is_grading_responsible"`
}

func (x *UpdateRequestLecturer) Reset() {
	*x = UpdateRequestLecturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestLecturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestLecturer) ProtoMessage() {}

func (x *UpdateRequestLecturer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestLecturer.ProtoReflect.Descriptor instead.
func (*UpdateRequestLecturer) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRequestLecturer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRequestLecturer) GetIsGradingResponsible() bool {
	if x != nil {
		return x.IsGradingResponsible
	}
	return false
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	SubjectId           string                   `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	Name                string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Scope               string                   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope"`
	IsOnline            bool                     `protobuf:"varint,5,opt,name=is_online,json=isOnline,proto3" json:"is_online"`
	IsOffline           bool                     `protobuf:"varint,6,opt,name=is_offline,json=isOffline,proto3" json:"is_offline"`
	MinimumParticipant  uint32                   `protobuf:"varint,7,opt,name=minimum_participant,json=minimumParticipant,proto3" json:"minimum_participant"`
	MaximumParticipant  uint32                   `protobuf:"varint,8,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	Remarks             string                   `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks"`
	Lecturers           []*UpdateRequestLecturer `protobuf:"bytes,10,rep,name=lecturers,proto3" json:"lecturers"`
	ApplicationDeadline string                   `protobuf:"bytes,11,opt,name=application_deadline,json=applicationDeadline,proto3" json:"application_deadline"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *UpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *UpdateRequest) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *UpdateRequest) GetIsOffline() bool {
	if x != nil {
		return x.IsOffline
	}
	return false
}

func (x *UpdateRequest) GetMinimumParticipant() uint32 {
	if x != nil {
		return x.MinimumParticipant
	}
	return 0
}

func (x *UpdateRequest) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *UpdateRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UpdateRequest) GetLecturers() []*UpdateRequestLecturer {
	if x != nil {
		return x.Lecturers
	}
	return nil
}

func (x *UpdateRequest) GetApplicationDeadline() string {
	if x != nil {
		return x.ApplicationDeadline
	}
	return ""
}

type UpdateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponseData) Reset() {
	*x = UpdateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponseData) ProtoMessage() {}

func (x *UpdateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponseData.ProtoReflect.Descriptor instead.
func (*UpdateResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{17}
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *UpdateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateResponse) GetData() *UpdateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateActivationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	IsActive bool   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active"`
}

func (x *UpdateActivationRequest) Reset() {
	*x = UpdateActivationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivationRequest) ProtoMessage() {}

func (x *UpdateActivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivationRequest.ProtoReflect.Descriptor instead.
func (*UpdateActivationRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateActivationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateActivationRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateActivationResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateActivationResponseData) Reset() {
	*x = UpdateActivationResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivationResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivationResponseData) ProtoMessage() {}

func (x *UpdateActivationResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivationResponseData.ProtoReflect.Descriptor instead.
func (*UpdateActivationResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{20}
}

type UpdateActivationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                         `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *UpdateActivationResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *UpdateActivationResponse) Reset() {
	*x = UpdateActivationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActivationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivationResponse) ProtoMessage() {}

func (x *UpdateActivationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivationResponse.ProtoReflect.Descriptor instead.
func (*UpdateActivationResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateActivationResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateActivationResponse) GetData() *UpdateActivationResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponseData) Reset() {
	*x = DeleteResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponseData) ProtoMessage() {}

func (x *DeleteResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponseData.ProtoReflect.Descriptor instead.
func (*DeleteResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{23}
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *DeleteResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DeleteResponse) GetData() *DeleteResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DuplicateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromSemesterId string `protobuf:"bytes,1,opt,name=from_semester_id,json=fromSemesterId,proto3" json:"from_semester_id"`
	ToSemesterId   string `protobuf:"bytes,2,opt,name=to_semester_id,json=toSemesterId,proto3" json:"to_semester_id"`
}

func (x *DuplicateRequest) Reset() {
	*x = DuplicateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicateRequest) ProtoMessage() {}

func (x *DuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicateRequest.ProtoReflect.Descriptor instead.
func (*DuplicateRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{25}
}

func (x *DuplicateRequest) GetFromSemesterId() string {
	if x != nil {
		return x.FromSemesterId
	}
	return ""
}

func (x *DuplicateRequest) GetToSemesterId() string {
	if x != nil {
		return x.ToSemesterId
	}
	return ""
}

type DuplicateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DuplicateResponseData) Reset() {
	*x = DuplicateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuplicateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicateResponseData) ProtoMessage() {}

func (x *DuplicateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicateResponseData.ProtoReflect.Descriptor instead.
func (*DuplicateResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{26}
}

type DuplicateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *DuplicateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *DuplicateResponse) Reset() {
	*x = DuplicateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuplicateResponse) ProtoMessage() {}

func (x *DuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuplicateResponse.ProtoReflect.Descriptor instead.
func (*DuplicateResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{27}
}

func (x *DuplicateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DuplicateResponse) GetData() *DuplicateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BulkUpdateMaximumParticipantRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId            string `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id"`
	MaximumParticipant uint32 `protobuf:"varint,2,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
}

func (x *BulkUpdateMaximumParticipantRequestData) Reset() {
	*x = BulkUpdateMaximumParticipantRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateMaximumParticipantRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateMaximumParticipantRequestData) ProtoMessage() {}

func (x *BulkUpdateMaximumParticipantRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateMaximumParticipantRequestData.ProtoReflect.Descriptor instead.
func (*BulkUpdateMaximumParticipantRequestData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{28}
}

func (x *BulkUpdateMaximumParticipantRequestData) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *BulkUpdateMaximumParticipantRequestData) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

type BulkUpdateMaximumParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*BulkUpdateMaximumParticipantRequestData `protobuf:"bytes,1,rep,name=data,proto3" json:"data"`
}

func (x *BulkUpdateMaximumParticipantRequest) Reset() {
	*x = BulkUpdateMaximumParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateMaximumParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateMaximumParticipantRequest) ProtoMessage() {}

func (x *BulkUpdateMaximumParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateMaximumParticipantRequest.ProtoReflect.Descriptor instead.
func (*BulkUpdateMaximumParticipantRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{29}
}

func (x *BulkUpdateMaximumParticipantRequest) GetData() []*BulkUpdateMaximumParticipantRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BulkUpdateMaximumParticipantResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BulkUpdateMaximumParticipantResponseData) Reset() {
	*x = BulkUpdateMaximumParticipantResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateMaximumParticipantResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateMaximumParticipantResponseData) ProtoMessage() {}

func (x *BulkUpdateMaximumParticipantResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateMaximumParticipantResponseData.ProtoReflect.Descriptor instead.
func (*BulkUpdateMaximumParticipantResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{30}
}

type BulkUpdateMaximumParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                                     `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *BulkUpdateMaximumParticipantResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *BulkUpdateMaximumParticipantResponse) Reset() {
	*x = BulkUpdateMaximumParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUpdateMaximumParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateMaximumParticipantResponse) ProtoMessage() {}

func (x *BulkUpdateMaximumParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateMaximumParticipantResponse.ProtoReflect.Descriptor instead.
func (*BulkUpdateMaximumParticipantResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{31}
}

func (x *BulkUpdateMaximumParticipantResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BulkUpdateMaximumParticipantResponse) GetData() *BulkUpdateMaximumParticipantResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetClassParticipantListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit     uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Search    string `protobuf:"bytes,3,opt,name=search,proto3" json:"search"`
	ClassId   string `protobuf:"bytes,4,opt,name=class_id,json=classId,proto3" json:"class_id"`
	LectureId string `protobuf:"bytes,5,opt,name=lecture_id,json=lectureId,proto3" json:"lecture_id"`
	IsGraded  string `protobuf:"bytes,6,opt,name=is_graded,json=isGraded,proto3" json:"is_graded"`
	StudentId string `protobuf:"bytes,7,opt,name=student_id,json=studentId,proto3" json:"student_id"`
}

func (x *GetClassParticipantListRequest) Reset() {
	*x = GetClassParticipantListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassParticipantListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassParticipantListRequest) ProtoMessage() {}

func (x *GetClassParticipantListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassParticipantListRequest.ProtoReflect.Descriptor instead.
func (*GetClassParticipantListRequest) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{32}
}

func (x *GetClassParticipantListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetClassParticipantListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetClassParticipantListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetClassParticipantListRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetClassParticipantListRequest) GetLectureId() string {
	if x != nil {
		return x.LectureId
	}
	return ""
}

func (x *GetClassParticipantListRequest) GetIsGraded() string {
	if x != nil {
		return x.IsGraded
	}
	return ""
}

func (x *GetClassParticipantListRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type GetClassParticipantListResponseDataGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassGradeComponentId   string  `protobuf:"bytes,1,opt,name=class_grade_component_id,json=classGradeComponentId,proto3" json:"class_grade_component_id"`
	ClassGradeComponentName string  `protobuf:"bytes,2,opt,name=class_grade_component_name,json=classGradeComponentName,proto3" json:"class_grade_component_name"`
	InitialGrade            float64 `protobuf:"fixed64,3,opt,name=initial_grade,json=initialGrade,proto3" json:"initial_grade"`
	FinalGrade              float64 `protobuf:"fixed64,4,opt,name=final_grade,json=finalGrade,proto3" json:"final_grade"`
}

func (x *GetClassParticipantListResponseDataGrade) Reset() {
	*x = GetClassParticipantListResponseDataGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassParticipantListResponseDataGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassParticipantListResponseDataGrade) ProtoMessage() {}

func (x *GetClassParticipantListResponseDataGrade) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassParticipantListResponseDataGrade.ProtoReflect.Descriptor instead.
func (*GetClassParticipantListResponseDataGrade) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{33}
}

func (x *GetClassParticipantListResponseDataGrade) GetClassGradeComponentId() string {
	if x != nil {
		return x.ClassGradeComponentId
	}
	return ""
}

func (x *GetClassParticipantListResponseDataGrade) GetClassGradeComponentName() string {
	if x != nil {
		return x.ClassGradeComponentName
	}
	return ""
}

func (x *GetClassParticipantListResponseDataGrade) GetInitialGrade() float64 {
	if x != nil {
		return x.InitialGrade
	}
	return 0
}

func (x *GetClassParticipantListResponseDataGrade) GetFinalGrade() float64 {
	if x != nil {
		return x.FinalGrade
	}
	return 0
}

type GetClassParticipantListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId             string                                      `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id"`
	StudentNimNumber      int64                                       `protobuf:"varint,2,opt,name=student_nim_number,json=studentNimNumber,proto3" json:"student_nim_number"`
	StudentName           string                                      `protobuf:"bytes,3,opt,name=student_name,json=studentName,proto3" json:"student_name"`
	StudyProgramId        string                                      `protobuf:"bytes,4,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName      string                                      `protobuf:"bytes,5,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	DiktiStudyProgramCode string                                      `protobuf:"bytes,6,opt,name=dikti_study_program_code,json=diktiStudyProgramCode,proto3" json:"dikti_study_program_code"`
	DiktiStudyProgramType string                                      `protobuf:"bytes,7,opt,name=dikti_study_program_type,json=diktiStudyProgramType,proto3" json:"dikti_study_program_type"`
	StudyLevelShortName   string                                      `protobuf:"bytes,8,opt,name=study_level_short_name,json=studyLevelShortName,proto3" json:"study_level_short_name"`
	TotalAttendance       uint32                                      `protobuf:"varint,9,opt,name=total_attendance,json=totalAttendance,proto3" json:"total_attendance"`
	AttendancePercentage  float64                                     `protobuf:"fixed64,10,opt,name=attendance_percentage,json=attendancePercentage,proto3" json:"attendance_percentage"`
	TotalSick             uint32                                      `protobuf:"varint,11,opt,name=total_sick,json=totalSick,proto3" json:"total_sick"`
	TotalLeave            uint32                                      `protobuf:"varint,12,opt,name=total_leave,json=totalLeave,proto3" json:"total_leave"`
	TotalAwol             uint32                                      `protobuf:"varint,13,opt,name=total_awol,json=totalAwol,proto3" json:"total_awol"`
	IsAttend              bool                                        `protobuf:"varint,14,opt,name=is_attend,json=isAttend,proto3" json:"is_attend"`
	IsSick                bool                                        `protobuf:"varint,15,opt,name=is_sick,json=isSick,proto3" json:"is_sick"`
	IsLeave               bool                                        `protobuf:"varint,16,opt,name=is_leave,json=isLeave,proto3" json:"is_leave"`
	IsAwol                bool                                        `protobuf:"varint,17,opt,name=is_awol,json=isAwol,proto3" json:"is_awol"`
	GradePoint            float64                                     `protobuf:"fixed64,18,opt,name=grade_point,json=gradePoint,proto3" json:"grade_point"`
	GradeCode             string                                      `protobuf:"bytes,19,opt,name=grade_code,json=gradeCode,proto3" json:"grade_code"`
	GradedByAdminId       string                                      `protobuf:"bytes,20,opt,name=graded_by_admin_id,json=gradedByAdminId,proto3" json:"graded_by_admin_id"`
	GradedByAdminName     string                                      `protobuf:"bytes,21,opt,name=graded_by_admin_name,json=gradedByAdminName,proto3" json:"graded_by_admin_name"`
	GradedByLecturerId    string                                      `protobuf:"bytes,22,opt,name=graded_by_lecturer_id,json=gradedByLecturerId,proto3" json:"graded_by_lecturer_id"`
	GradedByLecturerName  string                                      `protobuf:"bytes,23,opt,name=graded_by_lecturer_name,json=gradedByLecturerName,proto3" json:"graded_by_lecturer_name"`
	GradedAt              string                                      `protobuf:"bytes,24,opt,name=graded_at,json=gradedAt,proto3" json:"graded_at"`
	SubjectRepetition     uint32                                      `protobuf:"varint,25,opt,name=subject_repetition,json=subjectRepetition,proto3" json:"subject_repetition"`
	Grades                []*GetClassParticipantListResponseDataGrade `protobuf:"bytes,26,rep,name=grades,proto3" json:"grades"`
}

func (x *GetClassParticipantListResponseData) Reset() {
	*x = GetClassParticipantListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassParticipantListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassParticipantListResponseData) ProtoMessage() {}

func (x *GetClassParticipantListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassParticipantListResponseData.ProtoReflect.Descriptor instead.
func (*GetClassParticipantListResponseData) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{34}
}

func (x *GetClassParticipantListResponseData) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetStudentNimNumber() int64 {
	if x != nil {
		return x.StudentNimNumber
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetDiktiStudyProgramCode() string {
	if x != nil {
		return x.DiktiStudyProgramCode
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetDiktiStudyProgramType() string {
	if x != nil {
		return x.DiktiStudyProgramType
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetStudyLevelShortName() string {
	if x != nil {
		return x.StudyLevelShortName
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetTotalAttendance() uint32 {
	if x != nil {
		return x.TotalAttendance
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetAttendancePercentage() float64 {
	if x != nil {
		return x.AttendancePercentage
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetTotalSick() uint32 {
	if x != nil {
		return x.TotalSick
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetTotalLeave() uint32 {
	if x != nil {
		return x.TotalLeave
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetTotalAwol() uint32 {
	if x != nil {
		return x.TotalAwol
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetIsAttend() bool {
	if x != nil {
		return x.IsAttend
	}
	return false
}

func (x *GetClassParticipantListResponseData) GetIsSick() bool {
	if x != nil {
		return x.IsSick
	}
	return false
}

func (x *GetClassParticipantListResponseData) GetIsLeave() bool {
	if x != nil {
		return x.IsLeave
	}
	return false
}

func (x *GetClassParticipantListResponseData) GetIsAwol() bool {
	if x != nil {
		return x.IsAwol
	}
	return false
}

func (x *GetClassParticipantListResponseData) GetGradePoint() float64 {
	if x != nil {
		return x.GradePoint
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetGradeCode() string {
	if x != nil {
		return x.GradeCode
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetGradedByAdminId() string {
	if x != nil {
		return x.GradedByAdminId
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetGradedByAdminName() string {
	if x != nil {
		return x.GradedByAdminName
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetGradedByLecturerId() string {
	if x != nil {
		return x.GradedByLecturerId
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetGradedByLecturerName() string {
	if x != nil {
		return x.GradedByLecturerName
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetGradedAt() string {
	if x != nil {
		return x.GradedAt
	}
	return ""
}

func (x *GetClassParticipantListResponseData) GetSubjectRepetition() uint32 {
	if x != nil {
		return x.SubjectRepetition
	}
	return 0
}

func (x *GetClassParticipantListResponseData) GetGrades() []*GetClassParticipantListResponseDataGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

type GetClassParticipantListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Meta                                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Pagination *Pagination                            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	Data       []*GetClassParticipantListResponseData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetClassParticipantListResponse) Reset() {
	*x = GetClassParticipantListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_class_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClassParticipantListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassParticipantListResponse) ProtoMessage() {}

func (x *GetClassParticipantListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_class_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassParticipantListResponse.ProtoReflect.Descriptor instead.
func (*GetClassParticipantListResponse) Descriptor() ([]byte, []int) {
	return file_admin_class_proto_rawDescGZIP(), []int{35}
}

func (x *GetClassParticipantListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetClassParticipantListResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetClassParticipantListResponse) GetData() []*GetClassParticipantListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_admin_class_proto protoreflect.FileDescriptor

var file_admin_class_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa4,
	0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x8b, 0x03, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x62, 0x6b, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x62, 0x6b, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6f, 0x72,
	0x5f, 0x6f, 0x64, 0x64, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x4f, 0x64, 0x64, 0x53, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0x91, 0x0b, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x18,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x52, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x38, 0x0a, 0x18, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x16, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x1b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x75, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x75, 0x6e, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x61, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2c,
	0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x64, 0x6f, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75,
	0x6c, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa7, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x69, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x09, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69,
	0x6b, 0x74, 0x69, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x69,
	0x6b, 0x74, 0x69, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c,
	0x75, 0x6d, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2f, 0x0a,
	0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73,
	0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x52, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x5b, 0x0a,
	0x10, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0x72, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0xa6, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12,
	0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x52, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x14,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x33,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x16,
	0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73,
	0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x22, 0x95, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x6c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x6c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62,
	0x0a, 0x10, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x11, 0x44,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x75, 0x0a, 0x27, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x23, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x28, 0x42, 0x75, 0x6c, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x98, 0x01, 0x0a, 0x24, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd8,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x28, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x1a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x22, 0xe0, 0x08, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x69, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x69,
	0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x6b, 0x74, 0x69, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x69, 0x6b, 0x74, 0x69, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x64,
	0x69, 0x6b, 0x74, 0x69, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64,
	0x69, 0x6b, 0x74, 0x69, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x14, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x69, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x77, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x77, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x63, 0x6b,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x69, 0x63, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x61, 0x77, 0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x77,
	0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x14, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x4c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0xa9, 0x06, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x09, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1c,
	0x42, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_class_proto_rawDescOnce sync.Once
	file_admin_class_proto_rawDescData = file_admin_class_proto_rawDesc
)

func file_admin_class_proto_rawDescGZIP() []byte {
	file_admin_class_proto_rawDescOnce.Do(func() {
		file_admin_class_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_class_proto_rawDescData)
	})
	return file_admin_class_proto_rawDescData
}

var file_admin_class_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_admin_class_proto_goTypes = []interface{}{
	(*Meta)(nil),                                     // 0: admin_class.Meta
	(*Pagination)(nil),                               // 1: admin_class.Pagination
	(*GetListRequest)(nil),                           // 2: admin_class.GetListRequest
	(*GetListResponseDataLecturer)(nil),              // 3: admin_class.GetListResponseDataLecturer
	(*GetListResponseData)(nil),                      // 4: admin_class.GetListResponseData
	(*GetListResponse)(nil),                          // 5: admin_class.GetListResponse
	(*GetDetailRequest)(nil),                         // 6: admin_class.GetDetailRequest
	(*GetDetailResponseDataLecturer)(nil),            // 7: admin_class.GetDetailResponseDataLecturer
	(*GetDetailResponseDataGradeComponent)(nil),      // 8: admin_class.GetDetailResponseDataGradeComponent
	(*GetDetailResponseData)(nil),                    // 9: admin_class.GetDetailResponseData
	(*GetDetailResponse)(nil),                        // 10: admin_class.GetDetailResponse
	(*CreateRequestLecturer)(nil),                    // 11: admin_class.CreateRequestLecturer
	(*CreateRequest)(nil),                            // 12: admin_class.CreateRequest
	(*CreateResponseData)(nil),                       // 13: admin_class.CreateResponseData
	(*CreateResponse)(nil),                           // 14: admin_class.CreateResponse
	(*UpdateRequestLecturer)(nil),                    // 15: admin_class.UpdateRequestLecturer
	(*UpdateRequest)(nil),                            // 16: admin_class.UpdateRequest
	(*UpdateResponseData)(nil),                       // 17: admin_class.UpdateResponseData
	(*UpdateResponse)(nil),                           // 18: admin_class.UpdateResponse
	(*UpdateActivationRequest)(nil),                  // 19: admin_class.UpdateActivationRequest
	(*UpdateActivationResponseData)(nil),             // 20: admin_class.UpdateActivationResponseData
	(*UpdateActivationResponse)(nil),                 // 21: admin_class.UpdateActivationResponse
	(*DeleteRequest)(nil),                            // 22: admin_class.DeleteRequest
	(*DeleteResponseData)(nil),                       // 23: admin_class.DeleteResponseData
	(*DeleteResponse)(nil),                           // 24: admin_class.DeleteResponse
	(*DuplicateRequest)(nil),                         // 25: admin_class.DuplicateRequest
	(*DuplicateResponseData)(nil),                    // 26: admin_class.DuplicateResponseData
	(*DuplicateResponse)(nil),                        // 27: admin_class.DuplicateResponse
	(*BulkUpdateMaximumParticipantRequestData)(nil),  // 28: admin_class.BulkUpdateMaximumParticipantRequestData
	(*BulkUpdateMaximumParticipantRequest)(nil),      // 29: admin_class.BulkUpdateMaximumParticipantRequest
	(*BulkUpdateMaximumParticipantResponseData)(nil), // 30: admin_class.BulkUpdateMaximumParticipantResponseData
	(*BulkUpdateMaximumParticipantResponse)(nil),     // 31: admin_class.BulkUpdateMaximumParticipantResponse
	(*GetClassParticipantListRequest)(nil),           // 32: admin_class.GetClassParticipantListRequest
	(*GetClassParticipantListResponseDataGrade)(nil), // 33: admin_class.GetClassParticipantListResponseDataGrade
	(*GetClassParticipantListResponseData)(nil),      // 34: admin_class.GetClassParticipantListResponseData
	(*GetClassParticipantListResponse)(nil),          // 35: admin_class.GetClassParticipantListResponse
}
var file_admin_class_proto_depIdxs = []int32{
	3,  // 0: admin_class.GetListResponseData.lecturers:type_name -> admin_class.GetListResponseDataLecturer
	0,  // 1: admin_class.GetListResponse.meta:type_name -> admin_class.Meta
	1,  // 2: admin_class.GetListResponse.pagination:type_name -> admin_class.Pagination
	4,  // 3: admin_class.GetListResponse.data:type_name -> admin_class.GetListResponseData
	7,  // 4: admin_class.GetDetailResponseData.lecturers:type_name -> admin_class.GetDetailResponseDataLecturer
	8,  // 5: admin_class.GetDetailResponseData.grade_components:type_name -> admin_class.GetDetailResponseDataGradeComponent
	0,  // 6: admin_class.GetDetailResponse.meta:type_name -> admin_class.Meta
	9,  // 7: admin_class.GetDetailResponse.data:type_name -> admin_class.GetDetailResponseData
	11, // 8: admin_class.CreateRequest.lecturers:type_name -> admin_class.CreateRequestLecturer
	0,  // 9: admin_class.CreateResponse.meta:type_name -> admin_class.Meta
	13, // 10: admin_class.CreateResponse.data:type_name -> admin_class.CreateResponseData
	15, // 11: admin_class.UpdateRequest.lecturers:type_name -> admin_class.UpdateRequestLecturer
	0,  // 12: admin_class.UpdateResponse.meta:type_name -> admin_class.Meta
	17, // 13: admin_class.UpdateResponse.data:type_name -> admin_class.UpdateResponseData
	0,  // 14: admin_class.UpdateActivationResponse.meta:type_name -> admin_class.Meta
	20, // 15: admin_class.UpdateActivationResponse.data:type_name -> admin_class.UpdateActivationResponseData
	0,  // 16: admin_class.DeleteResponse.meta:type_name -> admin_class.Meta
	23, // 17: admin_class.DeleteResponse.data:type_name -> admin_class.DeleteResponseData
	0,  // 18: admin_class.DuplicateResponse.meta:type_name -> admin_class.Meta
	26, // 19: admin_class.DuplicateResponse.data:type_name -> admin_class.DuplicateResponseData
	28, // 20: admin_class.BulkUpdateMaximumParticipantRequest.data:type_name -> admin_class.BulkUpdateMaximumParticipantRequestData
	0,  // 21: admin_class.BulkUpdateMaximumParticipantResponse.meta:type_name -> admin_class.Meta
	30, // 22: admin_class.BulkUpdateMaximumParticipantResponse.data:type_name -> admin_class.BulkUpdateMaximumParticipantResponseData
	33, // 23: admin_class.GetClassParticipantListResponseData.grades:type_name -> admin_class.GetClassParticipantListResponseDataGrade
	0,  // 24: admin_class.GetClassParticipantListResponse.meta:type_name -> admin_class.Meta
	1,  // 25: admin_class.GetClassParticipantListResponse.pagination:type_name -> admin_class.Pagination
	34, // 26: admin_class.GetClassParticipantListResponse.data:type_name -> admin_class.GetClassParticipantListResponseData
	2,  // 27: admin_class.AdminClassHandler.GetList:input_type -> admin_class.GetListRequest
	6,  // 28: admin_class.AdminClassHandler.GetDetail:input_type -> admin_class.GetDetailRequest
	12, // 29: admin_class.AdminClassHandler.Create:input_type -> admin_class.CreateRequest
	16, // 30: admin_class.AdminClassHandler.Update:input_type -> admin_class.UpdateRequest
	19, // 31: admin_class.AdminClassHandler.UpdateActivation:input_type -> admin_class.UpdateActivationRequest
	22, // 32: admin_class.AdminClassHandler.Delete:input_type -> admin_class.DeleteRequest
	25, // 33: admin_class.AdminClassHandler.Duplicate:input_type -> admin_class.DuplicateRequest
	29, // 34: admin_class.AdminClassHandler.BulkUpdateMaximumParticipant:input_type -> admin_class.BulkUpdateMaximumParticipantRequest
	32, // 35: admin_class.AdminClassHandler.GetClassParticipantList:input_type -> admin_class.GetClassParticipantListRequest
	5,  // 36: admin_class.AdminClassHandler.GetList:output_type -> admin_class.GetListResponse
	10, // 37: admin_class.AdminClassHandler.GetDetail:output_type -> admin_class.GetDetailResponse
	14, // 38: admin_class.AdminClassHandler.Create:output_type -> admin_class.CreateResponse
	18, // 39: admin_class.AdminClassHandler.Update:output_type -> admin_class.UpdateResponse
	21, // 40: admin_class.AdminClassHandler.UpdateActivation:output_type -> admin_class.UpdateActivationResponse
	24, // 41: admin_class.AdminClassHandler.Delete:output_type -> admin_class.DeleteResponse
	27, // 42: admin_class.AdminClassHandler.Duplicate:output_type -> admin_class.DuplicateResponse
	31, // 43: admin_class.AdminClassHandler.BulkUpdateMaximumParticipant:output_type -> admin_class.BulkUpdateMaximumParticipantResponse
	35, // 44: admin_class.AdminClassHandler.GetClassParticipantList:output_type -> admin_class.GetClassParticipantListResponse
	36, // [36:45] is the sub-list for method output_type
	27, // [27:36] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_admin_class_proto_init() }
func file_admin_class_proto_init() {
	if File_admin_class_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_class_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponseDataLecturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataLecturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataGradeComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestLecturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestLecturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivationResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActivationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuplicateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuplicateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DuplicateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateMaximumParticipantRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateMaximumParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateMaximumParticipantResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUpdateMaximumParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassParticipantListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassParticipantListResponseDataGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassParticipantListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_class_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClassParticipantListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_class_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_class_proto_goTypes,
		DependencyIndexes: file_admin_class_proto_depIdxs,
		MessageInfos:      file_admin_class_proto_msgTypes,
	}.Build()
	File_admin_class_proto = out.File
	file_admin_class_proto_rawDesc = nil
	file_admin_class_proto_goTypes = nil
	file_admin_class_proto_depIdxs = nil
}
