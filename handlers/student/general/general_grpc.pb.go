// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: student/general.proto

package general

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StudentGeneralHandlerClient is the client API for StudentGeneralHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StudentGeneralHandlerClient interface {
	GetSemesterSummary(ctx context.Context, in *GetSemesterSummaryRequest, opts ...grpc.CallOption) (*GetSemesterSummaryResponse, error)
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*GetProfileResponse, error)
	UpdateProfile(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*UpdateProfileResponse, error)
	GetParentProfile(ctx context.Context, in *GetParentProfileRequest, opts ...grpc.CallOption) (*GetParentProfileResponse, error)
	UpdateParentProfile(ctx context.Context, in *UpdateParentProfileRequest, opts ...grpc.CallOption) (*UpdateParentProfileResponse, error)
	GetSchoolProfile(ctx context.Context, in *GetSchoolProfileRequest, opts ...grpc.CallOption) (*GetSchoolProfileResponse, error)
	UpdateSchoolProfile(ctx context.Context, in *UpdateSchoolProfileRequest, opts ...grpc.CallOption) (*UpdateSchoolProfileResponse, error)
}

type studentGeneralHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentGeneralHandlerClient(cc grpc.ClientConnInterface) StudentGeneralHandlerClient {
	return &studentGeneralHandlerClient{cc}
}

func (c *studentGeneralHandlerClient) GetSemesterSummary(ctx context.Context, in *GetSemesterSummaryRequest, opts ...grpc.CallOption) (*GetSemesterSummaryResponse, error) {
	out := new(GetSemesterSummaryResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/GetSemesterSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentGeneralHandlerClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*GetProfileResponse, error) {
	out := new(GetProfileResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentGeneralHandlerClient) UpdateProfile(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*UpdateProfileResponse, error) {
	out := new(UpdateProfileResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/UpdateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentGeneralHandlerClient) GetParentProfile(ctx context.Context, in *GetParentProfileRequest, opts ...grpc.CallOption) (*GetParentProfileResponse, error) {
	out := new(GetParentProfileResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/GetParentProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentGeneralHandlerClient) UpdateParentProfile(ctx context.Context, in *UpdateParentProfileRequest, opts ...grpc.CallOption) (*UpdateParentProfileResponse, error) {
	out := new(UpdateParentProfileResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/UpdateParentProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentGeneralHandlerClient) GetSchoolProfile(ctx context.Context, in *GetSchoolProfileRequest, opts ...grpc.CallOption) (*GetSchoolProfileResponse, error) {
	out := new(GetSchoolProfileResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/GetSchoolProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentGeneralHandlerClient) UpdateSchoolProfile(ctx context.Context, in *UpdateSchoolProfileRequest, opts ...grpc.CallOption) (*UpdateSchoolProfileResponse, error) {
	out := new(UpdateSchoolProfileResponse)
	err := c.cc.Invoke(ctx, "/student_general.StudentGeneralHandler/UpdateSchoolProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudentGeneralHandlerServer is the server API for StudentGeneralHandler service.
// All implementations must embed UnimplementedStudentGeneralHandlerServer
// for forward compatibility
type StudentGeneralHandlerServer interface {
	GetSemesterSummary(context.Context, *GetSemesterSummaryRequest) (*GetSemesterSummaryResponse, error)
	GetProfile(context.Context, *GetProfileRequest) (*GetProfileResponse, error)
	UpdateProfile(context.Context, *UpdateProfileRequest) (*UpdateProfileResponse, error)
	GetParentProfile(context.Context, *GetParentProfileRequest) (*GetParentProfileResponse, error)
	UpdateParentProfile(context.Context, *UpdateParentProfileRequest) (*UpdateParentProfileResponse, error)
	GetSchoolProfile(context.Context, *GetSchoolProfileRequest) (*GetSchoolProfileResponse, error)
	UpdateSchoolProfile(context.Context, *UpdateSchoolProfileRequest) (*UpdateSchoolProfileResponse, error)
	mustEmbedUnimplementedStudentGeneralHandlerServer()
}

// UnimplementedStudentGeneralHandlerServer must be embedded to have forward compatible implementations.
type UnimplementedStudentGeneralHandlerServer struct {
}

func (UnimplementedStudentGeneralHandlerServer) GetSemesterSummary(context.Context, *GetSemesterSummaryRequest) (*GetSemesterSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSemesterSummary not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) GetProfile(context.Context, *GetProfileRequest) (*GetProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) UpdateProfile(context.Context, *UpdateProfileRequest) (*UpdateProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfile not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) GetParentProfile(context.Context, *GetParentProfileRequest) (*GetParentProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParentProfile not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) UpdateParentProfile(context.Context, *UpdateParentProfileRequest) (*UpdateParentProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParentProfile not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) GetSchoolProfile(context.Context, *GetSchoolProfileRequest) (*GetSchoolProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSchoolProfile not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) UpdateSchoolProfile(context.Context, *UpdateSchoolProfileRequest) (*UpdateSchoolProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSchoolProfile not implemented")
}
func (UnimplementedStudentGeneralHandlerServer) mustEmbedUnimplementedStudentGeneralHandlerServer() {}

// UnsafeStudentGeneralHandlerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StudentGeneralHandlerServer will
// result in compilation errors.
type UnsafeStudentGeneralHandlerServer interface {
	mustEmbedUnimplementedStudentGeneralHandlerServer()
}

func RegisterStudentGeneralHandlerServer(s grpc.ServiceRegistrar, srv StudentGeneralHandlerServer) {
	s.RegisterService(&StudentGeneralHandler_ServiceDesc, srv)
}

func _StudentGeneralHandler_GetSemesterSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSemesterSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).GetSemesterSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/GetSemesterSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).GetSemesterSummary(ctx, req.(*GetSemesterSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentGeneralHandler_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).GetProfile(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentGeneralHandler_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).UpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/UpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).UpdateProfile(ctx, req.(*UpdateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentGeneralHandler_GetParentProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParentProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).GetParentProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/GetParentProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).GetParentProfile(ctx, req.(*GetParentProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentGeneralHandler_UpdateParentProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateParentProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).UpdateParentProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/UpdateParentProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).UpdateParentProfile(ctx, req.(*UpdateParentProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentGeneralHandler_GetSchoolProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSchoolProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).GetSchoolProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/GetSchoolProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).GetSchoolProfile(ctx, req.(*GetSchoolProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentGeneralHandler_UpdateSchoolProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSchoolProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentGeneralHandlerServer).UpdateSchoolProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_general.StudentGeneralHandler/UpdateSchoolProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentGeneralHandlerServer).UpdateSchoolProfile(ctx, req.(*UpdateSchoolProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StudentGeneralHandler_ServiceDesc is the grpc.ServiceDesc for StudentGeneralHandler service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StudentGeneralHandler_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "student_general.StudentGeneralHandler",
	HandlerType: (*StudentGeneralHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSemesterSummary",
			Handler:    _StudentGeneralHandler_GetSemesterSummary_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _StudentGeneralHandler_GetProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _StudentGeneralHandler_UpdateProfile_Handler,
		},
		{
			MethodName: "GetParentProfile",
			Handler:    _StudentGeneralHandler_GetParentProfile_Handler,
		},
		{
			MethodName: "UpdateParentProfile",
			Handler:    _StudentGeneralHandler_UpdateParentProfile_Handler,
		},
		{
			MethodName: "GetSchoolProfile",
			Handler:    _StudentGeneralHandler_GetSchoolProfile_Handler,
		},
		{
			MethodName: "UpdateSchoolProfile",
			Handler:    _StudentGeneralHandler_UpdateSchoolProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "student/general.proto",
}
