// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: student/class.proto

package class

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetOfferedClassListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
}

func (x *GetOfferedClassListRequest) Reset() {
	*x = GetOfferedClassListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedClassListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedClassListRequest) ProtoMessage() {}

func (x *GetOfferedClassListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedClassListRequest.ProtoReflect.Descriptor instead.
func (*GetOfferedClassListRequest) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{2}
}

func (x *GetOfferedClassListRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

type GetOfferedClassListResponseDataClassLecturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	FrontTitle string `protobuf:"bytes,2,opt,name=front_title,json=frontTitle,proto3" json:"front_title"`
	BackDegree string `protobuf:"bytes,3,opt,name=back_degree,json=backDegree,proto3" json:"back_degree"`
}

func (x *GetOfferedClassListResponseDataClassLecturer) Reset() {
	*x = GetOfferedClassListResponseDataClassLecturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedClassListResponseDataClassLecturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedClassListResponseDataClassLecturer) ProtoMessage() {}

func (x *GetOfferedClassListResponseDataClassLecturer) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedClassListResponseDataClassLecturer.ProtoReflect.Descriptor instead.
func (*GetOfferedClassListResponseDataClassLecturer) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{3}
}

func (x *GetOfferedClassListResponseDataClassLecturer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOfferedClassListResponseDataClassLecturer) GetFrontTitle() string {
	if x != nil {
		return x.FrontTitle
	}
	return ""
}

func (x *GetOfferedClassListResponseDataClassLecturer) GetBackDegree() string {
	if x != nil {
		return x.BackDegree
	}
	return ""
}

type GetOfferedClassListResponseDataClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          string                                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                        string                                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	SubjectCode                 string                                          `protobuf:"bytes,3,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName                 string                                          `protobuf:"bytes,4,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	SubjectIsMandatory          bool                                            `protobuf:"varint,5,opt,name=subject_is_mandatory,json=subjectIsMandatory,proto3" json:"subject_is_mandatory"`
	SubjectTheoryCredit         uint32                                          `protobuf:"varint,6,opt,name=subject_theory_credit,json=subjectTheoryCredit,proto3" json:"subject_theory_credit"`
	SubjectPracticumCredit      uint32                                          `protobuf:"varint,7,opt,name=subject_practicum_credit,json=subjectPracticumCredit,proto3" json:"subject_practicum_credit"`
	SubjectFieldPracticumCredit uint32                                          `protobuf:"varint,8,opt,name=subject_field_practicum_credit,json=subjectFieldPracticumCredit,proto3" json:"subject_field_practicum_credit"`
	MaximumParticipant          uint32                                          `protobuf:"varint,9,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	Lecturers                   []*GetOfferedClassListResponseDataClassLecturer `protobuf:"bytes,10,rep,name=lecturers,proto3" json:"lecturers"`
	SubjectTotalLessonPlan      uint32                                          `protobuf:"varint,11,opt,name=subject_total_lesson_plan,json=subjectTotalLessonPlan,proto3" json:"subject_total_lesson_plan"`
}

func (x *GetOfferedClassListResponseDataClass) Reset() {
	*x = GetOfferedClassListResponseDataClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedClassListResponseDataClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedClassListResponseDataClass) ProtoMessage() {}

func (x *GetOfferedClassListResponseDataClass) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedClassListResponseDataClass.ProtoReflect.Descriptor instead.
func (*GetOfferedClassListResponseDataClass) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{4}
}

func (x *GetOfferedClassListResponseDataClass) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOfferedClassListResponseDataClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectIsMandatory() bool {
	if x != nil {
		return x.SubjectIsMandatory
	}
	return false
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectTheoryCredit() uint32 {
	if x != nil {
		return x.SubjectTheoryCredit
	}
	return 0
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectPracticumCredit() uint32 {
	if x != nil {
		return x.SubjectPracticumCredit
	}
	return 0
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectFieldPracticumCredit() uint32 {
	if x != nil {
		return x.SubjectFieldPracticumCredit
	}
	return 0
}

func (x *GetOfferedClassListResponseDataClass) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *GetOfferedClassListResponseDataClass) GetLecturers() []*GetOfferedClassListResponseDataClassLecturer {
	if x != nil {
		return x.Lecturers
	}
	return nil
}

func (x *GetOfferedClassListResponseDataClass) GetSubjectTotalLessonPlan() uint32 {
	if x != nil {
		return x.SubjectTotalLessonPlan
	}
	return 0
}

type GetOfferedClassListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemesterPackage uint32                                  `protobuf:"varint,1,opt,name=semester_package,json=semesterPackage,proto3" json:"semester_package"`
	Classes         []*GetOfferedClassListResponseDataClass `protobuf:"bytes,2,rep,name=classes,proto3" json:"classes"`
}

func (x *GetOfferedClassListResponseData) Reset() {
	*x = GetOfferedClassListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedClassListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedClassListResponseData) ProtoMessage() {}

func (x *GetOfferedClassListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedClassListResponseData.ProtoReflect.Descriptor instead.
func (*GetOfferedClassListResponseData) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{5}
}

func (x *GetOfferedClassListResponseData) GetSemesterPackage() uint32 {
	if x != nil {
		return x.SemesterPackage
	}
	return 0
}

func (x *GetOfferedClassListResponseData) GetClasses() []*GetOfferedClassListResponseDataClass {
	if x != nil {
		return x.Classes
	}
	return nil
}

type GetOfferedClassListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*GetOfferedClassListResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *GetOfferedClassListResponse) Reset() {
	*x = GetOfferedClassListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedClassListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedClassListResponse) ProtoMessage() {}

func (x *GetOfferedClassListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedClassListResponse.ProtoReflect.Descriptor instead.
func (*GetOfferedClassListResponse) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{6}
}

func (x *GetOfferedClassListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetOfferedClassListResponse) GetData() []*GetOfferedClassListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetOfferedScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId string `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id"`
}

func (x *GetOfferedScheduleRequest) Reset() {
	*x = GetOfferedScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedScheduleRequest) ProtoMessage() {}

func (x *GetOfferedScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetOfferedScheduleRequest) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{7}
}

func (x *GetOfferedScheduleRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type GetOfferedScheduleResponseDataSingleDaySchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      string `protobuf:"bytes,1,opt,name=date,proto3" json:"date"`
	StartTime uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	RoomName  string `protobuf:"bytes,4,opt,name=room_name,json=roomName,proto3" json:"room_name"`
}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) Reset() {
	*x = GetOfferedScheduleResponseDataSingleDaySchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedScheduleResponseDataSingleDaySchedule) ProtoMessage() {}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedScheduleResponseDataSingleDaySchedule.ProtoReflect.Descriptor instead.
func (*GetOfferedScheduleResponseDataSingleDaySchedule) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{8}
}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetOfferedScheduleResponseDataSingleDaySchedule) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

type GetOfferedScheduleResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramName                string                                             `protobuf:"bytes,1,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	SubjectCode                     string                                             `protobuf:"bytes,2,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName                     string                                             `protobuf:"bytes,3,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	SemesterPackage                 uint32                                             `protobuf:"varint,4,opt,name=semester_package,json=semesterPackage,proto3" json:"semester_package"`
	TheoryCredit                    uint32                                             `protobuf:"varint,5,opt,name=theory_credit,json=theoryCredit,proto3" json:"theory_credit"`
	PracticumCredit                 uint32                                             `protobuf:"varint,6,opt,name=practicum_credit,json=practicumCredit,proto3" json:"practicum_credit"`
	FieldPracticumCredit            uint32                                             `protobuf:"varint,7,opt,name=field_practicum_credit,json=fieldPracticumCredit,proto3" json:"field_practicum_credit"`
	SubjectMinimumPassingGradePoint float64                                            `protobuf:"fixed64,8,opt,name=subject_minimum_passing_grade_point,json=subjectMinimumPassingGradePoint,proto3" json:"subject_minimum_passing_grade_point"`
	SubjectIsMandatory              bool                                               `protobuf:"varint,9,opt,name=subject_is_mandatory,json=subjectIsMandatory,proto3" json:"subject_is_mandatory"`
	MaximumParticipant              uint32                                             `protobuf:"varint,10,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	PrerequisiteSubjects            []string                                           `protobuf:"bytes,11,rep,name=prerequisite_subjects,json=prerequisiteSubjects,proto3" json:"prerequisite_subjects"`
	SingleDaySchedules              []*GetOfferedScheduleResponseDataSingleDaySchedule `protobuf:"bytes,13,rep,name=single_day_schedules,json=singleDaySchedules,proto3" json:"single_day_schedules"`
	MidtermExamDate                 string                                             `protobuf:"bytes,14,opt,name=midterm_exam_date,json=midtermExamDate,proto3" json:"midterm_exam_date"`
	MidtermStartTime                uint32                                             `protobuf:"varint,15,opt,name=midterm_start_time,json=midtermStartTime,proto3" json:"midterm_start_time"`
	MidtermEndTime                  uint32                                             `protobuf:"varint,16,opt,name=midterm_end_time,json=midtermEndTime,proto3" json:"midterm_end_time"`
	MidtermRoomName                 string                                             `protobuf:"bytes,17,opt,name=midterm_room_name,json=midtermRoomName,proto3" json:"midterm_room_name"`
	EndtermExamDate                 string                                             `protobuf:"bytes,18,opt,name=endterm_exam_date,json=endtermExamDate,proto3" json:"endterm_exam_date"`
	EndtermStartTime                uint32                                             `protobuf:"varint,19,opt,name=endterm_start_time,json=endtermStartTime,proto3" json:"endterm_start_time"`
	EndtermEndTime                  uint32                                             `protobuf:"varint,20,opt,name=endterm_end_time,json=endtermEndTime,proto3" json:"endterm_end_time"`
	EndtermRoomName                 string                                             `protobuf:"bytes,21,opt,name=endterm_room_name,json=endtermRoomName,proto3" json:"endterm_room_name"`
}

func (x *GetOfferedScheduleResponseData) Reset() {
	*x = GetOfferedScheduleResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedScheduleResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedScheduleResponseData) ProtoMessage() {}

func (x *GetOfferedScheduleResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedScheduleResponseData.ProtoReflect.Descriptor instead.
func (*GetOfferedScheduleResponseData) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{9}
}

func (x *GetOfferedScheduleResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetOfferedScheduleResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetOfferedScheduleResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetOfferedScheduleResponseData) GetSemesterPackage() uint32 {
	if x != nil {
		return x.SemesterPackage
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetTheoryCredit() uint32 {
	if x != nil {
		return x.TheoryCredit
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetPracticumCredit() uint32 {
	if x != nil {
		return x.PracticumCredit
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetFieldPracticumCredit() uint32 {
	if x != nil {
		return x.FieldPracticumCredit
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetSubjectMinimumPassingGradePoint() float64 {
	if x != nil {
		return x.SubjectMinimumPassingGradePoint
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetSubjectIsMandatory() bool {
	if x != nil {
		return x.SubjectIsMandatory
	}
	return false
}

func (x *GetOfferedScheduleResponseData) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetPrerequisiteSubjects() []string {
	if x != nil {
		return x.PrerequisiteSubjects
	}
	return nil
}

func (x *GetOfferedScheduleResponseData) GetSingleDaySchedules() []*GetOfferedScheduleResponseDataSingleDaySchedule {
	if x != nil {
		return x.SingleDaySchedules
	}
	return nil
}

func (x *GetOfferedScheduleResponseData) GetMidtermExamDate() string {
	if x != nil {
		return x.MidtermExamDate
	}
	return ""
}

func (x *GetOfferedScheduleResponseData) GetMidtermStartTime() uint32 {
	if x != nil {
		return x.MidtermStartTime
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetMidtermEndTime() uint32 {
	if x != nil {
		return x.MidtermEndTime
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetMidtermRoomName() string {
	if x != nil {
		return x.MidtermRoomName
	}
	return ""
}

func (x *GetOfferedScheduleResponseData) GetEndtermExamDate() string {
	if x != nil {
		return x.EndtermExamDate
	}
	return ""
}

func (x *GetOfferedScheduleResponseData) GetEndtermStartTime() uint32 {
	if x != nil {
		return x.EndtermStartTime
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetEndtermEndTime() uint32 {
	if x != nil {
		return x.EndtermEndTime
	}
	return 0
}

func (x *GetOfferedScheduleResponseData) GetEndtermRoomName() string {
	if x != nil {
		return x.EndtermRoomName
	}
	return ""
}

type GetOfferedScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                           `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetOfferedScheduleResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetOfferedScheduleResponse) Reset() {
	*x = GetOfferedScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferedScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferedScheduleResponse) ProtoMessage() {}

func (x *GetOfferedScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferedScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetOfferedScheduleResponse) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{10}
}

func (x *GetOfferedScheduleResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetOfferedScheduleResponse) GetData() *GetOfferedScheduleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTakenClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemesterId string `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
}

func (x *GetTakenClassRequest) Reset() {
	*x = GetTakenClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTakenClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTakenClassRequest) ProtoMessage() {}

func (x *GetTakenClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTakenClassRequest.ProtoReflect.Descriptor instead.
func (*GetTakenClassRequest) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{11}
}

func (x *GetTakenClassRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type GetTakenClassResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                 string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	SubjectCode          string `protobuf:"bytes,3,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName          string `protobuf:"bytes,4,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	TheoryCredit         uint32 `protobuf:"varint,5,opt,name=theory_credit,json=theoryCredit,proto3" json:"theory_credit"`
	PracticumCredit      uint32 `protobuf:"varint,6,opt,name=practicum_credit,json=practicumCredit,proto3" json:"practicum_credit"`
	FieldPracticumCredit uint32 `protobuf:"varint,7,opt,name=field_practicum_credit,json=fieldPracticumCredit,proto3" json:"field_practicum_credit"`
}

func (x *GetTakenClassResponseData) Reset() {
	*x = GetTakenClassResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTakenClassResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTakenClassResponseData) ProtoMessage() {}

func (x *GetTakenClassResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTakenClassResponseData.ProtoReflect.Descriptor instead.
func (*GetTakenClassResponseData) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{12}
}

func (x *GetTakenClassResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTakenClassResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTakenClassResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetTakenClassResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetTakenClassResponseData) GetTheoryCredit() uint32 {
	if x != nil {
		return x.TheoryCredit
	}
	return 0
}

func (x *GetTakenClassResponseData) GetPracticumCredit() uint32 {
	if x != nil {
		return x.PracticumCredit
	}
	return 0
}

func (x *GetTakenClassResponseData) GetFieldPracticumCredit() uint32 {
	if x != nil {
		return x.FieldPracticumCredit
	}
	return 0
}

type GetTakenClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                        `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*GetTakenClassResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *GetTakenClassResponse) Reset() {
	*x = GetTakenClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_class_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTakenClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTakenClassResponse) ProtoMessage() {}

func (x *GetTakenClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_class_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTakenClassResponse.ProtoReflect.Descriptor instead.
func (*GetTakenClassResponse) Descriptor() ([]byte, []int) {
	return file_student_class_proto_rawDescGZIP(), []int{13}
}

func (x *GetTakenClassResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetTakenClassResponse) GetData() []*GetTakenClassResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_student_class_proto protoreflect.FileDescriptor

var file_student_class_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x72, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x22, 0x84, 0x01, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0xbc, 0x04, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x16, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x1e, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x59, 0x0a, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x52, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x19,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x42,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x36, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x2f, 0x47,
	0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfd, 0x07, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x4c, 0x0a, 0x23, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x61,
	0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x14, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x70, 0x0a, 0x14, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x12, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x79,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d,
	0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72,
	0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65,
	0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72,
	0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x6e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x02,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x68,
	0x65, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x22, 0x7e, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd0, 0x02, 0x0a, 0x13,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x65, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x18,
	0x5a, 0x16, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_student_class_proto_rawDescOnce sync.Once
	file_student_class_proto_rawDescData = file_student_class_proto_rawDesc
)

func file_student_class_proto_rawDescGZIP() []byte {
	file_student_class_proto_rawDescOnce.Do(func() {
		file_student_class_proto_rawDescData = protoimpl.X.CompressGZIP(file_student_class_proto_rawDescData)
	})
	return file_student_class_proto_rawDescData
}

var file_student_class_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_student_class_proto_goTypes = []interface{}{
	(*Meta)(nil),                       // 0: student_class.Meta
	(*Pagination)(nil),                 // 1: student_class.Pagination
	(*GetOfferedClassListRequest)(nil), // 2: student_class.GetOfferedClassListRequest
	(*GetOfferedClassListResponseDataClassLecturer)(nil),    // 3: student_class.GetOfferedClassListResponseDataClassLecturer
	(*GetOfferedClassListResponseDataClass)(nil),            // 4: student_class.GetOfferedClassListResponseDataClass
	(*GetOfferedClassListResponseData)(nil),                 // 5: student_class.GetOfferedClassListResponseData
	(*GetOfferedClassListResponse)(nil),                     // 6: student_class.GetOfferedClassListResponse
	(*GetOfferedScheduleRequest)(nil),                       // 7: student_class.GetOfferedScheduleRequest
	(*GetOfferedScheduleResponseDataSingleDaySchedule)(nil), // 8: student_class.GetOfferedScheduleResponseDataSingleDaySchedule
	(*GetOfferedScheduleResponseData)(nil),                  // 9: student_class.GetOfferedScheduleResponseData
	(*GetOfferedScheduleResponse)(nil),                      // 10: student_class.GetOfferedScheduleResponse
	(*GetTakenClassRequest)(nil),                            // 11: student_class.GetTakenClassRequest
	(*GetTakenClassResponseData)(nil),                       // 12: student_class.GetTakenClassResponseData
	(*GetTakenClassResponse)(nil),                           // 13: student_class.GetTakenClassResponse
}
var file_student_class_proto_depIdxs = []int32{
	3,  // 0: student_class.GetOfferedClassListResponseDataClass.lecturers:type_name -> student_class.GetOfferedClassListResponseDataClassLecturer
	4,  // 1: student_class.GetOfferedClassListResponseData.classes:type_name -> student_class.GetOfferedClassListResponseDataClass
	0,  // 2: student_class.GetOfferedClassListResponse.meta:type_name -> student_class.Meta
	5,  // 3: student_class.GetOfferedClassListResponse.data:type_name -> student_class.GetOfferedClassListResponseData
	8,  // 4: student_class.GetOfferedScheduleResponseData.single_day_schedules:type_name -> student_class.GetOfferedScheduleResponseDataSingleDaySchedule
	0,  // 5: student_class.GetOfferedScheduleResponse.meta:type_name -> student_class.Meta
	9,  // 6: student_class.GetOfferedScheduleResponse.data:type_name -> student_class.GetOfferedScheduleResponseData
	0,  // 7: student_class.GetTakenClassResponse.meta:type_name -> student_class.Meta
	12, // 8: student_class.GetTakenClassResponse.data:type_name -> student_class.GetTakenClassResponseData
	2,  // 9: student_class.StudentClassHandler.GetOfferedClassList:input_type -> student_class.GetOfferedClassListRequest
	7,  // 10: student_class.StudentClassHandler.GetOfferedSchedule:input_type -> student_class.GetOfferedScheduleRequest
	11, // 11: student_class.StudentClassHandler.GetTakenClass:input_type -> student_class.GetTakenClassRequest
	6,  // 12: student_class.StudentClassHandler.GetOfferedClassList:output_type -> student_class.GetOfferedClassListResponse
	10, // 13: student_class.StudentClassHandler.GetOfferedSchedule:output_type -> student_class.GetOfferedScheduleResponse
	13, // 14: student_class.StudentClassHandler.GetTakenClass:output_type -> student_class.GetTakenClassResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_student_class_proto_init() }
func file_student_class_proto_init() {
	if File_student_class_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_student_class_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedClassListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedClassListResponseDataClassLecturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedClassListResponseDataClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedClassListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedClassListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedScheduleResponseDataSingleDaySchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedScheduleResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferedScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTakenClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTakenClassResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_class_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTakenClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_student_class_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_student_class_proto_goTypes,
		DependencyIndexes: file_student_class_proto_depIdxs,
		MessageInfos:      file_student_class_proto_msgTypes,
	}.Build()
	File_student_class_proto = out.File
	file_student_class_proto_rawDesc = nil
	file_student_class_proto_goTypes = nil
	file_student_class_proto_depIdxs = nil
}
