// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: student/thesis.proto

package thesis

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDetailRequest) Reset() {
	*x = GetDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailRequest) ProtoMessage() {}

func (x *GetDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDetailRequest) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{2}
}

type GetDetailResponseDataFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	FileUrl         string `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url"`
	FilePath        string `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path"`
	FilePathType    string `protobuf:"bytes,4,opt,name=file_path_type,json=filePathType,proto3" json:"file_path_type"`
	FileDescription string `protobuf:"bytes,5,opt,name=file_description,json=fileDescription,proto3" json:"file_description"`
}

func (x *GetDetailResponseDataFile) Reset() {
	*x = GetDetailResponseDataFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataFile) ProtoMessage() {}

func (x *GetDetailResponseDataFile) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataFile.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataFile) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{3}
}

func (x *GetDetailResponseDataFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataFile) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *GetDetailResponseDataFile) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetDetailResponseDataFile) GetFilePathType() string {
	if x != nil {
		return x.FilePathType
	}
	return ""
}

func (x *GetDetailResponseDataFile) GetFileDescription() string {
	if x != nil {
		return x.FileDescription
	}
	return ""
}

type GetDetailResponseDataThesisSupervisor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	LecturerId               string `protobuf:"bytes,2,opt,name=lecturer_id,json=lecturerId,proto3" json:"lecturer_id"`
	LecturerName             string `protobuf:"bytes,3,opt,name=lecturer_name,json=lecturerName,proto3" json:"lecturer_name"`
	LecturerFrontTitle       string `protobuf:"bytes,4,opt,name=lecturer_front_title,json=lecturerFrontTitle,proto3" json:"lecturer_front_title"`
	LecturerBackDegree       string `protobuf:"bytes,5,opt,name=lecturer_back_degree,json=lecturerBackDegree,proto3" json:"lecturer_back_degree"`
	ThesisSupervisorRoleId   string `protobuf:"bytes,6,opt,name=thesis_supervisor_role_id,json=thesisSupervisorRoleId,proto3" json:"thesis_supervisor_role_id"`
	ThesisSupervisorRoleName string `protobuf:"bytes,7,opt,name=thesis_supervisor_role_name,json=thesisSupervisorRoleName,proto3" json:"thesis_supervisor_role_name"`
	ThesisSupervisorRoleSort uint32 `protobuf:"varint,8,opt,name=thesis_supervisor_role_sort,json=thesisSupervisorRoleSort,proto3" json:"thesis_supervisor_role_sort"`
}

func (x *GetDetailResponseDataThesisSupervisor) Reset() {
	*x = GetDetailResponseDataThesisSupervisor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataThesisSupervisor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataThesisSupervisor) ProtoMessage() {}

func (x *GetDetailResponseDataThesisSupervisor) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataThesisSupervisor.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataThesisSupervisor) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{4}
}

func (x *GetDetailResponseDataThesisSupervisor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetLecturerId() string {
	if x != nil {
		return x.LecturerId
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetLecturerName() string {
	if x != nil {
		return x.LecturerName
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetLecturerFrontTitle() string {
	if x != nil {
		return x.LecturerFrontTitle
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetLecturerBackDegree() string {
	if x != nil {
		return x.LecturerBackDegree
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetThesisSupervisorRoleId() string {
	if x != nil {
		return x.ThesisSupervisorRoleId
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetThesisSupervisorRoleName() string {
	if x != nil {
		return x.ThesisSupervisorRoleName
	}
	return ""
}

func (x *GetDetailResponseDataThesisSupervisor) GetThesisSupervisorRoleSort() uint32 {
	if x != nil {
		return x.ThesisSupervisorRoleSort
	}
	return 0
}

type GetDetailResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	StudentId                 string                                   `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id"`
	StudentName               string                                   `protobuf:"bytes,3,opt,name=student_name,json=studentName,proto3" json:"student_name"`
	StudentNimNumber          int64                                    `protobuf:"varint,4,opt,name=student_nim_number,json=studentNimNumber,proto3" json:"student_nim_number"`
	StartSemesterId           string                                   `protobuf:"bytes,5,opt,name=start_semester_id,json=startSemesterId,proto3" json:"start_semester_id"`
	StartSemesterType         string                                   `protobuf:"bytes,6,opt,name=start_semester_type,json=startSemesterType,proto3" json:"start_semester_type"`
	StartSemesterSchoolYear   string                                   `protobuf:"bytes,7,opt,name=start_semester_school_year,json=startSemesterSchoolYear,proto3" json:"start_semester_school_year"`
	FinishSemesterId          string                                   `protobuf:"bytes,8,opt,name=finish_semester_id,json=finishSemesterId,proto3" json:"finish_semester_id"`
	FinishSemesterType        string                                   `protobuf:"bytes,9,opt,name=finish_semester_type,json=finishSemesterType,proto3" json:"finish_semester_type"`
	FinishSemesterSchoolYear  string                                   `protobuf:"bytes,10,opt,name=finish_semester_school_year,json=finishSemesterSchoolYear,proto3" json:"finish_semester_school_year"`
	Topic                     string                                   `protobuf:"bytes,11,opt,name=topic,proto3" json:"topic"`
	Title                     string                                   `protobuf:"bytes,12,opt,name=title,proto3" json:"title"`
	EnglishTitle              string                                   `protobuf:"bytes,13,opt,name=english_title,json=englishTitle,proto3" json:"english_title"`
	StartDate                 string                                   `protobuf:"bytes,14,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	FinishDate                string                                   `protobuf:"bytes,15,opt,name=finish_date,json=finishDate,proto3" json:"finish_date"`
	Remarks                   string                                   `protobuf:"bytes,16,opt,name=remarks,proto3" json:"remarks"`
	IsJointThesis             bool                                     `protobuf:"varint,17,opt,name=is_joint_thesis,json=isJointThesis,proto3" json:"is_joint_thesis"`
	Status                    string                                   `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`
	ProposalSeminarDate       string                                   `protobuf:"bytes,19,opt,name=proposal_seminar_date,json=proposalSeminarDate,proto3" json:"proposal_seminar_date"`
	ProposalCertificateNumber string                                   `protobuf:"bytes,20,opt,name=proposal_certificate_number,json=proposalCertificateNumber,proto3" json:"proposal_certificate_number"`
	ProposalCertificateDate   string                                   `protobuf:"bytes,21,opt,name=proposal_certificate_date,json=proposalCertificateDate,proto3" json:"proposal_certificate_date"`
	ThesisDefenseCount        uint32                                   `protobuf:"varint,22,opt,name=thesis_defense_count,json=thesisDefenseCount,proto3" json:"thesis_defense_count"`
	GradePoint                float64                                  `protobuf:"fixed64,23,opt,name=grade_point,json=gradePoint,proto3" json:"grade_point"`
	GradeCode                 string                                   `protobuf:"bytes,24,opt,name=grade_code,json=gradeCode,proto3" json:"grade_code"`
	Files                     []*GetDetailResponseDataFile             `protobuf:"bytes,25,rep,name=files,proto3" json:"files"`
	ThesisSupervisors         []*GetDetailResponseDataThesisSupervisor `protobuf:"bytes,26,rep,name=thesis_supervisors,json=thesisSupervisors,proto3" json:"thesis_supervisors"`
}

func (x *GetDetailResponseData) Reset() {
	*x = GetDetailResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseData) ProtoMessage() {}

func (x *GetDetailResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseData.ProtoReflect.Descriptor instead.
func (*GetDetailResponseData) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{5}
}

func (x *GetDetailResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentNimNumber() int64 {
	if x != nil {
		return x.StudentNimNumber
	}
	return 0
}

func (x *GetDetailResponseData) GetStartSemesterId() string {
	if x != nil {
		return x.StartSemesterId
	}
	return ""
}

func (x *GetDetailResponseData) GetStartSemesterType() string {
	if x != nil {
		return x.StartSemesterType
	}
	return ""
}

func (x *GetDetailResponseData) GetStartSemesterSchoolYear() string {
	if x != nil {
		return x.StartSemesterSchoolYear
	}
	return ""
}

func (x *GetDetailResponseData) GetFinishSemesterId() string {
	if x != nil {
		return x.FinishSemesterId
	}
	return ""
}

func (x *GetDetailResponseData) GetFinishSemesterType() string {
	if x != nil {
		return x.FinishSemesterType
	}
	return ""
}

func (x *GetDetailResponseData) GetFinishSemesterSchoolYear() string {
	if x != nil {
		return x.FinishSemesterSchoolYear
	}
	return ""
}

func (x *GetDetailResponseData) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *GetDetailResponseData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetDetailResponseData) GetEnglishTitle() string {
	if x != nil {
		return x.EnglishTitle
	}
	return ""
}

func (x *GetDetailResponseData) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetFinishDate() string {
	if x != nil {
		return x.FinishDate
	}
	return ""
}

func (x *GetDetailResponseData) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *GetDetailResponseData) GetIsJointThesis() bool {
	if x != nil {
		return x.IsJointThesis
	}
	return false
}

func (x *GetDetailResponseData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDetailResponseData) GetProposalSeminarDate() string {
	if x != nil {
		return x.ProposalSeminarDate
	}
	return ""
}

func (x *GetDetailResponseData) GetProposalCertificateNumber() string {
	if x != nil {
		return x.ProposalCertificateNumber
	}
	return ""
}

func (x *GetDetailResponseData) GetProposalCertificateDate() string {
	if x != nil {
		return x.ProposalCertificateDate
	}
	return ""
}

func (x *GetDetailResponseData) GetThesisDefenseCount() uint32 {
	if x != nil {
		return x.ThesisDefenseCount
	}
	return 0
}

func (x *GetDetailResponseData) GetGradePoint() float64 {
	if x != nil {
		return x.GradePoint
	}
	return 0
}

func (x *GetDetailResponseData) GetGradeCode() string {
	if x != nil {
		return x.GradeCode
	}
	return ""
}

func (x *GetDetailResponseData) GetFiles() []*GetDetailResponseDataFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetDetailResponseData) GetThesisSupervisors() []*GetDetailResponseDataThesisSupervisor {
	if x != nil {
		return x.ThesisSupervisors
	}
	return nil
}

type GetDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetDetailResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetDetailResponse) Reset() {
	*x = GetDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponse) ProtoMessage() {}

func (x *GetDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDetailResponse) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetDetailResponse) GetData() *GetDetailResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic           string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic"`
	Title           string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	EnglishTitle    string `protobuf:"bytes,3,opt,name=english_title,json=englishTitle,proto3" json:"english_title"`
	Remarks         string `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks"`
	IsJointThesis   bool   `protobuf:"varint,5,opt,name=is_joint_thesis,json=isJointThesis,proto3" json:"is_joint_thesis"`
	FilePath        string `protobuf:"bytes,6,opt,name=file_path,json=filePath,proto3" json:"file_path"`
	FilePathType    string `protobuf:"bytes,7,opt,name=file_path_type,json=filePathType,proto3" json:"file_path_type"`
	FileDescription string `protobuf:"bytes,8,opt,name=file_description,json=fileDescription,proto3" json:"file_description"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateRequest) GetEnglishTitle() string {
	if x != nil {
		return x.EnglishTitle
	}
	return ""
}

func (x *CreateRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CreateRequest) GetIsJointThesis() bool {
	if x != nil {
		return x.IsJointThesis
	}
	return false
}

func (x *CreateRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *CreateRequest) GetFilePathType() string {
	if x != nil {
		return x.FilePathType
	}
	return ""
}

func (x *CreateRequest) GetFileDescription() string {
	if x != nil {
		return x.FileDescription
	}
	return ""
}

type CreateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateResponseData) Reset() {
	*x = CreateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponseData) ProtoMessage() {}

func (x *CreateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponseData.ProtoReflect.Descriptor instead.
func (*CreateResponseData) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{8}
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *CreateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{9}
}

func (x *CreateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CreateResponse) GetData() *CreateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRequestFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath        string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path"`
	FilePathType    string `protobuf:"bytes,2,opt,name=file_path_type,json=filePathType,proto3" json:"file_path_type"`
	FileDescription string `protobuf:"bytes,3,opt,name=file_description,json=fileDescription,proto3" json:"file_description"`
}

func (x *UpdateRequestFile) Reset() {
	*x = UpdateRequestFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestFile) ProtoMessage() {}

func (x *UpdateRequestFile) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestFile.ProtoReflect.Descriptor instead.
func (*UpdateRequestFile) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRequestFile) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UpdateRequestFile) GetFilePathType() string {
	if x != nil {
		return x.FilePathType
	}
	return ""
}

func (x *UpdateRequestFile) GetFileDescription() string {
	if x != nil {
		return x.FileDescription
	}
	return ""
}

type UpdateRequestThesisSupervisor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LecturerId             string `protobuf:"bytes,1,opt,name=lecturer_id,json=lecturerId,proto3" json:"lecturer_id"`
	ThesisSupervisorRoleId string `protobuf:"bytes,2,opt,name=thesis_supervisor_role_id,json=thesisSupervisorRoleId,proto3" json:"thesis_supervisor_role_id"`
}

func (x *UpdateRequestThesisSupervisor) Reset() {
	*x = UpdateRequestThesisSupervisor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestThesisSupervisor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestThesisSupervisor) ProtoMessage() {}

func (x *UpdateRequestThesisSupervisor) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestThesisSupervisor.ProtoReflect.Descriptor instead.
func (*UpdateRequestThesisSupervisor) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRequestThesisSupervisor) GetLecturerId() string {
	if x != nil {
		return x.LecturerId
	}
	return ""
}

func (x *UpdateRequestThesisSupervisor) GetThesisSupervisorRoleId() string {
	if x != nil {
		return x.ThesisSupervisorRoleId
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic         string               `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic"`
	Title         string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	EnglishTitle  string               `protobuf:"bytes,3,opt,name=english_title,json=englishTitle,proto3" json:"english_title"`
	Remarks       string               `protobuf:"bytes,4,opt,name=remarks,proto3" json:"remarks"`
	IsJointThesis bool                 `protobuf:"varint,5,opt,name=is_joint_thesis,json=isJointThesis,proto3" json:"is_joint_thesis"`
	Files         []*UpdateRequestFile `protobuf:"bytes,6,rep,name=files,proto3" json:"files"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *UpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateRequest) GetEnglishTitle() string {
	if x != nil {
		return x.EnglishTitle
	}
	return ""
}

func (x *UpdateRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UpdateRequest) GetIsJointThesis() bool {
	if x != nil {
		return x.IsJointThesis
	}
	return false
}

func (x *UpdateRequest) GetFiles() []*UpdateRequestFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type UpdateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponseData) Reset() {
	*x = UpdateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponseData) ProtoMessage() {}

func (x *UpdateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponseData.ProtoReflect.Descriptor instead.
func (*UpdateResponseData) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{13}
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *UpdateResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_thesis_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_thesis_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_student_thesis_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateResponse) GetData() *UpdateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_student_thesis_proto protoreflect.FileDescriptor

var file_student_thesis_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65,
	0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb4, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x03, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x42, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x6f, 0x72, 0x74, 0x22, 0x83, 0x09, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x69, 0x6d, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x4e, 0x69, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4a, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6d,
	0x69, 0x6e, 0x61, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x12, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x52, 0x11, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x22, 0x78, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x90, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4a, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x81, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x80, 0x02, 0x0a, 0x14, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x65, 0x73, 0x69, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x20, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_student_thesis_proto_rawDescOnce sync.Once
	file_student_thesis_proto_rawDescData = file_student_thesis_proto_rawDesc
)

func file_student_thesis_proto_rawDescGZIP() []byte {
	file_student_thesis_proto_rawDescOnce.Do(func() {
		file_student_thesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_student_thesis_proto_rawDescData)
	})
	return file_student_thesis_proto_rawDescData
}

var file_student_thesis_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_student_thesis_proto_goTypes = []interface{}{
	(*Meta)(nil),                                  // 0: student_thesis.Meta
	(*Pagination)(nil),                            // 1: student_thesis.Pagination
	(*GetDetailRequest)(nil),                      // 2: student_thesis.GetDetailRequest
	(*GetDetailResponseDataFile)(nil),             // 3: student_thesis.GetDetailResponseDataFile
	(*GetDetailResponseDataThesisSupervisor)(nil), // 4: student_thesis.GetDetailResponseDataThesisSupervisor
	(*GetDetailResponseData)(nil),                 // 5: student_thesis.GetDetailResponseData
	(*GetDetailResponse)(nil),                     // 6: student_thesis.GetDetailResponse
	(*CreateRequest)(nil),                         // 7: student_thesis.CreateRequest
	(*CreateResponseData)(nil),                    // 8: student_thesis.CreateResponseData
	(*CreateResponse)(nil),                        // 9: student_thesis.CreateResponse
	(*UpdateRequestFile)(nil),                     // 10: student_thesis.UpdateRequestFile
	(*UpdateRequestThesisSupervisor)(nil),         // 11: student_thesis.UpdateRequestThesisSupervisor
	(*UpdateRequest)(nil),                         // 12: student_thesis.UpdateRequest
	(*UpdateResponseData)(nil),                    // 13: student_thesis.UpdateResponseData
	(*UpdateResponse)(nil),                        // 14: student_thesis.UpdateResponse
}
var file_student_thesis_proto_depIdxs = []int32{
	3,  // 0: student_thesis.GetDetailResponseData.files:type_name -> student_thesis.GetDetailResponseDataFile
	4,  // 1: student_thesis.GetDetailResponseData.thesis_supervisors:type_name -> student_thesis.GetDetailResponseDataThesisSupervisor
	0,  // 2: student_thesis.GetDetailResponse.meta:type_name -> student_thesis.Meta
	5,  // 3: student_thesis.GetDetailResponse.data:type_name -> student_thesis.GetDetailResponseData
	0,  // 4: student_thesis.CreateResponse.meta:type_name -> student_thesis.Meta
	8,  // 5: student_thesis.CreateResponse.data:type_name -> student_thesis.CreateResponseData
	10, // 6: student_thesis.UpdateRequest.files:type_name -> student_thesis.UpdateRequestFile
	0,  // 7: student_thesis.UpdateResponse.meta:type_name -> student_thesis.Meta
	13, // 8: student_thesis.UpdateResponse.data:type_name -> student_thesis.UpdateResponseData
	2,  // 9: student_thesis.StudentThesisHandler.GetDetail:input_type -> student_thesis.GetDetailRequest
	7,  // 10: student_thesis.StudentThesisHandler.Create:input_type -> student_thesis.CreateRequest
	12, // 11: student_thesis.StudentThesisHandler.Update:input_type -> student_thesis.UpdateRequest
	6,  // 12: student_thesis.StudentThesisHandler.GetDetail:output_type -> student_thesis.GetDetailResponse
	9,  // 13: student_thesis.StudentThesisHandler.Create:output_type -> student_thesis.CreateResponse
	14, // 14: student_thesis.StudentThesisHandler.Update:output_type -> student_thesis.UpdateResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_student_thesis_proto_init() }
func file_student_thesis_proto_init() {
	if File_student_thesis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_student_thesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataThesisSupervisor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestThesisSupervisor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_thesis_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_student_thesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_student_thesis_proto_goTypes,
		DependencyIndexes: file_student_thesis_proto_depIdxs,
		MessageInfos:      file_student_thesis_proto_msgTypes,
	}.Build()
	File_student_thesis_proto = out.File
	file_student_thesis_proto_rawDesc = nil
	file_student_thesis_proto_goTypes = nil
	file_student_thesis_proto_depIdxs = nil
}
