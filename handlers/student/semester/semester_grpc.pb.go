// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: student/semester.proto

package semester

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StudentSemesterHandlerClient is the client API for StudentSemesterHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StudentSemesterHandlerClient interface {
	GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error)
}

type studentSemesterHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentSemesterHandlerClient(cc grpc.ClientConnInterface) StudentSemesterHandlerClient {
	return &studentSemesterHandlerClient{cc}
}

func (c *studentSemesterHandlerClient) GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error) {
	out := new(GetListResponse)
	err := c.cc.Invoke(ctx, "/student_semester.StudentSemesterHandler/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudentSemesterHandlerServer is the server API for StudentSemesterHandler service.
// All implementations must embed UnimplementedStudentSemesterHandlerServer
// for forward compatibility
type StudentSemesterHandlerServer interface {
	GetList(context.Context, *GetListRequest) (*GetListResponse, error)
	mustEmbedUnimplementedStudentSemesterHandlerServer()
}

// UnimplementedStudentSemesterHandlerServer must be embedded to have forward compatible implementations.
type UnimplementedStudentSemesterHandlerServer struct {
}

func (UnimplementedStudentSemesterHandlerServer) GetList(context.Context, *GetListRequest) (*GetListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (UnimplementedStudentSemesterHandlerServer) mustEmbedUnimplementedStudentSemesterHandlerServer() {
}

// UnsafeStudentSemesterHandlerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StudentSemesterHandlerServer will
// result in compilation errors.
type UnsafeStudentSemesterHandlerServer interface {
	mustEmbedUnimplementedStudentSemesterHandlerServer()
}

func RegisterStudentSemesterHandlerServer(s grpc.ServiceRegistrar, srv StudentSemesterHandlerServer) {
	s.RegisterService(&StudentSemesterHandler_ServiceDesc, srv)
}

func _StudentSemesterHandler_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentSemesterHandlerServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student_semester.StudentSemesterHandler/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentSemesterHandlerServer).GetList(ctx, req.(*GetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StudentSemesterHandler_ServiceDesc is the grpc.ServiceDesc for StudentSemesterHandler service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StudentSemesterHandler_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "student_semester.StudentSemesterHandler",
	HandlerType: (*StudentSemesterHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _StudentSemesterHandler_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "student/semester.proto",
}
