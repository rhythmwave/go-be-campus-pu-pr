// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: student/student_skpi.proto

package student_skpi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDetailRequest) Reset() {
	*x = GetDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailRequest) ProtoMessage() {}

func (x *GetDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDetailRequest) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{2}
}

type GetDetailResponseDataAchievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Year uint32 `protobuf:"varint,3,opt,name=year,proto3" json:"year"`
}

func (x *GetDetailResponseDataAchievement) Reset() {
	*x = GetDetailResponseDataAchievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataAchievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataAchievement) ProtoMessage() {}

func (x *GetDetailResponseDataAchievement) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataAchievement.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataAchievement) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{3}
}

func (x *GetDetailResponseDataAchievement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataAchievement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataAchievement) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetDetailResponseDataOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Position      string `protobuf:"bytes,3,opt,name=position,proto3" json:"position"`
	ServiceLength uint32 `protobuf:"varint,4,opt,name=service_length,json=serviceLength,proto3" json:"service_length"`
}

func (x *GetDetailResponseDataOrganization) Reset() {
	*x = GetDetailResponseDataOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataOrganization) ProtoMessage() {}

func (x *GetDetailResponseDataOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataOrganization.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataOrganization) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{4}
}

func (x *GetDetailResponseDataOrganization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataOrganization) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *GetDetailResponseDataOrganization) GetServiceLength() uint32 {
	if x != nil {
		return x.ServiceLength
	}
	return 0
}

type GetDetailResponseDataCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
}

func (x *GetDetailResponseDataCertificate) Reset() {
	*x = GetDetailResponseDataCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataCertificate) ProtoMessage() {}

func (x *GetDetailResponseDataCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataCertificate.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataCertificate) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{5}
}

func (x *GetDetailResponseDataCertificate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataCertificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDetailResponseDataCharacterBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
}

func (x *GetDetailResponseDataCharacterBuilding) Reset() {
	*x = GetDetailResponseDataCharacterBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataCharacterBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataCharacterBuilding) ProtoMessage() {}

func (x *GetDetailResponseDataCharacterBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataCharacterBuilding.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataCharacterBuilding) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{6}
}

func (x *GetDetailResponseDataCharacterBuilding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataCharacterBuilding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDetailResponseDataInternship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
}

func (x *GetDetailResponseDataInternship) Reset() {
	*x = GetDetailResponseDataInternship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataInternship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataInternship) ProtoMessage() {}

func (x *GetDetailResponseDataInternship) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataInternship.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataInternship) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{7}
}

func (x *GetDetailResponseDataInternship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataInternship) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDetailResponseDataLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Score string `protobuf:"bytes,3,opt,name=score,proto3" json:"score"`
	Date  string `protobuf:"bytes,4,opt,name=date,proto3" json:"date"`
}

func (x *GetDetailResponseDataLanguage) Reset() {
	*x = GetDetailResponseDataLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataLanguage) ProtoMessage() {}

func (x *GetDetailResponseDataLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataLanguage.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataLanguage) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{8}
}

func (x *GetDetailResponseDataLanguage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataLanguage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataLanguage) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *GetDetailResponseDataLanguage) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetDetailResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           string                                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	StudentId                    string                                    `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id"`
	StudentNimNumber             int64                                     `protobuf:"varint,3,opt,name=student_nim_number,json=studentNimNumber,proto3" json:"student_nim_number"`
	StudentName                  string                                    `protobuf:"bytes,4,opt,name=student_name,json=studentName,proto3" json:"student_name"`
	StudentStudyProgramId        string                                    `protobuf:"bytes,5,opt,name=student_study_program_id,json=studentStudyProgramId,proto3" json:"student_study_program_id"`
	StudentStudyProgramName      string                                    `protobuf:"bytes,6,opt,name=student_study_program_name,json=studentStudyProgramName,proto3" json:"student_study_program_name"`
	StudentDiktiStudyProgramCode string                                    `protobuf:"bytes,7,opt,name=student_dikti_study_program_code,json=studentDiktiStudyProgramCode,proto3" json:"student_dikti_study_program_code"`
	SkpiNumber                   string                                    `protobuf:"bytes,8,opt,name=skpi_number,json=skpiNumber,proto3" json:"skpi_number"`
	IsApproved                   bool                                      `protobuf:"varint,9,opt,name=is_approved,json=isApproved,proto3" json:"is_approved"`
	AchievementPath              string                                    `protobuf:"bytes,10,opt,name=achievement_path,json=achievementPath,proto3" json:"achievement_path"`
	AchievementPathType          string                                    `protobuf:"bytes,11,opt,name=achievement_path_type,json=achievementPathType,proto3" json:"achievement_path_type"`
	AchievementUrl               string                                    `protobuf:"bytes,12,opt,name=achievement_url,json=achievementUrl,proto3" json:"achievement_url"`
	OrganizationPath             string                                    `protobuf:"bytes,13,opt,name=organization_path,json=organizationPath,proto3" json:"organization_path"`
	OrganizationPathType         string                                    `protobuf:"bytes,14,opt,name=organization_path_type,json=organizationPathType,proto3" json:"organization_path_type"`
	OrganizationUrl              string                                    `protobuf:"bytes,15,opt,name=organization_url,json=organizationUrl,proto3" json:"organization_url"`
	CertificatePath              string                                    `protobuf:"bytes,16,opt,name=certificate_path,json=certificatePath,proto3" json:"certificate_path"`
	CertificatePathType          string                                    `protobuf:"bytes,17,opt,name=certificate_path_type,json=certificatePathType,proto3" json:"certificate_path_type"`
	CertificateUrl               string                                    `protobuf:"bytes,18,opt,name=certificate_url,json=certificateUrl,proto3" json:"certificate_url"`
	LanguagePath                 string                                    `protobuf:"bytes,19,opt,name=language_path,json=languagePath,proto3" json:"language_path"`
	LanguagePathType             string                                    `protobuf:"bytes,20,opt,name=language_path_type,json=languagePathType,proto3" json:"language_path_type"`
	LanguageUrl                  string                                    `protobuf:"bytes,21,opt,name=language_url,json=languageUrl,proto3" json:"language_url"`
	Achievements                 []*GetDetailResponseDataAchievement       `protobuf:"bytes,22,rep,name=achievements,proto3" json:"achievements"`
	Organizations                []*GetDetailResponseDataOrganization      `protobuf:"bytes,23,rep,name=organizations,proto3" json:"organizations"`
	Certificates                 []*GetDetailResponseDataCertificate       `protobuf:"bytes,24,rep,name=certificates,proto3" json:"certificates"`
	CharacterBuildings           []*GetDetailResponseDataCharacterBuilding `protobuf:"bytes,25,rep,name=character_buildings,json=characterBuildings,proto3" json:"character_buildings"`
	Internships                  []*GetDetailResponseDataInternship        `protobuf:"bytes,26,rep,name=internships,proto3" json:"internships"`
	Languages                    []*GetDetailResponseDataLanguage          `protobuf:"bytes,27,rep,name=languages,proto3" json:"languages"`
}

func (x *GetDetailResponseData) Reset() {
	*x = GetDetailResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseData) ProtoMessage() {}

func (x *GetDetailResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseData.ProtoReflect.Descriptor instead.
func (*GetDetailResponseData) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{9}
}

func (x *GetDetailResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentNimNumber() int64 {
	if x != nil {
		return x.StudentNimNumber
	}
	return 0
}

func (x *GetDetailResponseData) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentStudyProgramId() string {
	if x != nil {
		return x.StudentStudyProgramId
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentStudyProgramName() string {
	if x != nil {
		return x.StudentStudyProgramName
	}
	return ""
}

func (x *GetDetailResponseData) GetStudentDiktiStudyProgramCode() string {
	if x != nil {
		return x.StudentDiktiStudyProgramCode
	}
	return ""
}

func (x *GetDetailResponseData) GetSkpiNumber() string {
	if x != nil {
		return x.SkpiNumber
	}
	return ""
}

func (x *GetDetailResponseData) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

func (x *GetDetailResponseData) GetAchievementPath() string {
	if x != nil {
		return x.AchievementPath
	}
	return ""
}

func (x *GetDetailResponseData) GetAchievementPathType() string {
	if x != nil {
		return x.AchievementPathType
	}
	return ""
}

func (x *GetDetailResponseData) GetAchievementUrl() string {
	if x != nil {
		return x.AchievementUrl
	}
	return ""
}

func (x *GetDetailResponseData) GetOrganizationPath() string {
	if x != nil {
		return x.OrganizationPath
	}
	return ""
}

func (x *GetDetailResponseData) GetOrganizationPathType() string {
	if x != nil {
		return x.OrganizationPathType
	}
	return ""
}

func (x *GetDetailResponseData) GetOrganizationUrl() string {
	if x != nil {
		return x.OrganizationUrl
	}
	return ""
}

func (x *GetDetailResponseData) GetCertificatePath() string {
	if x != nil {
		return x.CertificatePath
	}
	return ""
}

func (x *GetDetailResponseData) GetCertificatePathType() string {
	if x != nil {
		return x.CertificatePathType
	}
	return ""
}

func (x *GetDetailResponseData) GetCertificateUrl() string {
	if x != nil {
		return x.CertificateUrl
	}
	return ""
}

func (x *GetDetailResponseData) GetLanguagePath() string {
	if x != nil {
		return x.LanguagePath
	}
	return ""
}

func (x *GetDetailResponseData) GetLanguagePathType() string {
	if x != nil {
		return x.LanguagePathType
	}
	return ""
}

func (x *GetDetailResponseData) GetLanguageUrl() string {
	if x != nil {
		return x.LanguageUrl
	}
	return ""
}

func (x *GetDetailResponseData) GetAchievements() []*GetDetailResponseDataAchievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *GetDetailResponseData) GetOrganizations() []*GetDetailResponseDataOrganization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *GetDetailResponseData) GetCertificates() []*GetDetailResponseDataCertificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *GetDetailResponseData) GetCharacterBuildings() []*GetDetailResponseDataCharacterBuilding {
	if x != nil {
		return x.CharacterBuildings
	}
	return nil
}

func (x *GetDetailResponseData) GetInternships() []*GetDetailResponseDataInternship {
	if x != nil {
		return x.Internships
	}
	return nil
}

func (x *GetDetailResponseData) GetLanguages() []*GetDetailResponseDataLanguage {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetDetailResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetDetailResponse) Reset() {
	*x = GetDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponse) ProtoMessage() {}

func (x *GetDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDetailResponse) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{10}
}

func (x *GetDetailResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetDetailResponse) GetData() *GetDetailResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpsertRequestDataAchievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Year uint32 `protobuf:"varint,2,opt,name=year,proto3" json:"year"`
}

func (x *UpsertRequestDataAchievement) Reset() {
	*x = UpsertRequestDataAchievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequestDataAchievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequestDataAchievement) ProtoMessage() {}

func (x *UpsertRequestDataAchievement) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequestDataAchievement.ProtoReflect.Descriptor instead.
func (*UpsertRequestDataAchievement) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{11}
}

func (x *UpsertRequestDataAchievement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertRequestDataAchievement) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type UpsertRequestDataOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Position      string `protobuf:"bytes,2,opt,name=position,proto3" json:"position"`
	ServiceLength uint32 `protobuf:"varint,3,opt,name=service_length,json=serviceLength,proto3" json:"service_length"`
}

func (x *UpsertRequestDataOrganization) Reset() {
	*x = UpsertRequestDataOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequestDataOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequestDataOrganization) ProtoMessage() {}

func (x *UpsertRequestDataOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequestDataOrganization.ProtoReflect.Descriptor instead.
func (*UpsertRequestDataOrganization) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{12}
}

func (x *UpsertRequestDataOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertRequestDataOrganization) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *UpsertRequestDataOrganization) GetServiceLength() uint32 {
	if x != nil {
		return x.ServiceLength
	}
	return 0
}

type UpsertRequestDataCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *UpsertRequestDataCertificate) Reset() {
	*x = UpsertRequestDataCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequestDataCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequestDataCertificate) ProtoMessage() {}

func (x *UpsertRequestDataCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequestDataCertificate.ProtoReflect.Descriptor instead.
func (*UpsertRequestDataCertificate) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{13}
}

func (x *UpsertRequestDataCertificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertRequestDataCharacterBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *UpsertRequestDataCharacterBuilding) Reset() {
	*x = UpsertRequestDataCharacterBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequestDataCharacterBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequestDataCharacterBuilding) ProtoMessage() {}

func (x *UpsertRequestDataCharacterBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequestDataCharacterBuilding.ProtoReflect.Descriptor instead.
func (*UpsertRequestDataCharacterBuilding) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{14}
}

func (x *UpsertRequestDataCharacterBuilding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertRequestDataInternship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *UpsertRequestDataInternship) Reset() {
	*x = UpsertRequestDataInternship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequestDataInternship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequestDataInternship) ProtoMessage() {}

func (x *UpsertRequestDataInternship) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequestDataInternship.ProtoReflect.Descriptor instead.
func (*UpsertRequestDataInternship) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{15}
}

func (x *UpsertRequestDataInternship) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertRequestDataLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Score string `protobuf:"bytes,2,opt,name=score,proto3" json:"score"`
	Date  string `protobuf:"bytes,3,opt,name=date,proto3" json:"date"`
}

func (x *UpsertRequestDataLanguage) Reset() {
	*x = UpsertRequestDataLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequestDataLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequestDataLanguage) ProtoMessage() {}

func (x *UpsertRequestDataLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequestDataLanguage.ProtoReflect.Descriptor instead.
func (*UpsertRequestDataLanguage) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{16}
}

func (x *UpsertRequestDataLanguage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertRequestDataLanguage) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *UpsertRequestDataLanguage) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type UpsertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementPath      string                                `protobuf:"bytes,1,opt,name=achievement_path,json=achievementPath,proto3" json:"achievement_path"`
	AchievementPathType  string                                `protobuf:"bytes,2,opt,name=achievement_path_type,json=achievementPathType,proto3" json:"achievement_path_type"`
	OrganizationPath     string                                `protobuf:"bytes,3,opt,name=organization_path,json=organizationPath,proto3" json:"organization_path"`
	OrganizationPathType string                                `protobuf:"bytes,4,opt,name=organization_path_type,json=organizationPathType,proto3" json:"organization_path_type"`
	CertificatePath      string                                `protobuf:"bytes,5,opt,name=certificate_path,json=certificatePath,proto3" json:"certificate_path"`
	CertificatePathType  string                                `protobuf:"bytes,6,opt,name=certificate_path_type,json=certificatePathType,proto3" json:"certificate_path_type"`
	LanguagePath         string                                `protobuf:"bytes,7,opt,name=language_path,json=languagePath,proto3" json:"language_path"`
	LanguagePathType     string                                `protobuf:"bytes,8,opt,name=language_path_type,json=languagePathType,proto3" json:"language_path_type"`
	Achievements         []*UpsertRequestDataAchievement       `protobuf:"bytes,9,rep,name=achievements,proto3" json:"achievements"`
	Organizations        []*UpsertRequestDataOrganization      `protobuf:"bytes,10,rep,name=organizations,proto3" json:"organizations"`
	Certificates         []*UpsertRequestDataCertificate       `protobuf:"bytes,11,rep,name=certificates,proto3" json:"certificates"`
	CharacterBuildings   []*UpsertRequestDataCharacterBuilding `protobuf:"bytes,12,rep,name=character_buildings,json=characterBuildings,proto3" json:"character_buildings"`
	Internships          []*UpsertRequestDataInternship        `protobuf:"bytes,13,rep,name=internships,proto3" json:"internships"`
	Languages            []*UpsertRequestDataLanguage          `protobuf:"bytes,14,rep,name=languages,proto3" json:"languages"`
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{17}
}

func (x *UpsertRequest) GetAchievementPath() string {
	if x != nil {
		return x.AchievementPath
	}
	return ""
}

func (x *UpsertRequest) GetAchievementPathType() string {
	if x != nil {
		return x.AchievementPathType
	}
	return ""
}

func (x *UpsertRequest) GetOrganizationPath() string {
	if x != nil {
		return x.OrganizationPath
	}
	return ""
}

func (x *UpsertRequest) GetOrganizationPathType() string {
	if x != nil {
		return x.OrganizationPathType
	}
	return ""
}

func (x *UpsertRequest) GetCertificatePath() string {
	if x != nil {
		return x.CertificatePath
	}
	return ""
}

func (x *UpsertRequest) GetCertificatePathType() string {
	if x != nil {
		return x.CertificatePathType
	}
	return ""
}

func (x *UpsertRequest) GetLanguagePath() string {
	if x != nil {
		return x.LanguagePath
	}
	return ""
}

func (x *UpsertRequest) GetLanguagePathType() string {
	if x != nil {
		return x.LanguagePathType
	}
	return ""
}

func (x *UpsertRequest) GetAchievements() []*UpsertRequestDataAchievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *UpsertRequest) GetOrganizations() []*UpsertRequestDataOrganization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *UpsertRequest) GetCertificates() []*UpsertRequestDataCertificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *UpsertRequest) GetCharacterBuildings() []*UpsertRequestDataCharacterBuilding {
	if x != nil {
		return x.CharacterBuildings
	}
	return nil
}

func (x *UpsertRequest) GetInternships() []*UpsertRequestDataInternship {
	if x != nil {
		return x.Internships
	}
	return nil
}

func (x *UpsertRequest) GetLanguages() []*UpsertRequestDataLanguage {
	if x != nil {
		return x.Languages
	}
	return nil
}

type UpsertResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertResponseData) Reset() {
	*x = UpsertResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponseData) ProtoMessage() {}

func (x *UpsertResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponseData.ProtoReflect.Descriptor instead.
func (*UpsertResponseData) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{18}
}

type UpsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta               `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *UpsertResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_student_student_skpi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_student_student_skpi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_student_student_skpi_proto_rawDescGZIP(), []int{19}
}

func (x *UpsertResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpsertResponse) GetData() *UpsertResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_student_student_skpi_proto protoreflect.FileDescriptor

var file_student_student_skpi_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b,
	0x70, 0x69, 0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65,
	0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0x46, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x6d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x22, 0xdd, 0x0b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x69, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x69,
	0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x46, 0x0a, 0x20, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x6b, 0x74,
	0x69, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x44, 0x69, 0x6b, 0x74, 0x69, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x70, 0x69,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6b, 0x70, 0x69, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x34, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x5a,
	0x0a, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x19, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x57, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x51, 0x0a,
	0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x84, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x1c, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22,
	0x76, 0x0a, 0x1d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x1c, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x19, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x9d, 0x07, 0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x0c, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x59, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x0c,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x53, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x73, 0x12, 0x4d, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x0e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd2, 0x01, 0x0a, 0x19, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x70, 0x69,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x6b, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x06, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1f,
	0x5a, 0x1d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_student_student_skpi_proto_rawDescOnce sync.Once
	file_student_student_skpi_proto_rawDescData = file_student_student_skpi_proto_rawDesc
)

func file_student_student_skpi_proto_rawDescGZIP() []byte {
	file_student_student_skpi_proto_rawDescOnce.Do(func() {
		file_student_student_skpi_proto_rawDescData = protoimpl.X.CompressGZIP(file_student_student_skpi_proto_rawDescData)
	})
	return file_student_student_skpi_proto_rawDescData
}

var file_student_student_skpi_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_student_student_skpi_proto_goTypes = []interface{}{
	(*Meta)(nil),                                   // 0: student_student_skpi.Meta
	(*Pagination)(nil),                             // 1: student_student_skpi.Pagination
	(*GetDetailRequest)(nil),                       // 2: student_student_skpi.GetDetailRequest
	(*GetDetailResponseDataAchievement)(nil),       // 3: student_student_skpi.GetDetailResponseDataAchievement
	(*GetDetailResponseDataOrganization)(nil),      // 4: student_student_skpi.GetDetailResponseDataOrganization
	(*GetDetailResponseDataCertificate)(nil),       // 5: student_student_skpi.GetDetailResponseDataCertificate
	(*GetDetailResponseDataCharacterBuilding)(nil), // 6: student_student_skpi.GetDetailResponseDataCharacterBuilding
	(*GetDetailResponseDataInternship)(nil),        // 7: student_student_skpi.GetDetailResponseDataInternship
	(*GetDetailResponseDataLanguage)(nil),          // 8: student_student_skpi.GetDetailResponseDataLanguage
	(*GetDetailResponseData)(nil),                  // 9: student_student_skpi.GetDetailResponseData
	(*GetDetailResponse)(nil),                      // 10: student_student_skpi.GetDetailResponse
	(*UpsertRequestDataAchievement)(nil),           // 11: student_student_skpi.UpsertRequestDataAchievement
	(*UpsertRequestDataOrganization)(nil),          // 12: student_student_skpi.UpsertRequestDataOrganization
	(*UpsertRequestDataCertificate)(nil),           // 13: student_student_skpi.UpsertRequestDataCertificate
	(*UpsertRequestDataCharacterBuilding)(nil),     // 14: student_student_skpi.UpsertRequestDataCharacterBuilding
	(*UpsertRequestDataInternship)(nil),            // 15: student_student_skpi.UpsertRequestDataInternship
	(*UpsertRequestDataLanguage)(nil),              // 16: student_student_skpi.UpsertRequestDataLanguage
	(*UpsertRequest)(nil),                          // 17: student_student_skpi.UpsertRequest
	(*UpsertResponseData)(nil),                     // 18: student_student_skpi.UpsertResponseData
	(*UpsertResponse)(nil),                         // 19: student_student_skpi.UpsertResponse
}
var file_student_student_skpi_proto_depIdxs = []int32{
	3,  // 0: student_student_skpi.GetDetailResponseData.achievements:type_name -> student_student_skpi.GetDetailResponseDataAchievement
	4,  // 1: student_student_skpi.GetDetailResponseData.organizations:type_name -> student_student_skpi.GetDetailResponseDataOrganization
	5,  // 2: student_student_skpi.GetDetailResponseData.certificates:type_name -> student_student_skpi.GetDetailResponseDataCertificate
	6,  // 3: student_student_skpi.GetDetailResponseData.character_buildings:type_name -> student_student_skpi.GetDetailResponseDataCharacterBuilding
	7,  // 4: student_student_skpi.GetDetailResponseData.internships:type_name -> student_student_skpi.GetDetailResponseDataInternship
	8,  // 5: student_student_skpi.GetDetailResponseData.languages:type_name -> student_student_skpi.GetDetailResponseDataLanguage
	0,  // 6: student_student_skpi.GetDetailResponse.meta:type_name -> student_student_skpi.Meta
	9,  // 7: student_student_skpi.GetDetailResponse.data:type_name -> student_student_skpi.GetDetailResponseData
	11, // 8: student_student_skpi.UpsertRequest.achievements:type_name -> student_student_skpi.UpsertRequestDataAchievement
	12, // 9: student_student_skpi.UpsertRequest.organizations:type_name -> student_student_skpi.UpsertRequestDataOrganization
	13, // 10: student_student_skpi.UpsertRequest.certificates:type_name -> student_student_skpi.UpsertRequestDataCertificate
	14, // 11: student_student_skpi.UpsertRequest.character_buildings:type_name -> student_student_skpi.UpsertRequestDataCharacterBuilding
	15, // 12: student_student_skpi.UpsertRequest.internships:type_name -> student_student_skpi.UpsertRequestDataInternship
	16, // 13: student_student_skpi.UpsertRequest.languages:type_name -> student_student_skpi.UpsertRequestDataLanguage
	0,  // 14: student_student_skpi.UpsertResponse.meta:type_name -> student_student_skpi.Meta
	18, // 15: student_student_skpi.UpsertResponse.data:type_name -> student_student_skpi.UpsertResponseData
	2,  // 16: student_student_skpi.StudentStudentSkpiHandler.GetDetail:input_type -> student_student_skpi.GetDetailRequest
	17, // 17: student_student_skpi.StudentStudentSkpiHandler.Upsert:input_type -> student_student_skpi.UpsertRequest
	10, // 18: student_student_skpi.StudentStudentSkpiHandler.GetDetail:output_type -> student_student_skpi.GetDetailResponse
	19, // 19: student_student_skpi.StudentStudentSkpiHandler.Upsert:output_type -> student_student_skpi.UpsertResponse
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_student_student_skpi_proto_init() }
func file_student_student_skpi_proto_init() {
	if File_student_student_skpi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_student_student_skpi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataAchievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataCharacterBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataInternship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequestDataAchievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequestDataOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequestDataCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequestDataCharacterBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequestDataInternship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequestDataLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_student_student_skpi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_student_student_skpi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_student_student_skpi_proto_goTypes,
		DependencyIndexes: file_student_student_skpi_proto_depIdxs,
		MessageInfos:      file_student_student_skpi_proto_msgTypes,
	}.Build()
	File_student_student_skpi_proto = out.File
	file_student_student_skpi_proto_rawDesc = nil
	file_student_student_skpi_proto_goTypes = nil
	file_student_student_skpi_proto_depIdxs = nil
}
