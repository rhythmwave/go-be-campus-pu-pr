// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: lecturer/class.proto

package class

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Status  uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Meta) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Meta) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Prev         uint32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev"`
	Next         uint32 `protobuf:"varint,4,opt,name=next,proto3" json:"next"`
	TotalPages   uint32 `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	TotalRecords uint32 `protobuf:"varint,6,opt,name=total_records,json=totalRecords,proto3" json:"total_records"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPrev() uint32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *Pagination) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetActiveSemesterClassListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramId string `protobuf:"bytes,1,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
}

func (x *GetActiveSemesterClassListRequest) Reset() {
	*x = GetActiveSemesterClassListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSemesterClassListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSemesterClassListRequest) ProtoMessage() {}

func (x *GetActiveSemesterClassListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSemesterClassListRequest.ProtoReflect.Descriptor instead.
func (*GetActiveSemesterClassListRequest) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{2}
}

func (x *GetActiveSemesterClassListRequest) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

type GetActiveSemesterClassListResponseDataClassLecturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	FrontTitle string `protobuf:"bytes,2,opt,name=front_title,json=frontTitle,proto3" json:"front_title"`
	BackDegree string `protobuf:"bytes,3,opt,name=back_degree,json=backDegree,proto3" json:"back_degree"`
}

func (x *GetActiveSemesterClassListResponseDataClassLecturer) Reset() {
	*x = GetActiveSemesterClassListResponseDataClassLecturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSemesterClassListResponseDataClassLecturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSemesterClassListResponseDataClassLecturer) ProtoMessage() {}

func (x *GetActiveSemesterClassListResponseDataClassLecturer) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSemesterClassListResponseDataClassLecturer.ProtoReflect.Descriptor instead.
func (*GetActiveSemesterClassListResponseDataClassLecturer) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{3}
}

func (x *GetActiveSemesterClassListResponseDataClassLecturer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetActiveSemesterClassListResponseDataClassLecturer) GetFrontTitle() string {
	if x != nil {
		return x.FrontTitle
	}
	return ""
}

func (x *GetActiveSemesterClassListResponseDataClassLecturer) GetBackDegree() string {
	if x != nil {
		return x.BackDegree
	}
	return ""
}

type GetActiveSemesterClassListResponseDataClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          string                                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                        string                                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	SubjectCode                 string                                                 `protobuf:"bytes,3,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName                 string                                                 `protobuf:"bytes,4,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	SubjectIsMandatory          bool                                                   `protobuf:"varint,5,opt,name=subject_is_mandatory,json=subjectIsMandatory,proto3" json:"subject_is_mandatory"`
	SubjectTheoryCredit         uint32                                                 `protobuf:"varint,6,opt,name=subject_theory_credit,json=subjectTheoryCredit,proto3" json:"subject_theory_credit"`
	SubjectPracticumCredit      uint32                                                 `protobuf:"varint,7,opt,name=subject_practicum_credit,json=subjectPracticumCredit,proto3" json:"subject_practicum_credit"`
	SubjectFieldPracticumCredit uint32                                                 `protobuf:"varint,8,opt,name=subject_field_practicum_credit,json=subjectFieldPracticumCredit,proto3" json:"subject_field_practicum_credit"`
	MaximumParticipant          uint32                                                 `protobuf:"varint,9,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	Lecturers                   []*GetActiveSemesterClassListResponseDataClassLecturer `protobuf:"bytes,10,rep,name=lecturers,proto3" json:"lecturers"`
}

func (x *GetActiveSemesterClassListResponseDataClass) Reset() {
	*x = GetActiveSemesterClassListResponseDataClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSemesterClassListResponseDataClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSemesterClassListResponseDataClass) ProtoMessage() {}

func (x *GetActiveSemesterClassListResponseDataClass) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSemesterClassListResponseDataClass.ProtoReflect.Descriptor instead.
func (*GetActiveSemesterClassListResponseDataClass) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{4}
}

func (x *GetActiveSemesterClassListResponseDataClass) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetActiveSemesterClassListResponseDataClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetActiveSemesterClassListResponseDataClass) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetActiveSemesterClassListResponseDataClass) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetActiveSemesterClassListResponseDataClass) GetSubjectIsMandatory() bool {
	if x != nil {
		return x.SubjectIsMandatory
	}
	return false
}

func (x *GetActiveSemesterClassListResponseDataClass) GetSubjectTheoryCredit() uint32 {
	if x != nil {
		return x.SubjectTheoryCredit
	}
	return 0
}

func (x *GetActiveSemesterClassListResponseDataClass) GetSubjectPracticumCredit() uint32 {
	if x != nil {
		return x.SubjectPracticumCredit
	}
	return 0
}

func (x *GetActiveSemesterClassListResponseDataClass) GetSubjectFieldPracticumCredit() uint32 {
	if x != nil {
		return x.SubjectFieldPracticumCredit
	}
	return 0
}

func (x *GetActiveSemesterClassListResponseDataClass) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *GetActiveSemesterClassListResponseDataClass) GetLecturers() []*GetActiveSemesterClassListResponseDataClassLecturer {
	if x != nil {
		return x.Lecturers
	}
	return nil
}

type GetActiveSemesterClassListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemesterPackage uint32                                         `protobuf:"varint,1,opt,name=semester_package,json=semesterPackage,proto3" json:"semester_package"`
	Classes         []*GetActiveSemesterClassListResponseDataClass `protobuf:"bytes,2,rep,name=classes,proto3" json:"classes"`
}

func (x *GetActiveSemesterClassListResponseData) Reset() {
	*x = GetActiveSemesterClassListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSemesterClassListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSemesterClassListResponseData) ProtoMessage() {}

func (x *GetActiveSemesterClassListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSemesterClassListResponseData.ProtoReflect.Descriptor instead.
func (*GetActiveSemesterClassListResponseData) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{5}
}

func (x *GetActiveSemesterClassListResponseData) GetSemesterPackage() uint32 {
	if x != nil {
		return x.SemesterPackage
	}
	return 0
}

func (x *GetActiveSemesterClassListResponseData) GetClasses() []*GetActiveSemesterClassListResponseDataClass {
	if x != nil {
		return x.Classes
	}
	return nil
}

type GetActiveSemesterClassListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                                     `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*GetActiveSemesterClassListResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *GetActiveSemesterClassListResponse) Reset() {
	*x = GetActiveSemesterClassListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveSemesterClassListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveSemesterClassListResponse) ProtoMessage() {}

func (x *GetActiveSemesterClassListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveSemesterClassListResponse.ProtoReflect.Descriptor instead.
func (*GetActiveSemesterClassListResponse) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{6}
}

func (x *GetActiveSemesterClassListResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetActiveSemesterClassListResponse) GetData() []*GetActiveSemesterClassListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAssignedClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemesterId string `protobuf:"bytes,1,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
}

func (x *GetAssignedClassRequest) Reset() {
	*x = GetAssignedClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedClassRequest) ProtoMessage() {}

func (x *GetAssignedClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedClassRequest.ProtoReflect.Descriptor instead.
func (*GetAssignedClassRequest) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{7}
}

func (x *GetAssignedClassRequest) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

type GetAssignedClassResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                 string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	SubjectCode          string `protobuf:"bytes,3,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName          string `protobuf:"bytes,4,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	TheoryCredit         uint32 `protobuf:"varint,5,opt,name=theory_credit,json=theoryCredit,proto3" json:"theory_credit"`
	PracticumCredit      uint32 `protobuf:"varint,6,opt,name=practicum_credit,json=practicumCredit,proto3" json:"practicum_credit"`
	FieldPracticumCredit uint32 `protobuf:"varint,7,opt,name=field_practicum_credit,json=fieldPracticumCredit,proto3" json:"field_practicum_credit"`
	IsGradingResponsible bool   `protobuf:"varint,8,opt,name=is_grading_responsible,json=isGradingResponsible,proto3" json:"is_grading_responsible"`
	StudyProgramId       string `protobuf:"bytes,9,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName     string `protobuf:"bytes,10,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
}

func (x *GetAssignedClassResponseData) Reset() {
	*x = GetAssignedClassResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedClassResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedClassResponseData) ProtoMessage() {}

func (x *GetAssignedClassResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedClassResponseData.ProtoReflect.Descriptor instead.
func (*GetAssignedClassResponseData) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{8}
}

func (x *GetAssignedClassResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAssignedClassResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAssignedClassResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetAssignedClassResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetAssignedClassResponseData) GetTheoryCredit() uint32 {
	if x != nil {
		return x.TheoryCredit
	}
	return 0
}

func (x *GetAssignedClassResponseData) GetPracticumCredit() uint32 {
	if x != nil {
		return x.PracticumCredit
	}
	return 0
}

func (x *GetAssignedClassResponseData) GetFieldPracticumCredit() uint32 {
	if x != nil {
		return x.FieldPracticumCredit
	}
	return 0
}

func (x *GetAssignedClassResponseData) GetIsGradingResponsible() bool {
	if x != nil {
		return x.IsGradingResponsible
	}
	return false
}

func (x *GetAssignedClassResponseData) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetAssignedClassResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

type GetAssignedClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                           `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data []*GetAssignedClassResponseData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *GetAssignedClassResponse) Reset() {
	*x = GetAssignedClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedClassResponse) ProtoMessage() {}

func (x *GetAssignedClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedClassResponse.ProtoReflect.Descriptor instead.
func (*GetAssignedClassResponse) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{9}
}

func (x *GetAssignedClassResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetAssignedClassResponse) GetData() []*GetAssignedClassResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAssignedScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId string `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id"`
}

func (x *GetAssignedScheduleRequest) Reset() {
	*x = GetAssignedScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedScheduleRequest) ProtoMessage() {}

func (x *GetAssignedScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetAssignedScheduleRequest) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{10}
}

func (x *GetAssignedScheduleRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type GetAssignedScheduleResponseDataSingleDaySchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      string `protobuf:"bytes,1,opt,name=date,proto3" json:"date"`
	StartTime uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	RoomName  string `protobuf:"bytes,4,opt,name=room_name,json=roomName,proto3" json:"room_name"`
}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) Reset() {
	*x = GetAssignedScheduleResponseDataSingleDaySchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedScheduleResponseDataSingleDaySchedule) ProtoMessage() {}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedScheduleResponseDataSingleDaySchedule.ProtoReflect.Descriptor instead.
func (*GetAssignedScheduleResponseDataSingleDaySchedule) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{11}
}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetAssignedScheduleResponseDataSingleDaySchedule) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

type GetAssignedScheduleResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyProgramName                string                                              `protobuf:"bytes,1,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	SubjectCode                     string                                              `protobuf:"bytes,2,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName                     string                                              `protobuf:"bytes,3,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	SemesterPackage                 uint32                                              `protobuf:"varint,4,opt,name=semester_package,json=semesterPackage,proto3" json:"semester_package"`
	TheoryCredit                    uint32                                              `protobuf:"varint,5,opt,name=theory_credit,json=theoryCredit,proto3" json:"theory_credit"`
	PracticumCredit                 uint32                                              `protobuf:"varint,6,opt,name=practicum_credit,json=practicumCredit,proto3" json:"practicum_credit"`
	FieldPracticumCredit            uint32                                              `protobuf:"varint,7,opt,name=field_practicum_credit,json=fieldPracticumCredit,proto3" json:"field_practicum_credit"`
	SubjectMinimumPassingGradePoint float64                                             `protobuf:"fixed64,8,opt,name=subject_minimum_passing_grade_point,json=subjectMinimumPassingGradePoint,proto3" json:"subject_minimum_passing_grade_point"`
	SubjectIsMandatory              bool                                                `protobuf:"varint,9,opt,name=subject_is_mandatory,json=subjectIsMandatory,proto3" json:"subject_is_mandatory"`
	MaximumParticipant              uint32                                              `protobuf:"varint,10,opt,name=maximum_participant,json=maximumParticipant,proto3" json:"maximum_participant"`
	PrerequisiteSubjects            []string                                            `protobuf:"bytes,11,rep,name=prerequisite_subjects,json=prerequisiteSubjects,proto3" json:"prerequisite_subjects"`
	SingleDaySchedules              []*GetAssignedScheduleResponseDataSingleDaySchedule `protobuf:"bytes,12,rep,name=single_day_schedules,json=singleDaySchedules,proto3" json:"single_day_schedules"`
	MidtermExamDate                 string                                              `protobuf:"bytes,13,opt,name=midterm_exam_date,json=midtermExamDate,proto3" json:"midterm_exam_date"`
	MidtermStartTime                uint32                                              `protobuf:"varint,14,opt,name=midterm_start_time,json=midtermStartTime,proto3" json:"midterm_start_time"`
	MidtermEndTime                  uint32                                              `protobuf:"varint,15,opt,name=midterm_end_time,json=midtermEndTime,proto3" json:"midterm_end_time"`
	MidtermRoomName                 string                                              `protobuf:"bytes,16,opt,name=midterm_room_name,json=midtermRoomName,proto3" json:"midterm_room_name"`
	EndtermExamDate                 string                                              `protobuf:"bytes,17,opt,name=endterm_exam_date,json=endtermExamDate,proto3" json:"endterm_exam_date"`
	EndtermStartTime                uint32                                              `protobuf:"varint,18,opt,name=endterm_start_time,json=endtermStartTime,proto3" json:"endterm_start_time"`
	EndtermEndTime                  uint32                                              `protobuf:"varint,19,opt,name=endterm_end_time,json=endtermEndTime,proto3" json:"endterm_end_time"`
	EndtermRoomName                 string                                              `protobuf:"bytes,20,opt,name=endterm_room_name,json=endtermRoomName,proto3" json:"endterm_room_name"`
}

func (x *GetAssignedScheduleResponseData) Reset() {
	*x = GetAssignedScheduleResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedScheduleResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedScheduleResponseData) ProtoMessage() {}

func (x *GetAssignedScheduleResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedScheduleResponseData.ProtoReflect.Descriptor instead.
func (*GetAssignedScheduleResponseData) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{12}
}

func (x *GetAssignedScheduleResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetAssignedScheduleResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetAssignedScheduleResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetAssignedScheduleResponseData) GetSemesterPackage() uint32 {
	if x != nil {
		return x.SemesterPackage
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetTheoryCredit() uint32 {
	if x != nil {
		return x.TheoryCredit
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetPracticumCredit() uint32 {
	if x != nil {
		return x.PracticumCredit
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetFieldPracticumCredit() uint32 {
	if x != nil {
		return x.FieldPracticumCredit
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetSubjectMinimumPassingGradePoint() float64 {
	if x != nil {
		return x.SubjectMinimumPassingGradePoint
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetSubjectIsMandatory() bool {
	if x != nil {
		return x.SubjectIsMandatory
	}
	return false
}

func (x *GetAssignedScheduleResponseData) GetMaximumParticipant() uint32 {
	if x != nil {
		return x.MaximumParticipant
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetPrerequisiteSubjects() []string {
	if x != nil {
		return x.PrerequisiteSubjects
	}
	return nil
}

func (x *GetAssignedScheduleResponseData) GetSingleDaySchedules() []*GetAssignedScheduleResponseDataSingleDaySchedule {
	if x != nil {
		return x.SingleDaySchedules
	}
	return nil
}

func (x *GetAssignedScheduleResponseData) GetMidtermExamDate() string {
	if x != nil {
		return x.MidtermExamDate
	}
	return ""
}

func (x *GetAssignedScheduleResponseData) GetMidtermStartTime() uint32 {
	if x != nil {
		return x.MidtermStartTime
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetMidtermEndTime() uint32 {
	if x != nil {
		return x.MidtermEndTime
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetMidtermRoomName() string {
	if x != nil {
		return x.MidtermRoomName
	}
	return ""
}

func (x *GetAssignedScheduleResponseData) GetEndtermExamDate() string {
	if x != nil {
		return x.EndtermExamDate
	}
	return ""
}

func (x *GetAssignedScheduleResponseData) GetEndtermStartTime() uint32 {
	if x != nil {
		return x.EndtermStartTime
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetEndtermEndTime() uint32 {
	if x != nil {
		return x.EndtermEndTime
	}
	return 0
}

func (x *GetAssignedScheduleResponseData) GetEndtermRoomName() string {
	if x != nil {
		return x.EndtermRoomName
	}
	return ""
}

type GetAssignedScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                            `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetAssignedScheduleResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetAssignedScheduleResponse) Reset() {
	*x = GetAssignedScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedScheduleResponse) ProtoMessage() {}

func (x *GetAssignedScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetAssignedScheduleResponse) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{13}
}

func (x *GetAssignedScheduleResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetAssignedScheduleResponse) GetData() *GetAssignedScheduleResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId string `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id"`
}

func (x *GetDetailRequest) Reset() {
	*x = GetDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailRequest) ProtoMessage() {}

func (x *GetDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDetailRequest) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{14}
}

func (x *GetDetailRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type GetDetailResponseDataGradeComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Percentage float64 `protobuf:"fixed64,3,opt,name=percentage,proto3" json:"percentage"`
}

func (x *GetDetailResponseDataGradeComponent) Reset() {
	*x = GetDetailResponseDataGradeComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataGradeComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataGradeComponent) ProtoMessage() {}

func (x *GetDetailResponseDataGradeComponent) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataGradeComponent.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataGradeComponent) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{15}
}

func (x *GetDetailResponseDataGradeComponent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataGradeComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataGradeComponent) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type GetDetailResponseDataStudentGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassGradeComponentId   string  `protobuf:"bytes,1,opt,name=class_grade_component_id,json=classGradeComponentId,proto3" json:"class_grade_component_id"`
	ClassGradeComponentName string  `protobuf:"bytes,2,opt,name=class_grade_component_name,json=classGradeComponentName,proto3" json:"class_grade_component_name"`
	InitialGrade            float64 `protobuf:"fixed64,3,opt,name=initial_grade,json=initialGrade,proto3" json:"initial_grade"`
	FinalGrade              float64 `protobuf:"fixed64,4,opt,name=final_grade,json=finalGrade,proto3" json:"final_grade"`
}

func (x *GetDetailResponseDataStudentGrade) Reset() {
	*x = GetDetailResponseDataStudentGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataStudentGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataStudentGrade) ProtoMessage() {}

func (x *GetDetailResponseDataStudentGrade) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataStudentGrade.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataStudentGrade) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{16}
}

func (x *GetDetailResponseDataStudentGrade) GetClassGradeComponentId() string {
	if x != nil {
		return x.ClassGradeComponentId
	}
	return ""
}

func (x *GetDetailResponseDataStudentGrade) GetClassGradeComponentName() string {
	if x != nil {
		return x.ClassGradeComponentName
	}
	return ""
}

func (x *GetDetailResponseDataStudentGrade) GetInitialGrade() float64 {
	if x != nil {
		return x.InitialGrade
	}
	return 0
}

func (x *GetDetailResponseDataStudentGrade) GetFinalGrade() float64 {
	if x != nil {
		return x.FinalGrade
	}
	return 0
}

type GetDetailResponseDataStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	NimNumber  int64                                `protobuf:"varint,2,opt,name=nim_number,json=nimNumber,proto3" json:"nim_number"`
	Name       string                               `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	GradePoint float64                              `protobuf:"fixed64,4,opt,name=grade_point,json=gradePoint,proto3" json:"grade_point"`
	GradeCode  string                               `protobuf:"bytes,5,opt,name=grade_code,json=gradeCode,proto3" json:"grade_code"`
	Grades     []*GetDetailResponseDataStudentGrade `protobuf:"bytes,6,rep,name=grades,proto3" json:"grades"`
}

func (x *GetDetailResponseDataStudent) Reset() {
	*x = GetDetailResponseDataStudent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataStudent) ProtoMessage() {}

func (x *GetDetailResponseDataStudent) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataStudent.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataStudent) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{17}
}

func (x *GetDetailResponseDataStudent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataStudent) GetNimNumber() int64 {
	if x != nil {
		return x.NimNumber
	}
	return 0
}

func (x *GetDetailResponseDataStudent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseDataStudent) GetGradePoint() float64 {
	if x != nil {
		return x.GradePoint
	}
	return 0
}

func (x *GetDetailResponseDataStudent) GetGradeCode() string {
	if x != nil {
		return x.GradeCode
	}
	return ""
}

func (x *GetDetailResponseDataStudent) GetGrades() []*GetDetailResponseDataStudentGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

type GetDetailResponseDataGradeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	StudyLevelId        string  `protobuf:"bytes,2,opt,name=study_level_id,json=studyLevelId,proto3" json:"study_level_id"`
	StudyLevelShortName string  `protobuf:"bytes,3,opt,name=study_level_short_name,json=studyLevelShortName,proto3" json:"study_level_short_name"`
	Code                string  `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`
	GradePoint          float64 `protobuf:"fixed64,5,opt,name=grade_point,json=gradePoint,proto3" json:"grade_point"`
	MinimumGrade        float64 `protobuf:"fixed64,6,opt,name=minimum_grade,json=minimumGrade,proto3" json:"minimum_grade"`
	MaximumGrade        float64 `protobuf:"fixed64,7,opt,name=maximum_grade,json=maximumGrade,proto3" json:"maximum_grade"`
	GradeCategory       string  `protobuf:"bytes,8,opt,name=grade_category,json=gradeCategory,proto3" json:"grade_category"`
	GradePointCategory  float64 `protobuf:"fixed64,9,opt,name=grade_point_category,json=gradePointCategory,proto3" json:"grade_point_category"`
	Label               string  `protobuf:"bytes,10,opt,name=label,proto3" json:"label"`
	EnglishLabel        string  `protobuf:"bytes,11,opt,name=english_label,json=englishLabel,proto3" json:"english_label"`
	StartDate           string  `protobuf:"bytes,12,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate             string  `protobuf:"bytes,13,opt,name=end_date,json=endDate,proto3" json:"end_date"`
}

func (x *GetDetailResponseDataGradeType) Reset() {
	*x = GetDetailResponseDataGradeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseDataGradeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseDataGradeType) ProtoMessage() {}

func (x *GetDetailResponseDataGradeType) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseDataGradeType.ProtoReflect.Descriptor instead.
func (*GetDetailResponseDataGradeType) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{18}
}

func (x *GetDetailResponseDataGradeType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetStudyLevelId() string {
	if x != nil {
		return x.StudyLevelId
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetStudyLevelShortName() string {
	if x != nil {
		return x.StudyLevelShortName
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetGradePoint() float64 {
	if x != nil {
		return x.GradePoint
	}
	return 0
}

func (x *GetDetailResponseDataGradeType) GetMinimumGrade() float64 {
	if x != nil {
		return x.MinimumGrade
	}
	return 0
}

func (x *GetDetailResponseDataGradeType) GetMaximumGrade() float64 {
	if x != nil {
		return x.MaximumGrade
	}
	return 0
}

func (x *GetDetailResponseDataGradeType) GetGradeCategory() string {
	if x != nil {
		return x.GradeCategory
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetGradePointCategory() float64 {
	if x != nil {
		return x.GradePointCategory
	}
	return 0
}

func (x *GetDetailResponseDataGradeType) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetEnglishLabel() string {
	if x != nil {
		return x.EnglishLabel
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetDetailResponseDataGradeType) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetDetailResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                  string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	StudyProgramId        string                                 `protobuf:"bytes,3,opt,name=study_program_id,json=studyProgramId,proto3" json:"study_program_id"`
	StudyProgramName      string                                 `protobuf:"bytes,4,opt,name=study_program_name,json=studyProgramName,proto3" json:"study_program_name"`
	DiktiStudyProgramType string                                 `protobuf:"bytes,5,opt,name=dikti_study_program_type,json=diktiStudyProgramType,proto3" json:"dikti_study_program_type"`
	StudyLevelShortName   string                                 `protobuf:"bytes,6,opt,name=study_level_short_name,json=studyLevelShortName,proto3" json:"study_level_short_name"`
	SemesterId            string                                 `protobuf:"bytes,7,opt,name=semester_id,json=semesterId,proto3" json:"semester_id"`
	SemesterSchoolYear    string                                 `protobuf:"bytes,8,opt,name=semester_school_year,json=semesterSchoolYear,proto3" json:"semester_school_year"`
	SemesterType          string                                 `protobuf:"bytes,9,opt,name=semester_type,json=semesterType,proto3" json:"semester_type"`
	GradingStartDate      string                                 `protobuf:"bytes,10,opt,name=grading_start_date,json=gradingStartDate,proto3" json:"grading_start_date"`
	GradingEndDate        string                                 `protobuf:"bytes,11,opt,name=grading_end_date,json=gradingEndDate,proto3" json:"grading_end_date"`
	CurriculumId          string                                 `protobuf:"bytes,12,opt,name=curriculum_id,json=curriculumId,proto3" json:"curriculum_id"`
	CurriculumName        string                                 `protobuf:"bytes,13,opt,name=curriculum_name,json=curriculumName,proto3" json:"curriculum_name"`
	CurriculumYear        string                                 `protobuf:"bytes,14,opt,name=curriculum_year,json=curriculumYear,proto3" json:"curriculum_year"`
	SubjectId             string                                 `protobuf:"bytes,15,opt,name=subject_id,json=subjectId,proto3" json:"subject_id"`
	SubjectCode           string                                 `protobuf:"bytes,16,opt,name=subject_code,json=subjectCode,proto3" json:"subject_code"`
	SubjectName           string                                 `protobuf:"bytes,17,opt,name=subject_name,json=subjectName,proto3" json:"subject_name"`
	IsGradingResponsible  bool                                   `protobuf:"varint,18,opt,name=is_grading_responsible,json=isGradingResponsible,proto3" json:"is_grading_responsible"`
	GradeComponents       []*GetDetailResponseDataGradeComponent `protobuf:"bytes,19,rep,name=grade_components,json=gradeComponents,proto3" json:"grade_components"`
	Students              []*GetDetailResponseDataStudent        `protobuf:"bytes,20,rep,name=students,proto3" json:"students"`
	GradeTypes            []*GetDetailResponseDataGradeType      `protobuf:"bytes,21,rep,name=grade_types,json=gradeTypes,proto3" json:"grade_types"`
}

func (x *GetDetailResponseData) Reset() {
	*x = GetDetailResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponseData) ProtoMessage() {}

func (x *GetDetailResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponseData.ProtoReflect.Descriptor instead.
func (*GetDetailResponseData) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{19}
}

func (x *GetDetailResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDetailResponseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyProgramId() string {
	if x != nil {
		return x.StudyProgramId
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyProgramName() string {
	if x != nil {
		return x.StudyProgramName
	}
	return ""
}

func (x *GetDetailResponseData) GetDiktiStudyProgramType() string {
	if x != nil {
		return x.DiktiStudyProgramType
	}
	return ""
}

func (x *GetDetailResponseData) GetStudyLevelShortName() string {
	if x != nil {
		return x.StudyLevelShortName
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterId() string {
	if x != nil {
		return x.SemesterId
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterSchoolYear() string {
	if x != nil {
		return x.SemesterSchoolYear
	}
	return ""
}

func (x *GetDetailResponseData) GetSemesterType() string {
	if x != nil {
		return x.SemesterType
	}
	return ""
}

func (x *GetDetailResponseData) GetGradingStartDate() string {
	if x != nil {
		return x.GradingStartDate
	}
	return ""
}

func (x *GetDetailResponseData) GetGradingEndDate() string {
	if x != nil {
		return x.GradingEndDate
	}
	return ""
}

func (x *GetDetailResponseData) GetCurriculumId() string {
	if x != nil {
		return x.CurriculumId
	}
	return ""
}

func (x *GetDetailResponseData) GetCurriculumName() string {
	if x != nil {
		return x.CurriculumName
	}
	return ""
}

func (x *GetDetailResponseData) GetCurriculumYear() string {
	if x != nil {
		return x.CurriculumYear
	}
	return ""
}

func (x *GetDetailResponseData) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetDetailResponseData) GetSubjectCode() string {
	if x != nil {
		return x.SubjectCode
	}
	return ""
}

func (x *GetDetailResponseData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *GetDetailResponseData) GetIsGradingResponsible() bool {
	if x != nil {
		return x.IsGradingResponsible
	}
	return false
}

func (x *GetDetailResponseData) GetGradeComponents() []*GetDetailResponseDataGradeComponent {
	if x != nil {
		return x.GradeComponents
	}
	return nil
}

func (x *GetDetailResponseData) GetStudents() []*GetDetailResponseDataStudent {
	if x != nil {
		return x.Students
	}
	return nil
}

func (x *GetDetailResponseData) GetGradeTypes() []*GetDetailResponseDataGradeType {
	if x != nil {
		return x.GradeTypes
	}
	return nil
}

type GetDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *GetDetailResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *GetDetailResponse) Reset() {
	*x = GetDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailResponse) ProtoMessage() {}

func (x *GetDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDetailResponse) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{20}
}

func (x *GetDetailResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetDetailResponse) GetData() *GetDetailResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BulkGradeStudentClassRequestStudentGrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassGradeComponentId string  `protobuf:"bytes,1,opt,name=class_grade_component_id,json=classGradeComponentId,proto3" json:"class_grade_component_id"`
	InitialGrade          float64 `protobuf:"fixed64,2,opt,name=initial_grade,json=initialGrade,proto3" json:"initial_grade"`
}

func (x *BulkGradeStudentClassRequestStudentGrade) Reset() {
	*x = BulkGradeStudentClassRequestStudentGrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkGradeStudentClassRequestStudentGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkGradeStudentClassRequestStudentGrade) ProtoMessage() {}

func (x *BulkGradeStudentClassRequestStudentGrade) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkGradeStudentClassRequestStudentGrade.ProtoReflect.Descriptor instead.
func (*BulkGradeStudentClassRequestStudentGrade) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{21}
}

func (x *BulkGradeStudentClassRequestStudentGrade) GetClassGradeComponentId() string {
	if x != nil {
		return x.ClassGradeComponentId
	}
	return ""
}

func (x *BulkGradeStudentClassRequestStudentGrade) GetInitialGrade() float64 {
	if x != nil {
		return x.InitialGrade
	}
	return 0
}

type BulkGradeStudentClassRequestStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string                                      `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id"`
	Grades    []*BulkGradeStudentClassRequestStudentGrade `protobuf:"bytes,2,rep,name=grades,proto3" json:"grades"`
}

func (x *BulkGradeStudentClassRequestStudent) Reset() {
	*x = BulkGradeStudentClassRequestStudent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkGradeStudentClassRequestStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkGradeStudentClassRequestStudent) ProtoMessage() {}

func (x *BulkGradeStudentClassRequestStudent) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkGradeStudentClassRequestStudent.ProtoReflect.Descriptor instead.
func (*BulkGradeStudentClassRequestStudent) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{22}
}

func (x *BulkGradeStudentClassRequestStudent) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *BulkGradeStudentClassRequestStudent) GetGrades() []*BulkGradeStudentClassRequestStudentGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

type BulkGradeStudentClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId  string                                 `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id"`
	Students []*BulkGradeStudentClassRequestStudent `protobuf:"bytes,2,rep,name=students,proto3" json:"students"`
}

func (x *BulkGradeStudentClassRequest) Reset() {
	*x = BulkGradeStudentClassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkGradeStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkGradeStudentClassRequest) ProtoMessage() {}

func (x *BulkGradeStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkGradeStudentClassRequest.ProtoReflect.Descriptor instead.
func (*BulkGradeStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{23}
}

func (x *BulkGradeStudentClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *BulkGradeStudentClassRequest) GetStudents() []*BulkGradeStudentClassRequestStudent {
	if x != nil {
		return x.Students
	}
	return nil
}

type BulkGradeStudentClassResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BulkGradeStudentClassResponseData) Reset() {
	*x = BulkGradeStudentClassResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkGradeStudentClassResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkGradeStudentClassResponseData) ProtoMessage() {}

func (x *BulkGradeStudentClassResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkGradeStudentClassResponseData.ProtoReflect.Descriptor instead.
func (*BulkGradeStudentClassResponseData) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{24}
}

type BulkGradeStudentClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *Meta                              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
	Data *BulkGradeStudentClassResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *BulkGradeStudentClassResponse) Reset() {
	*x = BulkGradeStudentClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_class_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkGradeStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkGradeStudentClassResponse) ProtoMessage() {}

func (x *BulkGradeStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_class_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkGradeStudentClassResponse.ProtoReflect.Descriptor instead.
func (*BulkGradeStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_lecturer_class_proto_rawDescGZIP(), []int{25}
}

func (x *BulkGradeStudentClassResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BulkGradeStudentClassResponse) GetData() *BulkGradeStudentClassResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_lecturer_class_proto protoreflect.FileDescriptor

var file_lecturer_class_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x72, 0x65,
	0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x33, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0x90, 0x04, 0x0a, 0x2b, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x73,
	0x5f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x68, 0x65, 0x6f,
	0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75,
	0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x09, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x52, 0x09, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x55, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x9c, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x16,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x30, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x80, 0x08, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x65, 0x6f, 0x72, 0x79, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x68,
	0x65, 0x6f, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x75, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x4c, 0x0a, 0x23, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75,
	0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x15,
	0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x72, 0x0a, 0x14, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x12, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d,
	0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x64, 0x74, 0x65,
	0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6f,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65,
	0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x74, 0x65,
	0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x74, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6f,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xdf,
	0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a,
	0x1a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x22, 0xec, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x69, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22,
	0xd8, 0x03, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x12, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xde, 0x07, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x6b, 0x74, 0x69, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x64, 0x69, 0x6b, 0x74, 0x69, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75, 0x6d, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x75,
	0x6d, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x47, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x5e, 0x0a, 0x10, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x0f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x48, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x28, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x22, 0x96, 0x01, 0x0a, 0x23, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x42, 0x75,
	0x6c, 0x6b, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a, 0x1d,
	0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xc5,
	0x04, 0x0a, 0x14, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x27, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x2a, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76,
	0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2c, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x2f, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lecturer_class_proto_rawDescOnce sync.Once
	file_lecturer_class_proto_rawDescData = file_lecturer_class_proto_rawDesc
)

func file_lecturer_class_proto_rawDescGZIP() []byte {
	file_lecturer_class_proto_rawDescOnce.Do(func() {
		file_lecturer_class_proto_rawDescData = protoimpl.X.CompressGZIP(file_lecturer_class_proto_rawDescData)
	})
	return file_lecturer_class_proto_rawDescData
}

var file_lecturer_class_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_lecturer_class_proto_goTypes = []interface{}{
	(*Meta)(nil),       // 0: lecturer_class.Meta
	(*Pagination)(nil), // 1: lecturer_class.Pagination
	(*GetActiveSemesterClassListRequest)(nil),                   // 2: lecturer_class.GetActiveSemesterClassListRequest
	(*GetActiveSemesterClassListResponseDataClassLecturer)(nil), // 3: lecturer_class.GetActiveSemesterClassListResponseDataClassLecturer
	(*GetActiveSemesterClassListResponseDataClass)(nil),         // 4: lecturer_class.GetActiveSemesterClassListResponseDataClass
	(*GetActiveSemesterClassListResponseData)(nil),              // 5: lecturer_class.GetActiveSemesterClassListResponseData
	(*GetActiveSemesterClassListResponse)(nil),                  // 6: lecturer_class.GetActiveSemesterClassListResponse
	(*GetAssignedClassRequest)(nil),                             // 7: lecturer_class.GetAssignedClassRequest
	(*GetAssignedClassResponseData)(nil),                        // 8: lecturer_class.GetAssignedClassResponseData
	(*GetAssignedClassResponse)(nil),                            // 9: lecturer_class.GetAssignedClassResponse
	(*GetAssignedScheduleRequest)(nil),                          // 10: lecturer_class.GetAssignedScheduleRequest
	(*GetAssignedScheduleResponseDataSingleDaySchedule)(nil),    // 11: lecturer_class.GetAssignedScheduleResponseDataSingleDaySchedule
	(*GetAssignedScheduleResponseData)(nil),                     // 12: lecturer_class.GetAssignedScheduleResponseData
	(*GetAssignedScheduleResponse)(nil),                         // 13: lecturer_class.GetAssignedScheduleResponse
	(*GetDetailRequest)(nil),                                    // 14: lecturer_class.GetDetailRequest
	(*GetDetailResponseDataGradeComponent)(nil),                 // 15: lecturer_class.GetDetailResponseDataGradeComponent
	(*GetDetailResponseDataStudentGrade)(nil),                   // 16: lecturer_class.GetDetailResponseDataStudentGrade
	(*GetDetailResponseDataStudent)(nil),                        // 17: lecturer_class.GetDetailResponseDataStudent
	(*GetDetailResponseDataGradeType)(nil),                      // 18: lecturer_class.GetDetailResponseDataGradeType
	(*GetDetailResponseData)(nil),                               // 19: lecturer_class.GetDetailResponseData
	(*GetDetailResponse)(nil),                                   // 20: lecturer_class.GetDetailResponse
	(*BulkGradeStudentClassRequestStudentGrade)(nil),            // 21: lecturer_class.BulkGradeStudentClassRequestStudentGrade
	(*BulkGradeStudentClassRequestStudent)(nil),                 // 22: lecturer_class.BulkGradeStudentClassRequestStudent
	(*BulkGradeStudentClassRequest)(nil),                        // 23: lecturer_class.BulkGradeStudentClassRequest
	(*BulkGradeStudentClassResponseData)(nil),                   // 24: lecturer_class.BulkGradeStudentClassResponseData
	(*BulkGradeStudentClassResponse)(nil),                       // 25: lecturer_class.BulkGradeStudentClassResponse
}
var file_lecturer_class_proto_depIdxs = []int32{
	3,  // 0: lecturer_class.GetActiveSemesterClassListResponseDataClass.lecturers:type_name -> lecturer_class.GetActiveSemesterClassListResponseDataClassLecturer
	4,  // 1: lecturer_class.GetActiveSemesterClassListResponseData.classes:type_name -> lecturer_class.GetActiveSemesterClassListResponseDataClass
	0,  // 2: lecturer_class.GetActiveSemesterClassListResponse.meta:type_name -> lecturer_class.Meta
	5,  // 3: lecturer_class.GetActiveSemesterClassListResponse.data:type_name -> lecturer_class.GetActiveSemesterClassListResponseData
	0,  // 4: lecturer_class.GetAssignedClassResponse.meta:type_name -> lecturer_class.Meta
	8,  // 5: lecturer_class.GetAssignedClassResponse.data:type_name -> lecturer_class.GetAssignedClassResponseData
	11, // 6: lecturer_class.GetAssignedScheduleResponseData.single_day_schedules:type_name -> lecturer_class.GetAssignedScheduleResponseDataSingleDaySchedule
	0,  // 7: lecturer_class.GetAssignedScheduleResponse.meta:type_name -> lecturer_class.Meta
	12, // 8: lecturer_class.GetAssignedScheduleResponse.data:type_name -> lecturer_class.GetAssignedScheduleResponseData
	16, // 9: lecturer_class.GetDetailResponseDataStudent.grades:type_name -> lecturer_class.GetDetailResponseDataStudentGrade
	15, // 10: lecturer_class.GetDetailResponseData.grade_components:type_name -> lecturer_class.GetDetailResponseDataGradeComponent
	17, // 11: lecturer_class.GetDetailResponseData.students:type_name -> lecturer_class.GetDetailResponseDataStudent
	18, // 12: lecturer_class.GetDetailResponseData.grade_types:type_name -> lecturer_class.GetDetailResponseDataGradeType
	0,  // 13: lecturer_class.GetDetailResponse.meta:type_name -> lecturer_class.Meta
	19, // 14: lecturer_class.GetDetailResponse.data:type_name -> lecturer_class.GetDetailResponseData
	21, // 15: lecturer_class.BulkGradeStudentClassRequestStudent.grades:type_name -> lecturer_class.BulkGradeStudentClassRequestStudentGrade
	22, // 16: lecturer_class.BulkGradeStudentClassRequest.students:type_name -> lecturer_class.BulkGradeStudentClassRequestStudent
	0,  // 17: lecturer_class.BulkGradeStudentClassResponse.meta:type_name -> lecturer_class.Meta
	24, // 18: lecturer_class.BulkGradeStudentClassResponse.data:type_name -> lecturer_class.BulkGradeStudentClassResponseData
	2,  // 19: lecturer_class.LecturerClassHandler.GetActiveSemesterClassList:input_type -> lecturer_class.GetActiveSemesterClassListRequest
	7,  // 20: lecturer_class.LecturerClassHandler.GetAssignedClass:input_type -> lecturer_class.GetAssignedClassRequest
	10, // 21: lecturer_class.LecturerClassHandler.GetAssignedSchedule:input_type -> lecturer_class.GetAssignedScheduleRequest
	14, // 22: lecturer_class.LecturerClassHandler.GetDetail:input_type -> lecturer_class.GetDetailRequest
	23, // 23: lecturer_class.LecturerClassHandler.BulkGradeStudentClass:input_type -> lecturer_class.BulkGradeStudentClassRequest
	6,  // 24: lecturer_class.LecturerClassHandler.GetActiveSemesterClassList:output_type -> lecturer_class.GetActiveSemesterClassListResponse
	9,  // 25: lecturer_class.LecturerClassHandler.GetAssignedClass:output_type -> lecturer_class.GetAssignedClassResponse
	13, // 26: lecturer_class.LecturerClassHandler.GetAssignedSchedule:output_type -> lecturer_class.GetAssignedScheduleResponse
	20, // 27: lecturer_class.LecturerClassHandler.GetDetail:output_type -> lecturer_class.GetDetailResponse
	25, // 28: lecturer_class.LecturerClassHandler.BulkGradeStudentClass:output_type -> lecturer_class.BulkGradeStudentClassResponse
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_lecturer_class_proto_init() }
func file_lecturer_class_proto_init() {
	if File_lecturer_class_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lecturer_class_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSemesterClassListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSemesterClassListResponseDataClassLecturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSemesterClassListResponseDataClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSemesterClassListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveSemesterClassListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedClassResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedScheduleResponseDataSingleDaySchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedScheduleResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataGradeComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataStudentGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataStudent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseDataGradeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkGradeStudentClassRequestStudentGrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkGradeStudentClassRequestStudent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkGradeStudentClassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkGradeStudentClassResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_class_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkGradeStudentClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lecturer_class_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lecturer_class_proto_goTypes,
		DependencyIndexes: file_lecturer_class_proto_depIdxs,
		MessageInfos:      file_lecturer_class_proto_msgTypes,
	}.Build()
	File_lecturer_class_proto = out.File
	file_lecturer_class_proto_rawDesc = nil
	file_lecturer_class_proto_goTypes = nil
	file_lecturer_class_proto_depIdxs = nil
}
